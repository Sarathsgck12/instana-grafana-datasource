{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///external \"lodash\"","webpack:///external \"@grafana/ui\"","webpack:///external \"@grafana/data\"","webpack:///./components/plugin.css?ac86","webpack:///../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack:///../node_modules/css-loader/dist/runtime/api.js","webpack:///external \"@grafana/runtime\"","webpack:///./components/plugin.css","webpack:///./instana-grafana.css?3c02","webpack:///./instana-grafana.css","webpack:///./components/ApplicationServiceEndpointMetrics/ApplicationBoundaryScope.css?0b42","webpack:///./components/ApplicationServiceEndpointMetrics/ApplicationBoundaryScope.css","webpack:///../node_modules/tslib/tslib.es6.js","webpack:///./util/request_handler.ts","webpack:///./util/target_util.ts","webpack:///./GlobalVariables.ts","webpack:///./util/time_util.ts","webpack:///./cache.ts","webpack:///./datasources/DataSource_Slo.ts","webpack:///./lists/metric_categories.ts","webpack:///./util/queryInterval_check.ts","webpack:///./lists/granularities.ts","webpack:///./lists/rollups.ts","webpack:///./util/rollup_granularity_util.ts","webpack:///./lists/max_metrics.ts","webpack:///./datasources/Datasource_Infrastructure.ts","webpack:///./util/delta_util.ts","webpack:///./util/instana_version.ts","webpack:///./util/aggregation_util.ts","webpack:///./util/analyze_util.ts","webpack:///./datasources/DataSource_Website.ts","webpack:///./lists/default_metric_catalog.ts","webpack:///./datasources/DataSource_Application.ts","webpack:///./datasources/DataSource_Service.ts","webpack:///./datasources/DataSource_Endpoint.ts","webpack:///./migration.ts","webpack:///./datasources/DataSource.ts","webpack:///./util/proxy_check.ts","webpack:///./components/ConfigEditor.tsx","webpack:///./components/FormField/FormWrapper.tsx","webpack:///./components/FormField/FormSwitch.tsx","webpack:///./components/Infrastructure/Custom/FreeTextMetrics.tsx","webpack:///./lists/aggregation_function.ts","webpack:///./components/AdvancedSettings/AggregateQuery.tsx","webpack:///./components/FormField/FormInput.tsx","webpack:///./components/AdvancedSettings/AdvancedSettings.tsx","webpack:///./lists/apply_call_to_entities.ts","webpack:///./components/Entity/Entity.tsx","webpack:///./components/Analyze/ApplicationCallsMetrics.tsx","webpack:///./components/ApplicationServiceEndpointMetrics/ApplicationBoundaryScope.tsx","webpack:///./components/ApplicationServiceEndpointMetrics/ApplicationServiceEndpointMetrics.tsx","webpack:///./components/FormField/FormTextArea.tsx","webpack:///./components/Infrastructure/Explore.tsx","webpack:///./lists/operators.ts","webpack:///./components/Analyze/Filter.tsx","webpack:///./components/FormField/FormSelect.tsx","webpack:///./components/Infrastructure/QueryType.tsx","webpack:///./components/Infrastructure/Infrastructure.tsx","webpack:///./components/Metric/Metric.tsx","webpack:///./components/Infrastructure/Custom/MetricFilter.tsx","webpack:///./lists/slo_specifics.ts","webpack:///./components/SLOInformation/SloInformation.tsx","webpack:///./lists/beacon_types.ts","webpack:///./components/Analyze/WebsiteMetrics.tsx","webpack:///./components/QueryEditor.tsx","webpack:///./module.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__3__","api","content","default","options","exported","locals","memo","isOldIE","Boolean","window","document","all","atob","getTarget","target","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","e","stylesInDom","getIndexByIdentifier","identifier","result","length","modulesToDom","list","idCountMap","identifiers","item","id","base","count","concat","index","obj","css","media","sourceMap","references","updater","push","addStyle","insertStyleElement","style","createElement","attributes","nonce","keys","forEach","setAttribute","insert","Error","appendChild","textStore","replaceText","replacement","filter","join","applyToSingletonTag","remove","styleSheet","cssText","cssNode","createTextNode","childNodes","removeChild","insertBefore","applyToTag","removeAttribute","btoa","unescape","encodeURIComponent","JSON","stringify","firstChild","singleton","singletonCounter","update","styleIndex","parentNode","removeStyleElement","newObj","lastIdentifiers","newList","toString","newLastIdentifiers","_i","_index","splice","useSourceMap","this","map","cssMapping","sourceMapping","base64","data","sourceURLs","sources","source","sourceRoot","cssWithMappingToString","mediaQuery","dedupe","alreadyImportedModules","__WEBPACK_EXTERNAL_MODULE__7__","___CSS_LOADER_API_IMPORT___","extendStatics","b","setPrototypeOf","__proto__","Array","__extends","TypeError","String","__","constructor","__assign","assign","arguments","apply","__rest","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","iterator","v","op","pop","__read","ar","error","getRequest","endpoint","swallowError","maxRetries","doRequest","method","url","postRequest","request","useProxy","Authorization","apiToken","datasourceRequest","status","errors","includes","setTimeout","emptyResultData","refId","datapoints","buildTimeSeries","ALL_APPLICATIONS","ALL_ENDPOINTS","readTime","time","from","Math","floor","Date","valueOf","getTime","to","windowSize","getWindowSize","timeFilter","getTimeKey","msToMin","hoursToMs","hours","floorToGranularity","millis","granularity","granularityInMs","ceilToGranularity","ceil","store","put","ttl","undefined","del","expiry","now","timeout","clearTimeout","instanaOptions","sliReportsCache","getConfiguredSLIs","sliReports","response","sliName","runQuery","sloReport","sloSpecific","sloValue","extractSpecificValueFromSLI","sliResult","buildResultArray","sli","errorBudgetRemaining","buildViolationDistributionTimeSeries","violationDistribution","timestamp","series","greens","reds","greys","isInvalidQueryInterval","queryIntervalLimit","availableFor","rollup","getDefaultChartGranularity","getPossibleGranularities","maxValues","possibleGranularities","granularities","getDefaultMetricRollupDuration","getPossibleRollups","possibleRollups","rollups","rollupDefinition","rollUp","timeToLiveSnapshotInfoCache","snapshotCache","snapshotInfoCache","catalogCache","typeCache","queryinterval_limit_infra","tagFilterExpression","fetchExploreEntities","metric","showAllMetrics","freeTextMetrics","fetchSnapshotsForTarget","snapshots","fetchMultipleMetricsForSnapshots","allMetrics","metrics","extractMetricsFromText","fetchMetricsForSnapshots","freeText","metricsString","replace","split","each","metricString","parse","slice","resultPromises","allResults","res","snapshot","fetchMetricsForSnapshot","snapshotId","timeInterval","timeseries","readTimeSeries","values","aggregation","buildLabel","host","stableHash","displayMaxMetricValue","maxValue","getMaxMetricValue","buildMaxMetricTarget","convertRelativeToAbsolute","maxMetrics","max_metrics","find","resultLabel","maxLabel","convertMetricNameToMaxLabel","datapoint","getEntityTypes","entityTypes","typesResponse","entry","plugin","sortBy","fetchTypesForTarget","query","fetchSnapshotTypesUrl","entityQuery","showOffline","payload","pagination","retrievalSize","groupBy","type","timeFrame","message","items","entity","tags","getMetricsCatalog","metricCategory","catalogResponse","metricId","description","aggregations","entityType","pluginId","buildQuery","buildSnapshotCacheKey","fetchSnapshotContextsUrl","contextsResponse","snapshotInfo","fetchSnapshotUrl","snapshotResponse","reduceSnapshot","compact","pick","correctMeanToSum","secondMultiplier","parseInt","getHostSuffix","labelFormat","timeShift","timeShiftIsValid","omitLabels","versionCache","getVersion","cachedVersion","imageTag","majorVersion","aggregateTarget","targetLabel","customFilters","aggregationFunction","buildAggregationLabel","concatedTargetData","concatTargetData","aggregatedData","dataGroupedByTimestamp","aggregationLabel","timestampData","valuesOfTimestamp","aggregatedValue","toLowerCase","sum","mean","min","max","aggregateDataOfTimestamp","buildResult","createTagFilter","tagFilter","tag","operator","stringValue","numberValue","booleanValue","readItemMetrics","getLabel","flatten","websitesCache","miscCache","queryinterval_limit_website_metrics","group","fetchAnalyzeMetricsForWebsite","buildAnalyzeWebsiteLabel","getWebsites","websites","websitesResponse","website","getWebsiteTags","websiteTags","tagsResponse","getWebsiteMetricsCatalog","websiteCatalog","transformAggregations","sort","beaconTypes","transformBeaconTypes","a","tagFilters","filters","isValid","groupbyTag","groupbyTagSecondLevelKey","applicationsCache","queryinterval_limit_app_calls","fetchAnalyzeMetricsForApplication","showWarningCantShowAllResults","canLoadMore","buildAnalyzeApplicationLabel","getApplications","applications","paginateApplications","flattenDeep","pageSet","orderBy","boundaryScope","application","results","page","pageSize","pageLimit","queryParameters","totalHits","getApplicationTags","applicationTags","version","getCatalog","catalog","mapCatalogResponse","getCatalogFromDeprecatedEndpoint","canApplyToSource","canApplyToDestination","getApplicationMetricsCatalog","applicationCallToEntity","getTagEntity","callToEntity","logicalOperator","elements","selectedEntity","fetchApplicationMetrics","applicationBoundaryScope","buildApplicationMetricLabel","servicesCache","getServicesOfApplication","applicationId","services","paginateServices","service","fetchServiceMetrics","buildServiceMetricLabel","endpointsCache","getEndpointsOfService","serviceId","endpoints","paginateEndpoints","fetchEndpointMetrics","endpointId","buildEndpointMetricLabel","selectedApplication","cf","metric_categories","category","instanceSettings","jsonData","instanaUrl","availableGranularities","availableRollups","availableTimeIntervals","dataSourceSlo","dataSourceInfrastructure","dataSourceWebsite","dataSourceApplication","dataSourceService","dataSourceEndpoint","resultCache","DataSource","range","targets","pseudoHash","targetTimeFilter","hide","setPossibleTimeIntervals","getDefaultTimeInterval","convertTimeShiftToMillis","applyTimeShiftOnTimeFilter","omit","mapValues","adjustTimeFilterIfCached","buildTargetWithAppendedDataResult","buildTarget","getApplicationServiceEndpointMetrics","targetData","targetAndData","resultData","cacheResultIfNecessary","cloneDeep","applyTimeShiftIfNecessary","aggregateDataIfNecessary","queryinterval_limit_app_metrics","applyTimeShiftOnData","supportsDeltaRequests","hasResult","cachedObj","timeshift","newData","aggregateGraphs","hideOriginalGraphs","dt","appendResult","newDeltaData","cachedData","cachedResult","deltaData","matchingCachedDataIndex","findIndex","sortedUniqBy","takeRight","t1","t2","newFrom","fromDefault","penultimate","getDeltaRequestTimestamp","newTo","getSloReports","fetchApplications","getTimeFilter","fetchApplicationTags","fetchServices","fetchEndpoints","fetchWebsites","parseTimeShift","endsWith","testDatasource","title","statusText","versions","props","onInstanaOptionsChange","eventItem","onOptionsChange","currentTarget","debouncedDetectFeatures","onSwitchChange","settings","debounce","detectFeatures","setState","canUseProxy","canQueryOfflineSnapshots","state","render","className","horizontal","required","width","placeholder","onChange","event","suffix","href","theme","allowInfraExplore","FormWrapper","display","disabled","opacity","pointerEvents","stretch","children","Switch","tooltip","queryKeyword","labelWidth","remainingProps","checked","Component","debouncedRunQuery","onRunQuery","onUseFreeTextMetricsChange","loadEntityTypes","useFreeTextMetrics","onFreeTextMetricsChange","onAggregateGraphs","onHideOriginalGraph","onAggregationFunctionChange","showAdditionalSettings","legendFormat","menuPlacement","isSearchable","inputWidth","legendFormatPlaceholders","legendFormatTooltips","onLegendFormatChange","onTimeShiftChange","match","onShowAdvancedSettingsChange","showAdvancedSettings","legendFormatPlaceholder","setLegendFormatPlaceholder","setLegendFormatTooltip","hidden","invalid","dropdown","position","background","height","marginRight","dropdown__list","transition","maxHeight","overflow","zIndex","dropdown__list__active","iconTextContainer","iconStyle","alignItems","justifyContent","iconTextStyle","padding","destinationIcon","transform","fill","sourceIcon","Entity","dropdown__list__item","colors","bg2","cursor","listStyle","borderRadius","active","setActive","handleClick","onClick","onBlur","contentEditable","placement","isUnmounting","onApplicationChange","onGroupChange","showGroupBySecondLevel","onApplicationCallToEntityChange","onCallToEntityChange","onGroupByTagSecondLevelKeyChange","componentDidMount","datasource","unshift","updateGroups","updateMetrics","componentWillUnmount","groups","inboundIcon","allIcon","loadServices","loadEndpoints","onServiceChange","onEndpointChange","onApplicationBoundaryScopeChange","scope","imgUrl","loadApplications","apps","app","rows","onFilterChange","isValidJson","OPERATOR_STRING","OPERATOR_STRING_SET","OPERATOR_NUMBER","OPERATOR_BOOLEAN","OPERATOR_KEY_VALUE","addTagFilter","filterOperatorsOnType","removeTagFilter","validateChangeAndRun","onOperatorChange","onTagFilterStringValueChange","onTagFilterNumberValueChange","valueAsNumber","operators","canShowStringInput","canShowNumberInput","onTagFilterBooleanValueChange","runDebounced","isNaN","listFilter","singleFilter","variant","searchable","onQueryChange","updateQueryTypes","debouncedEntityTypes","onTypeChange","queryTypes","noOptionsMessage","onMetricChange","canShowMaxMetricValue","onTimeIntervalChange","onAggregationChange","onShowMaxValueChange","onShowAllMetricsChange","availableMetrics","possibleTimeIntervals","possibleAggregations","canShowAggregation","canSelectAggregation","canShowAllMetrics","addCustomFilter","removeCustomFilter","onSloChange","slo","onSloValueChange","onSloSpecificChange","sloReports","isValidSlo","loadSloReports","val","valid","shouldComponentUpdate","nextProps","nextState","nextContext","onWebsiteChange","onBeaconTypeChange","filterMetricsOnType","beacon_types","websiteMetrics","onCategoryChange","newCategory","selectionReset","changeAndRun","onMetricsFilter","setMetricPlaceholder","filterForEntityType","findMatchingEntityTypes","filterResults","filterEntityTypes","types","newAvailableMetrics","applyFilterToMetricList","isAbleToShowAllMetrics","checkMetricAndRefresh","defaultQuery","selectedWindowSize","componentDidUpdate","prevProps","prevState","nrOfTotalResults","filterResult","filteredMetrics","resetMetricSelection","resetEntityTypeSelection","resetEntitySelection","resetServices","resetEndpoints","resetSLO","categories","text","color","setConfigEditor","setQueryEditor"],"mappings":"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","file":"module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","var api = require(\"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../node_modules/css-loader/dist/cjs.js??ref--8-1!../../node_modules/postcss-loader/src/index.js??ref--8-2!../../node_modules/sass-loader/dist/cjs.js!./plugin.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","\"use strict\";\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce = typeof __webpack_nonce__ !== 'undefined' ? __webpack_nonce__ : null;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && btoa) {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}","module.exports = __WEBPACK_EXTERNAL_MODULE__7__;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(true);\n// Module\nexports.push([module.id, \".entityDropdown{min-width:80px}.settings{max-width:600px}\", \"\",{\"version\":3,\"sources\":[\"plugin.css\"],\"names\":[],\"mappings\":\"AAAA,gBAAgB,cAAc,CAAC,UAAU,eAAe\",\"file\":\"plugin.css\",\"sourcesContent\":[\".entityDropdown{min-width:80px}.settings{max-width:600px}\"]}]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../node_modules/css-loader/dist/cjs.js??ref--8-1!../node_modules/postcss-loader/src/index.js??ref--8-2!../node_modules/sass-loader/dist/cjs.js!./instana-grafana.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(true);\n// Module\nexports.push([module.id, \"path[d=\\\"M18.71,7.21a1,1,0,0,0-1.42,0L9.84,14.67,6.71,11.53A1,1,0,1,0,5.29,13l3.84,3.84a1,1,0,0,0,1.42,0l8.16-8.16A1,1,0,0,0,18.71,7.21Z\\\"]{display:none}\", \"\",{\"version\":3,\"sources\":[\"instana-grafana.css\"],\"names\":[],\"mappings\":\"AAAA,0IAA0I,YAAY\",\"file\":\"instana-grafana.css\",\"sourcesContent\":[\"path[d=\\\"M18.71,7.21a1,1,0,0,0-1.42,0L9.84,14.67,6.71,11.53A1,1,0,1,0,5.29,13l3.84,3.84a1,1,0,0,0,1.42,0l8.16-8.16A1,1,0,0,0,18.71,7.21Z\\\"]{display:none}\"]}]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ref--8-1!../../../node_modules/postcss-loader/src/index.js??ref--8-2!../../../node_modules/sass-loader/dist/cjs.js!./ApplicationBoundaryScope.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(true);\n// Module\nexports.push([module.id, \".dropdown{position:relative;background:transparent;width:\\\"32px\\\";height:\\\"32px\\\";margin-right:\\\"4px\\\"}.dropdown-list{transition:max-height .2s ease-out;max-height:0;overflow:hidden;z-index:2;position:absolute}.dropdown-list-active{overflow:hidden;z-index:2;max-height:1000px;opacity:1;position:absolute}.iconTextContainer{display:inline-flex}.iconStyle{display:flex;align-items:center;justify-content:center}.iconTextStyle{padding:7px}\", \"\",{\"version\":3,\"sources\":[\"ApplicationBoundaryScope.css\"],\"names\":[],\"mappings\":\"AAAA,UAAU,iBAAiB,CAAC,sBAAsB,CAAC,YAAY,CAAC,aAAa,CAAC,kBAAkB,CAAC,eAAe,kCAAkC,CAAC,YAAY,CAAC,eAAe,CAAC,SAAS,CAAC,iBAAiB,CAAC,sBAAsB,eAAe,CAAC,SAAS,CAAC,iBAAiB,CAAC,SAAS,CAAC,iBAAiB,CAAC,mBAAmB,mBAAmB,CAAC,WAAW,YAAY,CAAC,kBAAkB,CAAC,sBAAsB,CAAC,eAAe,WAAW\",\"file\":\"ApplicationBoundaryScope.css\",\"sourcesContent\":[\".dropdown{position:relative;background:transparent;width:\\\"32px\\\";height:\\\"32px\\\";margin-right:\\\"4px\\\"}.dropdown-list{transition:max-height .2s ease-out;max-height:0;overflow:hidden;z-index:2;position:absolute}.dropdown-list-active{overflow:hidden;z-index:2;max-height:1000px;opacity:1;position:absolute}.iconTextContainer{display:inline-flex}.iconStyle{display:flex;align-items:center;justify-content:center}.iconTextStyle{padding:7px}\"]}]);\n// Exports\nmodule.exports = exports;\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { getBackendSrv } from '@grafana/runtime';\nimport { BackendSrvRequest } from '@grafana/runtime/services/backendSrv';\nimport { InstanaOptions } from '../types/instana_options';\nimport { DataSourceInstanceSettings } from '@grafana/data';\n\nexport const getRequest = (options: InstanaOptions, endpoint: string, swallowError = false, maxRetries = 1) => {\n  const request = {\n    method: 'GET',\n    url: options.url + endpoint,\n  };\n\n  return doRequest(options, request, swallowError, maxRetries);\n};\n\nexport const postRequest = (\n  options: InstanaOptions,\n  endpoint: string,\n  data: {},\n  swallowError = false,\n  maxRetries = 0\n) => {\n  const request = {\n    method: 'POST',\n    url: options.url + endpoint,\n    data: data,\n  };\n\n  return doRequest(options, request, swallowError, maxRetries);\n};\n\nfunction doRequest(\n  options: InstanaOptions,\n  request: BackendSrvRequest,\n  swallowError: boolean,\n  maxRetries: number\n): any {\n  if (!options.useProxy) {\n    request['headers'] = {\n      Authorization: 'apiToken ' + options.apiToken,\n    };\n  }\n  return getBackendSrv()\n    .datasourceRequest(request)\n    .catch((error) => {\n      if (error.status === 429) {\n        // if the error was caused by a concurrent execution limit, we will retry\n        if (\n          maxRetries > 0 &&\n          error.data?.errors &&\n          error.data.errors[0] &&\n          error.data.errors[0].includes('concurrent')\n        ) {\n          const backoff = maxRetries >= 4 ? 10000 : (4 - maxRetries) * 20000; // something between 10 and 60 seconds\n          return new Promise((resolve) => setTimeout(resolve, backoff)).then(() => {\n            return doRequest(options, request, swallowError, maxRetries - 1);\n          });\n        }\n        throw new Error('API limit is reached.');\n        return;\n      }\n\n      if (swallowError && (error.status >= 400 || error.status < 500)) {\n        console.log(error);\n        return;\n      }\n      if (maxRetries > 0 && error.status >= 500) {\n        return doRequest(options, request, swallowError, maxRetries - 1);\n      }\n      throw error;\n    });\n}\n\nexport function instanaUrl(instanceSettings: DataSourceInstanceSettings<InstanaOptions>): string {\n  if (instanceSettings.jsonData.useProxy) {\n    return instanceSettings.url + '/instana'; // to match proxy route in plugin.json\n  } else {\n    return instanceSettings.jsonData.url;\n  }\n}\n","import { TimeSeries, TimeSeriesPoints } from '@grafana/data';\n\nexport function emptyResultData(refId: string): TimeSeries {\n  return {\n    target: refId,\n    datapoints: [],\n  };\n}\n\nexport function buildTimeSeries(label: string, refId: string, datapoints: TimeSeriesPoints): TimeSeries {\n  return {\n    target: label,\n    refId: refId,\n    datapoints: datapoints,\n  };\n}\n","/* CONFIG */\nexport const PAGINATION_LIMIT = 15; // pagesize=200 => 3000 results in dropdown (~30sec.)\nexport const CACHE_MAX_AGE = 60000;\nexport const SEPARATOR = '|';\n\n/* CATEGORIES */\nexport const BUILT_IN_METRICS = 0;\nexport const CUSTOM_METRICS = 1;\nexport const ANALYZE_APPLICATION_METRICS = 2;\nexport const ANALYZE_WEBSITE_METRICS = 3;\nexport const APPLICATION_SERVICE_ENDPOINT_METRICS = 4; // replaces previous ->\n// APPLICATION_METRICS = '4';\n// SERVICE_METRICS = '5';\n// ENDPOINT_METRICS = '6';\nexport const SLO_INFORMATION = 7;\nexport const INFRASTRUCTURE_EXPLORE = 8;\n\n/* DROPDOWN DEFAULTS */\nexport const ALL_APPLICATIONS = '-- No Application Filter --';\nexport const ALL_WEBSITES = '-- No Website Filter --';\nexport const ALL_SERVICES = '-- No Service Filter --';\nexport const ALL_ENDPOINTS = '-- No Endpoint Filter --';\n\n/* PLACEHOLDER */\nexport const PLEASE_SPECIFY = 'Please specify';\n","import { TimeRange } from '@grafana/data/types/time';\nimport TimeFilter from '../types/time_filter';\nimport { SEPARATOR } from '../GlobalVariables';\n\nexport function readTime(time: TimeRange): TimeFilter {\n  const from = Math.floor(new Date(time!.from.valueOf()).getTime() / 1000) * 1000;\n  const to = Math.floor(new Date(time!.to.valueOf()).getTime() / 1000) * 1000;\n  return {\n    from: from,\n    to: to,\n    windowSize: to - from,\n  };\n}\n\nexport function getWindowSize(timeFilter: TimeFilter): number {\n  return timeFilter.from ? timeFilter.to - timeFilter.from : timeFilter.windowSize;\n}\n\nexport function getTimeKey(timeFilter: TimeFilter): string {\n  // time might be part of a cache key as this can cause different results\n  return msToMin(timeFilter.from) + SEPARATOR + msToMin(timeFilter.to);\n}\n\nfunction msToMin(time: number): number {\n  return Math.floor(time / 60000);\n}\n\nexport function hoursToMs(hours: any): number {\n  if (hours > 0) {\n    return hours * 60 * 60 * 1000;\n  }\n  return 0;\n}\n\nexport function floorToGranularity(millis: number, granularity: number): number {\n  const granularityInMs = granularity * 1000;\n  return Math.floor(millis / granularityInMs) * granularityInMs;\n}\n\nexport function ceilToGranularity(millis: number, granularity: number): number {\n  const granularityInMs = granularity * 1000;\n  return Math.ceil(millis / granularityInMs) * granularityInMs;\n}\n","export default class Cache<T> {\n  store: any;\n\n  constructor() {\n    this.store = {};\n  }\n\n  put(key: string, value: T, ttl = 70000): void {\n    if (key === undefined || value === undefined) {\n      return;\n    }\n\n    this.del(key);\n    this.store[key] = {\n      value,\n      expiry: Date.now() + ttl,\n      timeout: setTimeout(() => {\n        this.del(key);\n      }, ttl),\n    };\n  }\n\n  get(key: string): T {\n    var item = this.store[key];\n    if (item && !(item.expiry && item.expiry > Date.now())) {\n      this.del(key);\n      item = undefined;\n    }\n    return item && item.value;\n  }\n\n  del(key: string): void {\n    if (this.store.hasOwnProperty(key)) {\n      clearTimeout(this.store[key].timeout);\n      delete this.store[key];\n    }\n  }\n}\n","import { SelectableValue, TimeSeries, TimeSeriesPoints } from '@grafana/data';\nimport { buildTimeSeries, emptyResultData } from '../util/target_util';\nimport { InstanaOptions } from '../types/instana_options';\nimport { InstanaQuery } from '../types/instana_query';\nimport { getRequest } from '../util/request_handler';\nimport { getWindowSize } from '../util/time_util';\nimport TimeFilter from '../types/time_filter';\nimport Cache from '../cache';\nimport _ from 'lodash';\n\nexport class DataSourceSlo {\n  sliReportsCache: Cache<Promise<SelectableValue[]>>;\n  instanaOptions: InstanaOptions;\n\n  constructor(options: InstanaOptions) {\n    this.instanaOptions = options;\n    this.sliReportsCache = new Cache<Promise<SelectableValue[]>>();\n  }\n\n  getConfiguredSLIs(): Promise<SelectableValue[]> {\n    let sliReports = this.sliReportsCache.get('sliReports');\n    if (sliReports) {\n      return sliReports;\n    }\n\n    sliReports = getRequest(this.instanaOptions, '/api/settings/sli').then((response: any) =>\n      _.map(response.data, (r) => {\n        return {\n          key: r.id,\n          label: r.sliName,\n        };\n      })\n    );\n\n    this.sliReportsCache.put('sliReports', sliReports);\n    return sliReports;\n  }\n\n  runQuery(target: InstanaQuery, timeFilter: TimeFilter) {\n    //avoid involid calls\n    if (\n      !target ||\n      !target.sloReport ||\n      !target.sloReport.key ||\n      !target.sloSpecific ||\n      !target.sloSpecific.key ||\n      !target.sloValue\n    ) {\n      return Promise.resolve(emptyResultData(target.refId));\n    }\n\n    let endpoint =\n      '/api/sli/report/' +\n      target.sloReport.key +\n      '?from=' +\n      timeFilter.from +\n      '&to=' +\n      timeFilter.to +\n      '&slo=' +\n      target.sloValue;\n    return getRequest(this.instanaOptions, endpoint).then((response: any) => {\n      return this.extractSpecificValueFromSLI(target, response.data, timeFilter);\n    });\n  }\n\n  extractSpecificValueFromSLI(target: InstanaQuery, sliResult: any, timeFilter: TimeFilter) {\n    if (target.sloSpecific.key === 'SLI') {\n      return [\n        buildTimeSeries(target.sloSpecific.label!, target.refId, this.buildResultArray(sliResult.sli, timeFilter.to)),\n      ];\n    } else if (target.sloSpecific.key === 'Remaining Error Budget') {\n      return [\n        buildTimeSeries(\n          target.sloSpecific.label!,\n          target.refId,\n          this.buildResultArray(sliResult.errorBudgetRemaining, timeFilter.to)\n        ),\n      ];\n    } else if (target.sloSpecific.key === 'Timeseries') {\n      return this.buildViolationDistributionTimeSeries(target, sliResult.violationDistribution, timeFilter);\n    }\n\n    return [emptyResultData(target.refId)];\n  }\n\n  buildResultArray(result: number, timestamp: number): TimeSeriesPoints {\n    return [[result, timestamp]];\n  }\n\n  buildViolationDistributionTimeSeries(target: InstanaQuery, series: any, timeFilter: TimeFilter): TimeSeries[] {\n    const greens: any[] = [];\n    const reds: any[] = [];\n    const greys: any[] = [];\n\n    let granularity = getWindowSize(timeFilter) / Object.keys(series).length;\n    _.forEach(series, (value: number, index: number) => {\n      if (value === 1) {\n        greens.push([1, timeFilter.from + index * granularity]);\n      } else if (value === 0) {\n        greys.push([1, timeFilter.from + index * granularity]);\n      } else if (value === -1) {\n        reds.push([1, timeFilter.from + index * granularity]);\n      }\n    });\n\n    const result: TimeSeries[] = [];\n    result.push(buildTimeSeries('No violation', target.refId, greens));\n    result.push(buildTimeSeries('Violation', target.refId, reds));\n    result.push(buildTimeSeries('No data', target.refId, greys));\n\n    return result;\n  }\n}\n","/**\n * Do not remove the commented stuff.\n */\nexport default [\n  {\n    label: 'Infrastructure built-in metrics',\n    key: 0,\n  },\n  {\n    label: 'Infrastructure custom metrics',\n    key: 1,\n  },\n  {\n    label: 'Infrastructure explore (beta)',\n    key: 8,\n  },\n  {\n    // replaces Application metrics(4) & Service metrics(5) & Endpoint metrics(6)\n    label: 'Application/service/endpoint metrics',\n    key: 4,\n  },\n  {\n    label: 'Analyze application calls',\n    key: 2,\n  },\n  {\n    label: 'Analyze website',\n    key: 3,\n  },\n  {\n    label: 'SLO information',\n    key: 7,\n  },\n];\n","/**\n * Util method to validate query intervals which are too big.\n *\n * @param windowSize in ms\n * @param queryIntervalLimit in ms\n */\nexport function isInvalidQueryInterval(windowSize: number, queryIntervalLimit?: number): boolean {\n  if (queryIntervalLimit) {\n    if (queryIntervalLimit > 0) {\n      return Math.floor(windowSize / 1000) * 1000 > queryIntervalLimit;\n    }\n    return false;\n  }\n\n  return false;\n}\n","export default [\n  {\n    value: 1, // 1s\n    label: '1s',\n  },\n  {\n    value: 5, // 5s\n    label: '5s',\n  },\n  {\n    value: 10, // 10s\n    label: '10s',\n  },\n  {\n    value: 60, // 1m\n    label: '1min',\n  },\n  {\n    value: 60 * 5, // 5m\n    label: '5min',\n  },\n  {\n    value: 60 * 10, // 10m\n    label: '10min',\n  },\n  {\n    value: 60 * 60, // 1h\n    label: '1h',\n  },\n  {\n    value: 60 * 60 * 5, // 5h\n    label: '5h',\n  },\n  {\n    value: 60 * 60 * 10, // 10h\n    label: '10h',\n  },\n  {\n    value: 60 * 60 * 24, // 1d\n    label: '1d',\n  },\n  {\n    value: 60 * 60 * 24 * 5, // 5d\n    label: '5d',\n  },\n  {\n    value: 60 * 60 * 24 * 10, // 10d\n    label: '10d',\n  },\n];\n","export default [\n  {\n    availableFor: 1000 * 60 * 60 * 24, // 1d\n    rollup: 1000, // 1s\n    label: '1s',\n  },\n  {\n    availableFor: 1000 * 60 * 60 * 24, // 1d\n    rollup: 1000 * 5, // 5s\n    label: '5s',\n  },\n  {\n    availableFor: 1000 * 60 * 60 * 24 * 31, // 1 month\n    rollup: 1000 * 60, // 1m\n    label: '1min',\n  },\n  {\n    availableFor: 1000 * 60 * 60 * 24 * 31 * 3, // 3 months\n    rollup: 1000 * 60 * 5, // 5m\n    label: '5min',\n  },\n  {\n    availableFor: 1000 * 60 * 60 * 24 * 31 * 12, // 1 year aka forever\n    rollup: 1000 * 60 * 60, // 1h\n    label: '1h',\n  },\n];\n","import granularities from '../lists/granularities';\nimport TimeFilter from '../types/time_filter';\nimport Selectable from '../types/selectable';\nimport { getWindowSize } from './time_util';\nimport rollups from '../lists/rollups';\n\nconst MAX_DATAPOINTS_ANALYZE = 600;\nconst MAX_DATAPOINTS_INFRASTRUCTURE = 800;\nconst UI_DATAPOINTS_ANALYZE = 80;\n\nfunction currentTime() {\n  return Date.now();\n}\n\nexport function getDefaultChartGranularity(windowSize: number): Selectable {\n  return getPossibleGranularities(windowSize, UI_DATAPOINTS_ANALYZE)[0];\n}\n\nexport function getPossibleGranularities(windowSize: number, maxValues = MAX_DATAPOINTS_ANALYZE): Selectable[] {\n  let possibleGranularities = granularities.filter(\n    (granularity) => windowSize / 1000 / granularity.value <= maxValues && granularity.value * 1000 <= windowSize\n  );\n\n  // window sizes of this length and up have a granularity of at least 1h\n  if (windowSize > 48000001) {\n    possibleGranularities = possibleGranularities.filter((granularity) => granularity.value >= 3600);\n  }\n\n  if (windowSize >= 1800000) {\n    possibleGranularities = possibleGranularities.filter((granularity) => granularity.value >= 60);\n  }\n\n  if (possibleGranularities.length > 0) {\n    return possibleGranularities.map((granularity) => ({\n      key: granularity.value.toString(),\n      label: granularity.label,\n    }));\n  }\n\n  return [\n    {\n      key: granularities[granularities.length - 1].value.toString(),\n      label: granularities[granularities.length - 1].label,\n    },\n  ];\n}\n\nexport function getDefaultMetricRollupDuration(timeFilter: TimeFilter): Selectable {\n  return getPossibleRollups(timeFilter)[0];\n}\n\nexport function getPossibleRollups(timeFilter: TimeFilter): Selectable[] {\n  // Ignoring time differences for now since small time differences\n  // can be accepted. This time is only used to calculate the rollup.\n  const now = currentTime();\n  const windowSize = getWindowSize(timeFilter);\n\n  let possibleRollups = rollups\n    .filter((rollupDefinition) => timeFilter.from >= now - rollupDefinition.availableFor)\n    .filter((rollUp) => windowSize >= rollUp.rollup && windowSize / rollUp.rollup <= MAX_DATAPOINTS_INFRASTRUCTURE);\n\n  if (possibleRollups.length > 0) {\n    return possibleRollups.map((rollup) => ({\n      key: rollup.rollup.toString(),\n      label: rollup.label,\n    }));\n  }\n\n  return [\n    {\n      key: rollups[rollups.length - 1].rollup.toString(),\n      label: rollups[rollups.length - 1].label,\n    },\n  ];\n}\n","export default [\n  {\n    key: 'cpu.used', // metric.key\n    value: 'cpu.count', // value of the metric found in GET /snapshots/{snapshotId}\n    label: 'cpu.max', // label that shall be shown as target in graph\n  },\n  {\n    key: 'memory.used',\n    value: 'memory.total',\n    label: 'memory.max',\n  },\n  {\n    key: 'openFiles.used',\n    value: 'openFiles.max',\n    label: 'openFiles.max',\n  },\n];\n","import { SelectableValue } from '@grafana/data';\nimport { InstanaOptions } from '../types/instana_options';\nimport { InstanaQuery } from '../types/instana_query';\nimport { getRequest, postRequest } from '../util/request_handler';\nimport TimeFilter from '../types/time_filter';\nimport Cache from '../cache';\nimport { CUSTOM_METRICS, SEPARATOR } from '../GlobalVariables';\nimport _ from 'lodash';\nimport { getTimeKey, hoursToMs } from '../util/time_util';\nimport { isInvalidQueryInterval } from '../util/queryInterval_check';\nimport { emptyResultData } from '../util/target_util';\nimport { getDefaultMetricRollupDuration } from '../util/rollup_granularity_util';\nimport max_metrics from '../lists/max_metrics';\n\nexport class DataSourceInfrastructure {\n  instanaOptions: InstanaOptions;\n  snapshotCache: Cache<Promise<SelectableValue[]>>;\n  snapshotInfoCache: Cache<Promise<SelectableValue[]>>;\n  catalogCache: Cache<Promise<SelectableValue[]>>;\n  typeCache: Cache<Promise<SelectableValue[]>>;\n  timeToLiveSnapshotInfoCache = 4000000; // set to 1,11 hour\n\n  constructor(options: InstanaOptions) {\n    this.instanaOptions = options;\n    this.snapshotCache = new Cache<Promise<SelectableValue[]>>();\n    this.snapshotInfoCache = new Cache<Promise<SelectableValue[]>>();\n    this.catalogCache = new Cache<Promise<SelectableValue[]>>();\n    this.typeCache = new Cache<Promise<SelectableValue[]>>();\n  }\n\n  runQuery(target: InstanaQuery, timeFilter: TimeFilter) {\n    // do not try to execute to big queries\n    if (isInvalidQueryInterval(timeFilter.windowSize, hoursToMs(this.instanaOptions.queryinterval_limit_infra))) {\n      throw new Error(\n        'Limit for maximum selectable windowsize exceeded, max is: ' +\n          this.instanaOptions.queryinterval_limit_infra +\n          ' hours'\n      );\n    }\n\n    if (target.tagFilterExpression) {\n      return this.fetchExploreEntities(target, timeFilter);\n    }\n\n    // do not try to retrieve data without selected metric\n    if ((!target.metric || !target.metric.key) && !target.showAllMetrics && !target.freeTextMetrics) {\n      return Promise.resolve(emptyResultData(target.refId));\n    }\n\n    // for every target, fetch snapshots in the selected timeframe that satisfy the lucene query.\n    return this.fetchSnapshotsForTarget(target, timeFilter).then((snapshots) => {\n      if (target.showAllMetrics) {\n        // only available for custom metrics\n        return this.fetchMultipleMetricsForSnapshots(target, snapshots, timeFilter, target.allMetrics);\n      } else if (target.freeTextMetrics) {\n        // only available for custom metrics\n        const metrics = this.extractMetricsFromText(target.freeTextMetrics);\n        return this.fetchMultipleMetricsForSnapshots(target, snapshots, timeFilter, metrics);\n      } else {\n        return this.fetchMetricsForSnapshots(target, snapshots, timeFilter, target.metric);\n      }\n    });\n  }\n\n  extractMetricsFromText(freeText: string): string[] {\n    const metricsString = freeText.replace(/\\s/g, '').split(',');\n    let metrics: string[] = [];\n    _.each(metricsString, (metricString) => metrics.push(JSON.parse('{ \"key\": \"' + metricString + '\"}')));\n\n    if (metrics.length > 4) {\n      metrics = metrics.slice(0, 4); // API supports up to 4 metrics at once\n    }\n\n    return metrics;\n  }\n\n  fetchMultipleMetricsForSnapshots(target: InstanaQuery, snapshots: any, timeFilter: TimeFilter, metrics: any) {\n    const resultPromises: any = [];\n    _.forEach(metrics, (metric) => {\n      resultPromises.push(this.fetchMetricsForSnapshots(target, snapshots, timeFilter, metric));\n    });\n\n    return Promise.all(resultPromises).then((allResults) => {\n      const allMetrics: any = [];\n      allResults.forEach((result: any) => result.forEach((s: any) => allMetrics.push(s)));\n      return allMetrics;\n    });\n  }\n\n  fetchMetricsForSnapshots(target: InstanaQuery, snapshots: any, timeFilter: TimeFilter, metric: any) {\n    let maxValues: any = [];\n    let res = _.map(snapshots, (snapshot, index) => {\n      // ...fetch the metric data for every snapshot in the results.\n      return this.fetchMetricsForSnapshot(snapshot.snapshotId, timeFilter, target.timeInterval.key, metric).then(\n        (response: any) => {\n          let timeseries = this.readTimeSeries(response.data.values, target.aggregation, timeFilter);\n          let result = {\n            target: this.buildLabel(snapshot.response, snapshot.host, target, index, metric),\n            datapoints: _.map(timeseries, (value) => [value.value, value.timestamp]),\n            refId: target.refId,\n            key: target.stableHash,\n          };\n\n          if (target.displayMaxMetricValue) {\n            const maxValue = this.getMaxMetricValue(target.metric, snapshot);\n            maxValues.push(this.buildMaxMetricTarget(target, timeseries, maxValue, result.target));\n            result.datapoints = this.convertRelativeToAbsolute(result.datapoints, maxValue);\n          }\n\n          return result;\n        }\n      );\n    });\n\n    return Promise.all(res).then((allResults) => {\n      if (target.displayMaxMetricValue) {\n        allResults = _.concat(res, maxValues);\n      }\n      return Promise.all(allResults);\n    });\n  }\n\n  getMaxMetricValue(metric: any, snapshot: any): number {\n    const maxMetrics: any = max_metrics;\n    return snapshot.response.data.data[_.find(maxMetrics, (m: any) => m.key === metric.key).value];\n  }\n\n  buildMaxMetricTarget(target: any, timeseries: any, maxValue: any, resultLabel: any) {\n    let datapoints = _.map(timeseries, (series) => {\n      return [maxValue, series.timestamp];\n    });\n\n    let maxLabel = this.convertMetricNameToMaxLabel(target.metric);\n\n    return {\n      target: resultLabel + ' ' + maxLabel,\n      datapoints: datapoints,\n      refId: target.refId,\n      key: target.stableHash + maxLabel,\n    };\n  }\n\n  convertMetricNameToMaxLabel(metric: any): string {\n    const maxMetrics: any = max_metrics;\n    return _.find(maxMetrics, (m) => m.key === metric.key).label;\n  }\n\n  convertRelativeToAbsolute(datapoints: any, maxValue: any) {\n    return _.map(datapoints, (datapoint) => {\n      if (datapoint[0]) {\n        return [datapoint[0] * maxValue, datapoint[1]];\n      }\n      return [null, datapoint[1]];\n    });\n  }\n\n  getEntityTypes(): Promise<SelectableValue[]> {\n    let entityTypes = this.typeCache.get('entityTypes');\n    if (entityTypes) {\n      return entityTypes;\n    }\n\n    entityTypes = getRequest(this.instanaOptions, '/api/infrastructure-monitoring/catalog/plugins').then(\n      (typesResponse: any) => {\n        const result = typesResponse.data.map((entry: any) => ({\n          key: entry.plugin,\n          label: entry.label,\n        }));\n\n        result.push({\n          key: 'regionEntity',\n          label: 'Region',\n        });\n\n        return _.sortBy(result, 'label');\n      }\n    );\n\n    this.typeCache.put('entityTypes', entityTypes);\n\n    return entityTypes;\n  }\n\n  fetchTypesForTarget(query: InstanaQuery, timeFilter: TimeFilter): any {\n    const fetchSnapshotTypesUrl =\n      `/api/snapshots/types` +\n      `?q=${encodeURIComponent(query.entityQuery)}` +\n      `&from=${timeFilter.from}` +\n      `&to=${timeFilter.to}` +\n      (this.instanaOptions.showOffline ? `` : `&time=${timeFilter.to}`);\n    return getRequest(this.instanaOptions, fetchSnapshotTypesUrl);\n  }\n\n  fetchExploreEntities(target: InstanaQuery, timeFilter: TimeFilter) {\n    const data = JSON.parse(target.tagFilterExpression);\n\n    const payload = {\n      tagFilterExpression: data.tagFilterExpression,\n      pagination: {\n        retrievalSize: 200,\n      },\n      groupBy: data.groupBy,\n      type: data.type,\n      metrics: data.metrics,\n      timeFrame: {\n        to: timeFilter.to,\n        windowSize: timeFilter.windowSize,\n      },\n    };\n\n    return postRequest(this.instanaOptions, '/api/infrastructure-monitoring/explore/groups', payload).then(\n      (res: any) => {\n        let result: any = [];\n\n        if (!res.data.data && res.data.errors.length >= 1) {\n          throw new Error(res.data.errors[0].message || res.data.errors[0]);\n        }\n\n        res.data.data.items.forEach((entity: any) => {\n          for (var metric in entity.metrics) {\n            result.push({\n              target: entity.tags[data.groupBy] + ' - ' + metric,\n              datapoints: entity.metrics[metric]\n                ? entity.metrics[metric].map((datapoint: any) => [datapoint[1], datapoint[0]])\n                : [],\n              refId: target.refId,\n              key: target.stableHash,\n            });\n          }\n        });\n\n        return result;\n      }\n    );\n  }\n\n  getMetricsCatalog(plugin: SelectableValue, metricCategory: number): Promise<SelectableValue[]> {\n    const key = plugin.key + '|' + metricCategory;\n\n    let metrics = this.catalogCache.get(key);\n    if (metrics) {\n      return metrics;\n    }\n\n    const filter = metricCategory === CUSTOM_METRICS ? 'custom' : 'builtin';\n    metrics = getRequest(\n      this.instanaOptions,\n      `/api/infrastructure-monitoring/catalog/metrics/${plugin.key}?filter=${filter}`\n    ).then((catalogResponse: any) =>\n      catalogResponse.data.map((entry: any) => ({\n        key: entry.metricId,\n        label: entry.label,\n        description: entry.metricId,\n        aggregations: [\n          { key: 'MEAN', label: 'MEAN' },\n          { key: 'SUM', label: 'SUM' },\n        ],\n        entityType: entry.pluginId,\n      }))\n    );\n\n    this.catalogCache.put(key, metrics);\n\n    return metrics;\n  }\n\n  fetchSnapshotsForTarget(target: InstanaQuery, timeFilter: TimeFilter) {\n    const query = this.buildQuery(target);\n    const key = this.buildSnapshotCacheKey(query, timeFilter);\n\n    let snapshots = this.snapshotCache.get(key);\n    if (snapshots) {\n      return snapshots;\n    }\n\n    const fetchSnapshotContextsUrl =\n      `/api/snapshots/context` +\n      `?q=${query}` +\n      `&from=${timeFilter.from}` +\n      `&to=${timeFilter.to}` +\n      (this.instanaOptions.showOffline ? `` : `&time=${timeFilter.to}&size=100`);\n\n    snapshots = getRequest(this.instanaOptions, fetchSnapshotContextsUrl)\n      .then((contextsResponse: any) => {\n        return Promise.all(\n          contextsResponse.data.map(({ snapshotId, host }: any) => {\n            let snapshotInfo = this.snapshotInfoCache.get(snapshotId);\n            if (snapshotInfo) {\n              return snapshotInfo;\n            }\n\n            const fetchSnapshotUrl =\n              `/api/snapshots/${snapshotId}` +\n              (this.instanaOptions.showOffline\n                ? `?from=${timeFilter.from}&to=${timeFilter.to}`\n                : `?time=${timeFilter.to}`); // @see SnapshotApiResource#getSnapshot\n\n            snapshotInfo = getRequest(this.instanaOptions, fetchSnapshotUrl, true).then((snapshotResponse: any) => {\n              // check for undefined because the fetchSnapshotContexts is buggy\n              if (snapshotResponse !== undefined) {\n                return {\n                  snapshotId,\n                  host,\n                  response: this.reduceSnapshot(snapshotResponse),\n                };\n              }\n\n              return null;\n            });\n\n            this.snapshotInfoCache.put(snapshotId, snapshotInfo, this.timeToLiveSnapshotInfoCache);\n            return snapshotInfo;\n          })\n        );\n      })\n      .then((response: any) => {\n        // undefined items need to be removed, because the fetchSnapshotContexts is buggy in the backend, maybe can be removed in the future\n        return _.compact(response);\n      });\n\n    this.snapshotCache.put(key, snapshots);\n    return snapshots;\n  }\n\n  buildQuery(target: InstanaQuery): string {\n    // check for entity.pluginId or entity.selfType, because otherwise the backend has a problem with `AND entity.pluginId`\n    if (`${target.entityQuery}`.includes('entity.pluginId:') || `${target.entityQuery}`.includes('entity.selfType:')) {\n      return encodeURIComponent(`${target.entityQuery}`);\n    } else {\n      return encodeURIComponent(`${target.entityQuery} AND entity.pluginId:${target.entityType.key}`);\n    }\n  }\n\n  buildSnapshotCacheKey(query: string, timeFilter: TimeFilter): string {\n    return query + SEPARATOR + getTimeKey(timeFilter);\n  }\n\n  reduceSnapshot(snapshotResponse: any) {\n    // reduce data to used label formatting values\n    snapshotResponse.data = _.pick(snapshotResponse.data, ['id', 'label', 'plugin', 'data']);\n    return snapshotResponse;\n  }\n\n  readTimeSeries(values: any, aggregation: SelectableValue, timeFilter: TimeFilter) {\n    if (aggregation && aggregation.key === 'SUM') {\n      return this.correctMeanToSum(values, timeFilter);\n    }\n    return values;\n  }\n\n  correctMeanToSum(values: any, timeFilter: TimeFilter) {\n    const secondMultiplier = parseInt(getDefaultMetricRollupDuration(timeFilter).key, 10) / 1000;\n    return _.map(values, (value) => {\n      return {\n        value: value.value ? value.value * secondMultiplier : null,\n        timestamp: value.timestamp,\n      };\n    });\n  }\n\n  fetchMetricsForSnapshot(snapshotId: string, timeFilter: TimeFilter, rollup: number, metric: any) {\n    let url =\n      `/api/metrics?metric=${metric.key}` +\n      `&from=${timeFilter.from}` +\n      `&to=${timeFilter.to}` +\n      `&rollup=${rollup}` +\n      `&fillTimeSeries=true` +\n      `&snapshotId=${snapshotId}`;\n    return getRequest(this.instanaOptions, url);\n  }\n\n  getHostSuffix(host: string): string {\n    if (host) {\n      return ' (on host \"' + host + '\")';\n    }\n    return '';\n  }\n\n  buildLabel(snapshotResponse: any, host: any, target: InstanaQuery, index: any, metric: any): string {\n    if (target.labelFormat) {\n      let label = target.labelFormat;\n      label = _.replace(label, '$label', snapshotResponse.data.label);\n      label = _.replace(label, '$plugin', snapshotResponse.data.plugin); // not documented\n      label = _.replace(label, '$snapshot', snapshotResponse.data.id); // not documented\n      label = _.replace(label, '$host', host ? host : 'unknown');\n      label = _.replace(label, '$pid', _.get(snapshotResponse.data, ['data', 'pid'], ''));\n      label = _.replace(label, '$type', _.get(snapshotResponse.data, ['data', 'type'], ''));\n      label = _.replace(label, '$name', _.get(snapshotResponse.data, ['data', 'name'], ''));\n      label = _.replace(label, '$service', _.get(snapshotResponse.data, ['data', 'service_name'], ''));\n      if (target.freeTextMetrics) {\n        label = _.replace(label, '$metric', metric.key);\n      } else {\n        label = _.replace(label, '$metric', _.get(target, ['metric', 'key'], 'n/a'));\n      }\n      label = _.replace(label, '$index', index + 1);\n      label = _.replace(label, '$timeShift', target.timeShift);\n      return label;\n    }\n    return target.timeShift && target.timeShiftIsValid\n      ? snapshotResponse.data.label + this.getHostSuffix(host) + ' - ' + target.timeShift\n      : snapshotResponse.data.label + this.getHostSuffix(host);\n  }\n}\n","import _ from 'lodash';\n\nimport TimeFilter from '../types/time_filter';\n\nconst omitLabels = [\n  'refId',\n  'pluginId',\n  'showWarningCantShowAllResults',\n  'timeShiftIsValid',\n  'useFreeTextMetrics',\n  'showGroupBySecondLevel',\n  'canShowAllMetrics',\n  'timeFilter',\n  'stableHash',\n];\n\nexport function generateStableHash(obj: any): string {\n  let pseudoHash = _.omit(obj, omitLabels);\n  pseudoHash = _.mapValues(pseudoHash, (value: any) => {\n    // to reduce overhead of interface Selectable\n    if (value != null && typeof value === 'object' && 'key' in value) {\n      value = value.key;\n    }\n\n    return value;\n  });\n  return JSON.stringify(pseudoHash);\n}\n\n/* Check if two time filters are overlapping.\n\nReturn true when:\na)\n  from |-------------------| to (t2)\n              from |--------------------| to (t1)\nb)\n  from |-------------------| to (t2)\n  from |-------------------| to (t1)\nc)\n  from |-------------------| to (t2)\n              from |-------| to (t1)\n\nReturns false when:\nd)\n  from |-------------------| to (t2)\n                      from |-------| to (t1)\ne)\n  from |-------------------| to (t2)\n       from |--------| to (t1)\nf)\n     from |-------------------| to (t2)\nfrom |----------------------------------------| to (t1)\ng)\n                from |-------------------| to (t2)\n  from |--------------------| to (t1)\nh)\n                from |-------------------| to (t2)\n  from |-------------| to (t1)\ni)\n                from |-------------------| to (t2)\n  from |--------| to (t1)\nj)\n  from |-------------------| to (t2)\n                        from |----------| to (t1)\nk)\n  from |-------------------| to (t2)\n  from |----------| to (t1)\n*/\nexport function hasIntersection(t1: TimeFilter, t2: TimeFilter): boolean {\n  return t1.from < t2.to && t1.from >= t2.from && t1.to >= t2.to;\n}\n\n/*\n  Appends new found items to already existing data in cache.\n  Also removes old data accordingly (e.g. if 4 new datapoints were added,\n  the corresponding oldest four datapoints are removed).\n*/\nexport function appendData(newDeltaData: any, cachedData: any): any {\n  _.each(newDeltaData, (deltaData) => {\n    let matchingCachedDataIndex = _.findIndex(\n      cachedData,\n      (o: any) => o.key === deltaData.key && o.target === deltaData.target\n    );\n    if (cachedData[matchingCachedDataIndex] && deltaData.datapoints) {\n      // const size = matchingCachedData.datapoints.length;\n      let datapoints = deltaData.datapoints.concat(cachedData[matchingCachedDataIndex].datapoints);\n      datapoints = _.sortedUniqBy(\n        datapoints.sort((a: any, b: any) => a[1] - b[1]),\n        (a: any) => a[1]\n      );\n      cachedData[matchingCachedDataIndex].datapoints = _.takeRight(datapoints, 800);\n      cachedData[matchingCachedDataIndex].target = deltaData.target;\n    } else {\n      cachedData.push(deltaData);\n    }\n  });\n\n  return cachedData;\n}\n\nexport function getDeltaRequestTimestamp(series: any, fromDefault: number, timeInterval: any): number {\n  // we do not apply any delta for requests that contain a one second granularity (application requests)\n  if (timeInterval.key === '1') {\n    return fromDefault;\n  }\n\n  // the found series can have multiple results, it's ok just to use the first one\n  // because data is written in batches and we know that once there is a datapoint\n  // for a series, the other series' datapoints are up-to-date as well.\n  const length = series[0].datapoints.length;\n  if (length < 2) {\n    return fromDefault;\n  }\n\n  const penultimate = length - 2;\n  return series[0].datapoints[penultimate][1];\n}\n","import Cache from '../cache';\nimport { getRequest } from './request_handler';\nimport { InstanaOptions } from '../types/instana_options';\n\nconst versionCache: Cache<number> = new Cache<number>();\n\n/*\n  Get version of current Instana backend and cache it for 10 minutes.\n  This should be the ONLY way to retrieve any information about the Instana backend version.\n */\nexport default function getVersion(options: InstanaOptions) {\n  let cachedVersion = versionCache.get('version');\n  if (cachedVersion) {\n    return Promise.resolve(cachedVersion);\n  }\n\n  return getRequest(options, '/api/instana/version').then(\n    (result: any) => {\n      if (result.data && result.data.imageTag) {\n        const majorVersion = parseInt(result.data.imageTag.split('.', 2)[1], 10) || null;\n        if (majorVersion) {\n          versionCache.put(options.url, majorVersion, 600000);\n        }\n        return majorVersion;\n      }\n      return null;\n    },\n    (error: any) => {\n      return null;\n    }\n  );\n}\n","import _ from 'lodash';\nimport { InstanaQuery } from '../types/instana_query';\n\nexport function aggregateTarget(data: any, target: InstanaQuery) {\n  const targetLabel = buildAggregationLabel(target);\n  data = _.filter(data, (d) => d.target !== targetLabel); // filter out any previously calculated aggregations\n  let concatedTargetData = concatTargetData(data);\n\n  let dataGroupedByTimestamp = _.groupBy(concatedTargetData, function (d) {\n    return d[1];\n  });\n\n  let aggregatedData = aggregateDataOfTimestamp(dataGroupedByTimestamp, target.aggregationFunction.label!);\n  aggregatedData = _.sortBy(aggregatedData, [\n    function (datapoint) {\n      return datapoint[1];\n    },\n  ]);\n\n  return buildResult(aggregatedData, target.refId, targetLabel);\n}\n\nfunction concatTargetData(data: any) {\n  let result: any = [];\n  _.each(data, (entry) => {\n    result = _.concat(result, entry.datapoints);\n  });\n  return result;\n}\n\nfunction aggregateDataOfTimestamp(dataGroupedByTimestamp: any, aggregationLabel: string) {\n  let result: any = [];\n  _.each(dataGroupedByTimestamp, (timestampData, timestamp) => {\n    let valuesOfTimestamp = _.map(timestampData, (datapoint) => {\n      return datapoint[0];\n    });\n    let aggregatedValue = aggregate(aggregationLabel, valuesOfTimestamp);\n    result.push([aggregatedValue, parseInt(timestamp, 10)]);\n  });\n  return result;\n}\n\nfunction aggregate(aggregation: string, data: any) {\n  if (aggregation.toLowerCase() === 'sum') {\n    return _.sum(data);\n  } else if (aggregation.toLowerCase() === 'mean') {\n    return _.mean(data);\n  } else if (aggregation.toLowerCase() === 'min') {\n    return _.min(data);\n  } else if (aggregation.toLowerCase() === 'max') {\n    return _.max(data);\n  } else {\n    //apply not aggregation\n    return data;\n  }\n}\n\nfunction buildResult(aggregatedData: any, refId: string, target: string) {\n  return {\n    datapoints: aggregatedData,\n    refId: refId,\n    target: target,\n  };\n}\n\nfunction buildAggregationLabel(target: InstanaQuery): string {\n  if (target.showAllMetrics) {\n    if (target.allMetrics.length > 1) {\n      if (target.customFilters && target.customFilters.length > 0) {\n        let label = '';\n        _.each(target.customFilters, (filter, index) => {\n          label += filter;\n          if (index !== target.customFilters.length - 1) {\n            label += '.';\n          }\n        });\n        label = label + ' (' + target.aggregationFunction.label + ')';\n        return label;\n      } else {\n        return target.aggregationFunction.label!;\n      }\n    } else {\n      return target.allMetrics[0].key + ' (' + target.aggregationFunction.label + ')';\n    }\n  } else {\n    return target.metric.key + ' (' + target.aggregationFunction.label + ')';\n  }\n}\n","import TagFilter from '../types/tag_filter';\nimport _ from 'lodash';\nimport { InstanaQuery } from '../types/instana_query';\n\nexport function createTagFilter(filter: TagFilter) {\n  let tagFilter = {\n    name: filter.tag.key,\n    operator: filter.operator.key,\n    value: filter.stringValue,\n  };\n\n  if ('NUMBER' === filter.tag.type) {\n    if (filter.numberValue !== null) {\n      tagFilter.value = filter.numberValue.toString();\n    }\n  } else if ('BOOLEAN' === filter.tag.type) {\n    tagFilter.value = filter.booleanValue.toString();\n  }\n\n  return tagFilter;\n}\n\nexport function readItemMetrics(target: InstanaQuery, response: any, getLabel: any) {\n  if (!response.data) {\n    return response;\n  }\n\n  // as we map two times we need to flatten the result\n  return _.flatten(\n    response.data.items.map((item: any, index: number) => {\n      return _.map(item.metrics, (value, key) => {\n        return {\n          target: getLabel(target, item, key, index),\n          datapoints: _.map(value, (metric) => [metric[1], metric[0]]),\n          refId: target.refId,\n          key: target.stableHash,\n        };\n      });\n    })\n  );\n}\n","import { SelectableValue } from '@grafana/data';\nimport { InstanaOptions } from '../types/instana_options';\nimport Cache from '../cache';\nimport _ from 'lodash';\nimport TimeFilter from '../types/time_filter';\nimport { getTimeKey, getWindowSize, hoursToMs, floorToGranularity, ceilToGranularity } from '../util/time_util';\nimport BeaconGroupBody from '../types/beacon_group_body';\nimport { getRequest, postRequest } from '../util/request_handler';\nimport { getDefaultChartGranularity } from '../util/rollup_granularity_util';\nimport { InstanaQuery } from '../types/instana_query';\nimport { createTagFilter, readItemMetrics } from '../util/analyze_util';\nimport { emptyResultData } from '../util/target_util';\nimport { isInvalidQueryInterval } from '../util/queryInterval_check';\n\nexport class DataSourceWebsite {\n  instanaOptions: InstanaOptions;\n  websitesCache: Cache<Promise<SelectableValue[]>>;\n  miscCache: Cache<any>;\n\n  constructor(options: InstanaOptions) {\n    this.instanaOptions = options;\n    this.websitesCache = new Cache<Promise<SelectableValue[]>>();\n    this.miscCache = new Cache<any>();\n  }\n\n  runQuery(target: InstanaQuery, timeFilter: TimeFilter) {\n    if (\n      isInvalidQueryInterval(timeFilter.windowSize, hoursToMs(this.instanaOptions.queryinterval_limit_website_metrics))\n    ) {\n      throw new Error(\n        'Limit for maximum selectable windowsize exceeded, max is: ' +\n          this.instanaOptions.queryinterval_limit_website_metrics +\n          ' hours'\n      );\n    }\n\n    // avoid invalid calls\n    if (\n      !target ||\n      !target.metric ||\n      !target.metric.key ||\n      !target.group ||\n      !target.group.key ||\n      !target.entity ||\n      !target.entity.key\n    ) {\n      return Promise.resolve(emptyResultData(target.refId));\n    }\n\n    return this.fetchAnalyzeMetricsForWebsite(target, timeFilter).then((response: any) => {\n      return readItemMetrics(target, response, this.buildAnalyzeWebsiteLabel);\n    });\n  }\n\n  getWebsites(timeFilter: TimeFilter) {\n    const key = getTimeKey(timeFilter);\n    let websites = this.websitesCache.get(key);\n    if (websites) {\n      return websites;\n    }\n\n    websites = getRequest(this.instanaOptions, '/api/website-monitoring/config').then((websitesResponse: any) =>\n      websitesResponse.data.map((website: any) => ({\n        key: website.name, // use name as key because a website name can only be configured once\n        label: website.name,\n      }))\n    );\n    this.websitesCache.put(key, websites, 600000);\n\n    return websites;\n  }\n\n  getWebsiteTags() {\n    let websiteTags = this.miscCache.get('websiteTags');\n    if (websiteTags) {\n      return websiteTags;\n    }\n\n    websiteTags = getRequest(this.instanaOptions, '/api/website-monitoring/catalog/tags').then((tagsResponse: any) =>\n      tagsResponse.data.map((entry: any) => ({\n        key: entry.name,\n        label: entry.name,\n        type: entry.type,\n      }))\n    );\n    this.miscCache.put('websiteTags', websiteTags);\n\n    return websiteTags;\n  }\n\n  getWebsiteMetricsCatalog() {\n    let websiteCatalog = this.miscCache.get('websiteCatalog');\n    if (websiteCatalog) {\n      return websiteCatalog;\n    }\n\n    websiteCatalog = getRequest(this.instanaOptions, '/api/website-monitoring/catalog/metrics').then(\n      (catalogResponse: any) =>\n        catalogResponse.data.map((entry: any) => {\n          return {\n            key: entry.metricId,\n            label: entry.label,\n            aggregations: entry.aggregations ? this.transformAggregations(entry.aggregations.sort()) : [],\n            beaconTypes: entry.beaconTypes\n              ? this.transformBeaconTypes(entry.beaconTypes)\n              : ['pageLoad', 'resourceLoad', 'httpRequest', 'error', 'custom', 'pageChange'],\n          };\n        })\n    );\n    this.miscCache.put('websiteCatalog', websiteCatalog);\n\n    return websiteCatalog;\n  }\n\n  transformBeaconTypes(beaconTypes: string[]) {\n    if (beaconTypes.includes('pageChange')) {\n      let result = _.remove(beaconTypes, (type) => type !== 'pageChange');\n      result.push('page_change');\n      return result;\n    }\n\n    return beaconTypes;\n  }\n\n  transformAggregations(aggregations: string[]) {\n    return _.map(aggregations, (a) => {\n      return {\n        key: a,\n        label: a,\n      };\n    });\n  }\n\n  private fetchAnalyzeMetricsForWebsite(target: InstanaQuery, timeFilter: TimeFilter) {\n    const windowSize = getWindowSize(timeFilter);\n    const tagFilters = [\n      {\n        name: 'beacon.website.name',\n        operator: 'EQUALS',\n        value: target.entity.key,\n      },\n    ];\n\n    _.forEach(target.filters, (filter) => {\n      if (filter.isValid) {\n        tagFilters.push(createTagFilter(filter));\n      }\n    });\n\n    if (!target.timeInterval) {\n      target.timeInterval = getDefaultChartGranularity(windowSize);\n    }\n    const metric: any = {\n      metric: target.metric.key,\n      aggregation: target.aggregation.key ? target.aggregation.key : 'SUM',\n      granularity: target.timeInterval.key,\n    };\n\n    const group: any = {\n      groupbyTag: target.group.key,\n    };\n    if (target.group.type === 'KEY_VALUE_PAIR' && target.groupbyTagSecondLevelKey) {\n      group['groupbyTagSecondLevelKey'] = target.groupbyTagSecondLevelKey;\n    }\n\n    const data: BeaconGroupBody = {\n      group: group,\n      timeFrame: {\n        to: floorToGranularity(timeFilter.to, metric.granularity),\n        windowSize: ceilToGranularity(windowSize, metric.granularity),\n      },\n      tagFilters: tagFilters,\n      type: target.entityType.key,\n      metrics: [metric],\n    };\n    return postRequest(\n      this.instanaOptions,\n      '/api/website-monitoring/analyze/beacon-groups?fillTimeSeries=true',\n      data,\n      false,\n      5\n    );\n  }\n\n  buildAnalyzeWebsiteLabel(target: InstanaQuery, item: any, key: string, index: number): string {\n    if (target.labelFormat) {\n      let label = target.labelFormat;\n      label = _.replace(label, '$label', item.name);\n      label = _.replace(label, '$website', target.entity.label!);\n      label = _.replace(label, '$type', target.entityType.label!);\n      label = _.replace(label, '$metric', target.metric.label!);\n      label = _.replace(label, '$key', key);\n      label = _.replace(label, '$index', '' + index + 1);\n      label = _.replace(label, '$timeShift', target.timeShift);\n      return label;\n    }\n    return target.timeShift && target.timeShiftIsValid\n      ? item.name + ' (' + target.entity.label + ')' + ' - ' + key + ' - ' + target.timeShift\n      : item.name + ' (' + target.entity.label + ')' + ' - ' + key;\n  }\n}\n","export default [\n  { key: 'calls', label: 'Call count', description: 'calls', aggregations: [{ key: 'SUM', label: 'SUM' }] },\n  {\n    key: 'latency',\n    label: 'Call latency',\n    description: 'latency',\n    aggregations: [\n      { key: 'MAX', label: 'MAX' },\n      { key: 'MEAN', label: 'MEAN' },\n      { key: 'MIN', label: 'MIN' },\n      { key: 'P25', label: 'P25' },\n      { key: 'P50', label: 'P50' },\n      { key: 'P75', label: 'P75' },\n      { key: 'P90', label: 'P90' },\n      { key: 'P95', label: 'P95' },\n      { key: 'P98', label: 'P98' },\n      { key: 'P99', label: 'P99' },\n    ],\n  },\n  { key: 'errors', label: 'Error rate', description: 'errors', aggregations: [{ key: 'MEAN', label: 'MEAN' }] },\n  {\n    key: 'services',\n    label: 'Service Count',\n    description: 'services',\n    aggregations: [{ key: 'DISTINCT_COUNT', label: 'DISTINCT_COUNT' }],\n  },\n];\n","import { SelectableValue } from '@grafana/data';\nimport { InstanaOptions } from '../types/instana_options';\nimport Cache from '../cache';\nimport _ from 'lodash';\nimport TimeFilter from '../types/time_filter';\nimport { getTimeKey, getWindowSize, hoursToMs, floorToGranularity, ceilToGranularity } from '../util/time_util';\nimport { getRequest, postRequest } from '../util/request_handler';\nimport { getDefaultChartGranularity } from '../util/rollup_granularity_util';\nimport { InstanaQuery } from '../types/instana_query';\nimport { createTagFilter, readItemMetrics } from '../util/analyze_util';\nimport { emptyResultData } from '../util/target_util';\nimport { ALL_APPLICATIONS, PAGINATION_LIMIT } from '../GlobalVariables';\nimport defaultApplicationMetricCatalog from '../lists/default_metric_catalog';\nimport { isInvalidQueryInterval } from '../util/queryInterval_check';\nimport getVersion from '../util/instana_version';\n\nexport class DataSourceApplication {\n  instanaOptions: InstanaOptions;\n  applicationsCache: Cache<Promise<SelectableValue[]>>;\n  miscCache: Cache<any>;\n\n  constructor(options: InstanaOptions) {\n    this.instanaOptions = options;\n    this.applicationsCache = new Cache<Promise<SelectableValue[]>>();\n    this.miscCache = new Cache<any>();\n  }\n\n  runQuery(target: InstanaQuery, timeFilter: TimeFilter): any {\n    // do not try to execute to big queries\n    if (isInvalidQueryInterval(timeFilter.windowSize, hoursToMs(this.instanaOptions.queryinterval_limit_app_calls))) {\n      throw new Error(\n        'Limit for maximum selectable windowsize exceeded, max is: ' +\n          this.instanaOptions.queryinterval_limit_app_calls +\n          ' hours'\n      );\n    }\n\n    // avoid invalid calls\n    if (!target || !target.metric || !target.metric.key || !target.group || !target.group.key) {\n      return Promise.resolve(emptyResultData(target.refId));\n    }\n\n    return this.fetchAnalyzeMetricsForApplication(target, timeFilter).then((response) => {\n      target.showWarningCantShowAllResults = response.data.canLoadMore;\n      return readItemMetrics(target, response, this.buildAnalyzeApplicationLabel);\n    });\n  }\n\n  getApplications(timeFilter: TimeFilter) {\n    const key = getTimeKey(timeFilter);\n\n    let applications = this.applicationsCache.get(key);\n    if (applications) {\n      return applications;\n    }\n\n    const windowSize = getWindowSize(timeFilter);\n    let page = 1;\n    let pageSize = 200;\n\n    applications = this.paginateApplications([], windowSize, timeFilter.to, page, pageSize, PAGINATION_LIMIT).then(\n      (response: any) => {\n        let allResults = _.flattenDeep(\n          _.map(response, (pageSet) => {\n            return pageSet.items;\n          })\n        );\n\n        return _.orderBy(\n          _.compact(allResults).map((entry) => {\n            return {\n              key: entry.id,\n              label: entry.label,\n              boundaryScope: entry.boundaryScope,\n            };\n          }),\n          [(application) => application.label.toLowerCase()],\n          ['asc']\n        );\n      }\n    );\n\n    this.applicationsCache.put(key, applications, 600000);\n    return applications;\n  }\n\n  paginateApplications(\n    results: any,\n    windowSize: number,\n    to: number,\n    page: number,\n    pageSize: number,\n    pageLimit: number\n  ) {\n    if (page > pageLimit) {\n      return results;\n    }\n\n    let queryParameters = 'windowSize=' + windowSize + '&to=' + to + '&page=' + page + '&pageSize=' + pageSize;\n\n    return getRequest(this.instanaOptions, '/api/application-monitoring/applications?' + queryParameters).then(\n      (response: any) => {\n        results.push(response.data);\n        if (page * pageSize < response.data.totalHits) {\n          page++;\n          return this.paginateApplications(results, windowSize, to, page, pageSize, pageLimit);\n        } else {\n          return results;\n        }\n      }\n    );\n  }\n\n  getApplicationTags(timeFilter: TimeFilter) {\n    let applicationTags = this.miscCache.get('applicationTags');\n    if (applicationTags) {\n      return applicationTags;\n    }\n\n    return getVersion(this.instanaOptions).then((version: number) => {\n      if (version >= 191) {\n        applicationTags = this.getCatalog(timeFilter).then((catalog: any) =>\n          this.mapCatalogResponse(catalog.data.tags)\n        );\n      } else {\n        applicationTags = this.getCatalogFromDeprecatedEndpoint().then((tagsResponse: any) =>\n          this.mapCatalogResponse(tagsResponse.data)\n        );\n      }\n\n      this.miscCache.put('applicationTags', applicationTags);\n      return applicationTags;\n    });\n  }\n\n  getCatalog(timeFilter: TimeFilter) {\n    const endpoint = '/api/application-monitoring/catalog?dataSource=CALLS&useCase=FILTERING&from=' + timeFilter.from;\n    return getRequest(this.instanaOptions, endpoint);\n  }\n\n  getCatalogFromDeprecatedEndpoint() {\n    return getRequest(this.instanaOptions, '/api/application-monitoring/catalog/tags');\n  }\n\n  mapCatalogResponse(catalog: any) {\n    return catalog.map((entry: any) => ({\n      key: entry.name,\n      label: entry.name,\n      type: entry.type,\n      canApplyToSource: entry.canApplyToSource,\n      canApplyToDestination: entry.canApplyToDestination,\n    }));\n  }\n\n  getApplicationMetricsCatalog() {\n    return defaultApplicationMetricCatalog;\n  }\n\n  fetchAnalyzeMetricsForApplication(target: InstanaQuery, timeFilter: TimeFilter) {\n    const windowSize = getWindowSize(timeFilter);\n    let tagFilters: any[] = [];\n\n    return Promise.resolve(this.getApplicationTags(timeFilter)).then((applicationTags) => {\n      if (target.entity.key) {\n        tagFilters.push({\n          name: 'application.name',\n          operator: 'EQUALS',\n          value: target.entity.label!,\n          entity: target.applicationCallToEntity ? target.applicationCallToEntity : 'DESTINATION',\n        });\n      }\n\n      _.forEach(target.filters, (filter) => {\n        if (filter.isValid) {\n          let tagFilter: any = createTagFilter(filter);\n          const tag = _.find(applicationTags, ['key', filter.tag.key]);\n          if (tag.canApplyToDestination || tag.canApplyToSource) {\n            tagFilter['entity'] = this.getTagEntity(filter.entity, tag);\n          }\n          tagFilters.push(tagFilter);\n        }\n      });\n\n      if (!target.timeInterval) {\n        target.timeInterval = getDefaultChartGranularity(windowSize);\n      }\n      const metric: any = {\n        metric: target.metric.key,\n        aggregation: target.aggregation && target.aggregation.key ? target.aggregation.key : 'SUM',\n        granularity: target.timeInterval.key,\n      };\n\n      const group: any = {\n        groupbyTag: target.group.key,\n      };\n      const tag: any = _.find(applicationTags, ['key', target.group.key]);\n      if (tag.canApplyToDestination || tag.canApplyToSource) {\n        group['groupbyTagEntity'] = target.callToEntity;\n      }\n      if (target.group.type === 'KEY_VALUE_PAIR' && target.groupbyTagSecondLevelKey) {\n        group['groupbyTagSecondLevelKey'] = target.groupbyTagSecondLevelKey;\n      }\n\n      const data: any = {\n        group: group,\n        timeFrame: {\n          to: floorToGranularity(timeFilter.to, metric.granularity),\n          windowSize: ceilToGranularity(windowSize, metric.granularity),\n        },\n        metrics: [metric],\n        tagFilterExpression: {\n          type: 'EXPRESSION',\n          logicalOperator: 'AND',\n          elements: tagFilters,\n        },\n      };\n\n      return postRequest(\n        this.instanaOptions,\n        '/api/application-monitoring/analyze/call-groups?fillTimeSeries=true',\n        data,\n        false,\n        5\n      );\n    });\n  }\n\n  getTagEntity(selectedEntity: string, tag: any): string {\n    if (selectedEntity === 'DESTINATION' && tag.canApplyToDestination) {\n      return 'DESTINATION';\n    }\n    if (selectedEntity === 'SOURCE' && tag.canApplyToSource) {\n      return 'SOURCE';\n    }\n    return tag.canApplyToDestination ? 'DESTINATION' : 'SOURCE';\n  }\n\n  fetchApplicationMetrics(target: InstanaQuery, timeFilter: TimeFilter) {\n    // avoid invalid calls\n    if (!target || !target.metric || !target.metric.key) {\n      return Promise.resolve(emptyResultData(target.refId));\n    }\n\n    const windowSize = getWindowSize(timeFilter);\n    if (!target.timeInterval) {\n      target.timeInterval = getDefaultChartGranularity(windowSize);\n    }\n    const metric: any = {\n      metric: target.metric.key,\n      aggregation: target.aggregation && target.aggregation.key ? target.aggregation.key : 'SUM',\n      granularity: target.timeInterval.key,\n    };\n\n    const data: any = {\n      timeFrame: {\n        to: floorToGranularity(timeFilter.to, metric.granularity),\n        windowSize: ceilToGranularity(windowSize, metric.granularity),\n      },\n      metrics: [metric],\n    };\n\n    if (target.entity.key !== null) {\n      data['applicationId'] = target.entity.key;\n      data['applicationBoundaryScope'] = target.applicationBoundaryScope;\n    }\n\n    return postRequest(\n      this.instanaOptions,\n      '/api/application-monitoring/metrics/applications?fillTimeSeries=true',\n      data\n    );\n  }\n\n  buildAnalyzeApplicationLabel(target: InstanaQuery, item: any, key: string, index: number): string {\n    if (target.labelFormat) {\n      let label = target.labelFormat;\n      label = _.replace(label, '$label', item.name);\n      label = _.replace(label, '$application', target.entity.label!);\n      label = _.replace(label, '$metric', target.metric.label!);\n      label = _.replace(label, '$key', key);\n      label = _.replace(label, '$index', '' + index + 1);\n      label = _.replace(label, '$timeShift', target.timeShift);\n      return label;\n    }\n\n    if (target.entity.label === ALL_APPLICATIONS) {\n      return target.timeShift ? item.name + ' - ' + key + ' - ' + target.timeShift : item.name + ' - ' + key;\n    }\n\n    return target.timeShift && target.timeShiftIsValid\n      ? item.name + ' (' + target.entity.label + ')' + ' - ' + key + ' - ' + target.timeShift\n      : item.name + ' (' + target.entity.label + ')' + ' - ' + key;\n  }\n\n  buildApplicationMetricLabel(target: InstanaQuery, item: any, key: string, index: number): string {\n    if (target.labelFormat) {\n      let label = target.labelFormat;\n      label = _.replace(label, '$label', item.application.label);\n      label = _.replace(label, '$application', target.entity.label!);\n      label = _.replace(label, '$metric', target.metric.label!);\n      label = _.replace(label, '$key', key);\n      label = _.replace(label, '$index', '' + index + 1);\n      label = _.replace(label, '$timeShift', target.timeShift);\n      return label;\n    }\n\n    if (target.entity.label === ALL_APPLICATIONS) {\n      return target.timeShift\n        ? item.application.label + ' - ' + key + ' - ' + target.timeShift\n        : item.application.label + ' - ' + key;\n    }\n\n    return target.timeShift && target.timeShiftIsValid\n      ? item.application.label + ' (' + target.entity.label + ')' + ' - ' + key + ' - ' + target.timeShift\n      : item.application.label + ' (' + target.entity.label + ')' + ' - ' + key;\n  }\n}\n","import { SelectableValue } from '@grafana/data';\nimport { InstanaOptions } from '../types/instana_options';\nimport Cache from '../cache';\nimport _ from 'lodash';\nimport TimeFilter from '../types/time_filter';\nimport { getTimeKey, getWindowSize, floorToGranularity, ceilToGranularity } from '../util/time_util';\nimport { getRequest, postRequest } from '../util/request_handler';\nimport { getDefaultChartGranularity } from '../util/rollup_granularity_util';\nimport { InstanaQuery } from '../types/instana_query';\nimport { PAGINATION_LIMIT } from '../GlobalVariables';\nimport { emptyResultData } from '../util/target_util';\n\nexport class DataSourceService {\n  instanaOptions: InstanaOptions;\n  servicesCache: Cache<Promise<SelectableValue[]>>;\n\n  constructor(options: InstanaOptions) {\n    this.instanaOptions = options;\n    this.servicesCache = new Cache<Promise<SelectableValue[]>>();\n  }\n\n  getServicesOfApplication(target: InstanaQuery, timeFilter: TimeFilter) {\n    let applicationId = '';\n    if (target.entity && target.entity.key) {\n      applicationId = target.entity.key;\n    }\n\n    const key = getTimeKey(timeFilter) + applicationId + target.applicationBoundaryScope;\n    let services = this.servicesCache.get(key);\n    if (services) {\n      return services;\n    }\n\n    const windowSize = getWindowSize(timeFilter);\n    let page = 1;\n    let pageSize = 200;\n\n    services = this.paginateServices(\n      [],\n      applicationId,\n      windowSize,\n      timeFilter.to,\n      target.applicationBoundaryScope,\n      page,\n      pageSize,\n      PAGINATION_LIMIT\n    ).then((response: any) => {\n      let allResults = _.flattenDeep(\n        _.map(response, (pageSet) => {\n          return pageSet.items;\n        })\n      );\n\n      return _.orderBy(\n        _.compact(allResults).map((entry) => {\n          return {\n            key: entry.id,\n            label: entry.label,\n          };\n        }),\n        [(service) => service.label.toLowerCase()],\n        ['asc']\n      );\n    });\n\n    this.servicesCache.put(key, services, 600000);\n    return services;\n  }\n\n  paginateServices(\n    results: any,\n    applicationId: string,\n    windowSize: number,\n    to: number,\n    applicationBoundaryScope: string,\n    page: number,\n    pageSize: number,\n    pageLimit: number\n  ) {\n    if (page > pageLimit) {\n      return results;\n    }\n\n    let queryParameters = 'windowSize=' + windowSize + '&to=' + to + '&page=' + page + '&pageSize=' + pageSize;\n    if (applicationBoundaryScope === 'ALL' || applicationBoundaryScope === 'INBOUND') {\n      queryParameters += '&applicationBoundaryScope=' + applicationBoundaryScope;\n    }\n\n    let url =\n      '/api/application-monitoring/applications;id=' +\n      (applicationId ? applicationId : '') +\n      '/services?' +\n      queryParameters;\n\n    return getRequest(this.instanaOptions, url).then((response: any) => {\n      results.push(response.data);\n      if (page * pageSize < response.data.totalHits) {\n        page++;\n        return this.paginateServices(\n          results,\n          applicationId,\n          windowSize,\n          to,\n          applicationBoundaryScope,\n          page,\n          pageSize,\n          pageLimit\n        );\n      } else {\n        return results;\n      }\n    });\n  }\n\n  fetchServiceMetrics(target: InstanaQuery, timeFilter: TimeFilter) {\n    // avoid invalid calls\n    if (!target || !target.metric || !target.metric.key) {\n      return Promise.resolve(emptyResultData(target.refId));\n    }\n\n    const windowSize = getWindowSize(timeFilter);\n\n    if (!target.timeInterval) {\n      target.timeInterval = getDefaultChartGranularity(windowSize);\n    }\n\n    const metric = {\n      metric: target.metric.key,\n      aggregation: target.aggregation && target.aggregation.key ? target.aggregation.key : 'SUM',\n      granularity: target.timeInterval.key,\n    };\n\n    const data: any = {\n      timeFrame: {\n        to: floorToGranularity(timeFilter.to, metric.granularity),\n        windowSize: ceilToGranularity(windowSize, metric.granularity),\n      },\n      metrics: [metric],\n    };\n\n    if (target.entity && target.entity.key) {\n      data['applicationId'] = target.entity.key;\n      // only set applicationBoundaryScope when an application is selected\n      data['applicationBoundaryScope'] = target.applicationBoundaryScope;\n    }\n\n    if (target.service && target.service.key) {\n      data['serviceId'] = target.service.key;\n    }\n\n    return postRequest(this.instanaOptions, '/api/application-monitoring/metrics/services?fillTimeSeries=true', data);\n  }\n\n  buildServiceMetricLabel(target: InstanaQuery, item: any, key: string, index: number): string {\n    if (target.labelFormat) {\n      let label = target.labelFormat;\n      label = _.replace(label, '$label', item.service.label);\n      label = _.replace(label, '$service', target.service.label!);\n      label = _.replace(label, '$application', target.entity.label!);\n      label = _.replace(label, '$metric', target.metric.label!);\n      label = _.replace(label, '$key', key);\n      label = _.replace(label, '$index', index + 1 + '');\n      label = _.replace(label, '$timeShift', target.timeShift);\n      return label;\n    }\n\n    if (target.service.key === null) {\n      return target.timeShift\n        ? item.service.label + ' - ' + key + ' - ' + target.timeShift\n        : item.service.label + ' - ' + key;\n    }\n\n    return target.timeShift && target.timeShiftIsValid\n      ? item.service.label + ' (' + target.service.label + ')' + ' - ' + key + ' - ' + target.timeShift\n      : item.service.label + ' (' + target.service.label + ')' + ' - ' + key;\n  }\n}\n","import { SelectableValue } from '@grafana/data';\nimport { InstanaOptions } from '../types/instana_options';\nimport Cache from '../cache';\nimport _ from 'lodash';\nimport TimeFilter from '../types/time_filter';\nimport { getTimeKey, getWindowSize, floorToGranularity, ceilToGranularity } from '../util/time_util';\nimport { getRequest, postRequest } from '../util/request_handler';\nimport { InstanaQuery } from '../types/instana_query';\nimport { ALL_ENDPOINTS, PAGINATION_LIMIT } from '../GlobalVariables';\nimport { emptyResultData } from '../util/target_util';\nimport { getDefaultChartGranularity } from '../util/rollup_granularity_util';\n\nexport class DataSourceEndpoint {\n  instanaOptions: InstanaOptions;\n  endpointsCache: Cache<Promise<SelectableValue[]>>;\n\n  constructor(options: InstanaOptions) {\n    this.instanaOptions = options;\n    this.endpointsCache = new Cache<Promise<SelectableValue[]>>();\n  }\n\n  getEndpointsOfService(target: InstanaQuery, timeFilter: TimeFilter) {\n    let applicationId = '';\n    if (target.entity && target.entity.key) {\n      applicationId = target.entity.key;\n    }\n\n    let serviceId = '';\n    if (target.service) {\n      serviceId = target.service.key;\n    }\n\n    const key = getTimeKey(timeFilter) + applicationId + serviceId + target.applicationBoundaryScope;\n    let endpoints = this.endpointsCache.get(key);\n    if (endpoints) {\n      return endpoints;\n    }\n\n    const windowSize = getWindowSize(timeFilter);\n    let page = 1;\n    let pageSize = 200;\n\n    endpoints = this.paginateEndpoints(\n      [],\n      applicationId,\n      serviceId,\n      windowSize,\n      target.applicationBoundaryScope,\n      timeFilter.to,\n      page,\n      pageSize,\n      PAGINATION_LIMIT\n    ).then((response: any) => {\n      let allResults = _.flattenDeep(\n        _.map(response, (pageSet) => {\n          return pageSet.items;\n        })\n      );\n\n      return _.orderBy(\n        _.compact(allResults).map((entry) => {\n          return {\n            key: entry.id,\n            label: entry.label,\n          };\n        }),\n        [(endpoint) => endpoint.label.toLowerCase()],\n        ['asc']\n      );\n    });\n\n    this.endpointsCache.put(key, endpoints, 600000);\n    return endpoints;\n  }\n\n  paginateEndpoints(\n    results: any,\n    applicationId: string,\n    serviceId: string,\n    windowSize: number,\n    applicationBoundaryScope: string,\n    to: number,\n    page: number,\n    pageSize: number,\n    pageLimit: number\n  ) {\n    if (page > pageLimit) {\n      return results;\n    }\n\n    let queryParameters = 'windowSize=' + windowSize + '&to=' + to + '&page=' + page + '&pageSize=' + pageSize;\n    if (applicationBoundaryScope === 'ALL' || applicationBoundaryScope === 'INBOUND') {\n      queryParameters += '&applicationBoundaryScope=' + applicationBoundaryScope;\n    }\n\n    let url =\n      '/api/application-monitoring/applications;id=' +\n      (applicationId ? applicationId : '') +\n      '/services;id=' +\n      (serviceId ? serviceId : '') +\n      '/endpoints?' +\n      queryParameters;\n\n    return getRequest(this.instanaOptions, url).then((response: any) => {\n      results.push(response.data);\n      if (page * pageSize < response.data.totalHits) {\n        page++;\n        return this.paginateEndpoints(\n          results,\n          applicationId,\n          serviceId,\n          windowSize,\n          applicationBoundaryScope,\n          to,\n          page,\n          pageSize,\n          pageLimit\n        );\n      } else {\n        return results;\n      }\n    });\n  }\n\n  fetchEndpointMetrics(target: InstanaQuery, timeFilter: TimeFilter) {\n    // avoid invalid calls\n    if (!target || !target.metric || !target.metric.key) {\n      return Promise.resolve(emptyResultData(target.refId));\n    }\n\n    const windowSize = getWindowSize(timeFilter);\n    if (!target.timeInterval) {\n      target.timeInterval = getDefaultChartGranularity(windowSize);\n    }\n    const metric: any = {\n      metric: target.metric.key,\n      aggregation: target.aggregation && target.aggregation.key ? target.aggregation.key : 'SUM',\n      granularity: target.timeInterval.key,\n    };\n\n    const data: any = {\n      endpointId: target.endpoint.key,\n      timeFrame: {\n        to: floorToGranularity(timeFilter.to, metric.granularity),\n        windowSize: ceilToGranularity(windowSize, metric.granularity),\n      },\n      metrics: [metric],\n    };\n\n    if (target.entity && target.entity.key) {\n      data['applicationId'] = target.entity.key;\n      // only set applicationBoundaryScope when an application is selected\n      data['applicationBoundaryScope'] = target.applicationBoundaryScope;\n    }\n\n    if (target.service && target.service.key) {\n      data['serviceId'] = target.service.key;\n    }\n\n    return postRequest(this.instanaOptions, '/api/application-monitoring/metrics/endpoints?fillTimeSeries=true', data);\n  }\n\n  buildEndpointMetricLabel(target: InstanaQuery, item: any, key: string, index: number): string {\n    if (target.labelFormat) {\n      let label = target.labelFormat;\n      label = _.replace(label, '$label', item.endpoint.label);\n      label = _.replace(label, '$endpoint', target.endpoint.label!);\n      label = _.replace(label, '$service', target.service.label!);\n      label = _.replace(label, '$application', target.entity.label!);\n      label = _.replace(label, '$metric', target.metric.label!);\n      label = _.replace(label, '$key', key);\n      label = _.replace(label, '$index', '' + index + 1);\n      label = _.replace(label, '$timeShift', target.timeShift);\n      return label;\n    }\n\n    if (target.endpoint.label === ALL_ENDPOINTS) {\n      return target.timeShift\n        ? item.endpoint.label + ' - ' + key + ' - ' + target.timeShift\n        : item.endpoint.label + ' - ' + key;\n    }\n\n    return target.timeShift && target.timeShiftIsValid\n      ? item.endpoint.label + ' (' + target.endpoint.label + ')' + ' - ' + key + ' - ' + target.timeShift\n      : item.endpoint.label + ' (' + target.endpoint.label + ')' + ' - ' + key;\n  }\n}\n","// can be removed once mixpanel shows no old plugins around\nimport _ from 'lodash';\nimport metric_categories from './lists/metric_categories';\n\nexport default function (target: any) {\n  // 1.3.1 towards 2.0.0\n  if (target.entityType && typeof target.entityType === 'string') {\n    target.entityType = { key: target.entityType, label: target.entityType };\n  }\n\n  // 2.3.1 towards 2.4.0\n  if (target.filter && target.filter !== '') {\n    if (!target.customFilters) {\n      target.customFilters = [];\n      target.customFilters.push({ value: target.filter });\n    }\n  }\n\n  // 2.4.2 towards 2.4.3\n  if (target.timeInterval) {\n    if (target.timeInterval.value) {\n      target.timeInterval = { key: target.timeInterval.value, label: target.timeInterval.label };\n    } else if (target.timeInterval.rollup) {\n      target.timeInterval = { key: target.timeInterval.rollup, label: target.timeInterval.label };\n    }\n  }\n\n  //2.4.4 towards 2.5.0\n  if (target.metricCategory === '5') {\n    //old service metric view\n    target.metricCategory = '4';\n    target.service = {}; //because target.service does not exist yet.\n    target.service.key = target.entity.key;\n    target.service.label = target.entity.label;\n    if (target.selectedApplication && target.selectedApplication.key) {\n      target.entity.key = target.selectedApplication.key;\n      target.entity.label = target.selectedApplication.label;\n    } else {\n      target.entity.key = null;\n      target.entity.label = 'Test';\n    }\n  }\n\n  //2.4.4 towards 2.5.0\n  if (target.metricCategory === '6') {\n    //old endpoint metric view\n    target.metricCategory = '4';\n    target.endpoint = {}; //because target.endpoint does not exist yet.\n    target.endpoint.key = target.entity.key;\n    if (target.selectedApplication && target.selectedApplication.key) {\n      target.entity.key = target.selectedApplication.key;\n      target.entity.label = target.selectedApplication.label;\n    } else {\n      target.entity.key = null;\n      target.entity.label = 'Test';\n    }\n  }\n\n  //2.7.3 towards 3.0 (Angular to React Migration)\n  if (target.aggregation && typeof target.aggregation === 'string') {\n    target.aggregation\n      ? (target.aggregation = { key: target.aggregation, label: target.aggregation })\n      : (target.aggregation = {});\n    target.aggregationFunction\n      ? (target.aggregationFunction = {\n          key: target.aggregationFunction.label,\n          label: target.aggregationFunction.label,\n        })\n      : (target.aggregationFunction = {});\n  }\n  if (target.customFilters && target.customFilters.length > 0 && target.customFilters[0].value) {\n    target.customFilters = _.map(target.customFilters, (cf) => cf.value);\n  }\n  if (target.filters && target.filters.length > 0 && !target.filters[0].tag.key && !target.filters[0].tag.label) {\n    _.forEach(target.filters, (filter) => {\n      filter.tag.label = filter.tag.key;\n    });\n  }\n  if (target.group && target.group.key && !target.group.label) {\n    target.group.label = target.group.key;\n  }\n  if (target.metricCategory && typeof target.metricCategory === 'string') {\n    target.metricCategory = _.find(\n      metric_categories,\n      (category) => category.key === parseInt(target.metricCategory, 10)\n    );\n  }\n\n  //3.0.1 towards 3.1.0\n  if (target.callToEntity && target.callToEntity.key) {\n    target.callToEntity = target.callToEntity.key;\n  }\n  if (target.applicationCallToEntity && target.applicationCallToEntity.key) {\n    target.applicationCallToEntity = target.applicationCallToEntity.key;\n  }\n  if (target.filters && target.filters.length > 0) {\n    target.filters.forEach((filter: any) => {\n      if (filter.entity && filter.entity.key) {\n        filter.entity = filter.entity.key;\n      }\n    });\n  }\n}\n","import {\n  DataQueryRequest,\n  DataQueryResponse,\n  DataSourceApi,\n  DataSourceInstanceSettings,\n  SelectableValue,\n} from '@grafana/data';\nimport { InstanaQuery } from '../types/instana_query';\nimport { InstanaOptions } from '../types/instana_options';\nimport { getRequest, instanaUrl } from '../util/request_handler';\nimport { DataSourceSlo } from './DataSource_Slo';\nimport MetricCategories from '../lists/metric_categories';\nimport TimeFilter from '../types/time_filter';\nimport { hoursToMs, readTime } from '../util/time_util';\nimport Cache from '../cache';\nimport { emptyResultData } from '../util/target_util';\nimport _ from 'lodash';\nimport { DataSourceInfrastructure } from './Datasource_Infrastructure';\nimport {\n  getDefaultChartGranularity,\n  getDefaultMetricRollupDuration,\n  getPossibleGranularities,\n  getPossibleRollups,\n} from '../util/rollup_granularity_util';\nimport { appendData, generateStableHash, hasIntersection, getDeltaRequestTimestamp } from '../util/delta_util';\nimport {\n  ANALYZE_APPLICATION_METRICS,\n  ANALYZE_WEBSITE_METRICS,\n  APPLICATION_SERVICE_ENDPOINT_METRICS,\n  BUILT_IN_METRICS,\n  CUSTOM_METRICS,\n  SLO_INFORMATION,\n  INFRASTRUCTURE_EXPLORE,\n} from '../GlobalVariables';\nimport getVersion from '../util/instana_version';\nimport { aggregateTarget } from '../util/aggregation_util';\nimport { DataSourceWebsite } from './DataSource_Website';\nimport { DataSourceApplication } from './DataSource_Application';\nimport { DataSourceService } from './DataSource_Service';\nimport { DataSourceEndpoint } from './DataSource_Endpoint';\nimport { isInvalidQueryInterval } from '../util/queryInterval_check';\nimport { readItemMetrics } from '../util/analyze_util';\nimport migrate from '../migration';\n\nexport class DataSource extends DataSourceApi<InstanaQuery, InstanaOptions> {\n  options: InstanaOptions;\n  dataSourceInfrastructure: DataSourceInfrastructure;\n  dataSourceWebsite: DataSourceWebsite;\n  dataSourceApplication: DataSourceApplication;\n  dataSourceService: DataSourceService;\n  dataSourceEndpoint: DataSourceEndpoint;\n  dataSourceSlo: DataSourceSlo;\n  timeFilter!: TimeFilter;\n  availableGranularities: SelectableValue[];\n  availableRollups: SelectableValue[];\n  availableTimeIntervals: SelectableValue[];\n  resultCache: Cache<any>;\n\n  constructor(instanceSettings: DataSourceInstanceSettings<InstanaOptions>) {\n    super(instanceSettings);\n    this.options = instanceSettings.jsonData;\n    this.options.url = instanaUrl(instanceSettings);\n    this.availableGranularities = [];\n    this.availableRollups = [];\n    this.availableTimeIntervals = [];\n    this.dataSourceSlo = new DataSourceSlo(instanceSettings.jsonData);\n    this.dataSourceInfrastructure = new DataSourceInfrastructure(instanceSettings.jsonData);\n    this.dataSourceWebsite = new DataSourceWebsite(instanceSettings.jsonData);\n    this.dataSourceApplication = new DataSourceApplication(instanceSettings.jsonData);\n    this.dataSourceService = new DataSourceService(instanceSettings.jsonData);\n    this.dataSourceEndpoint = new DataSourceEndpoint(instanceSettings.jsonData);\n    this.resultCache = new Cache<any>();\n  }\n\n  async query(options: DataQueryRequest<InstanaQuery>): Promise<DataQueryResponse> {\n    const { range } = options;\n    this.timeFilter = readTime(range!);\n    this.availableRollups = getPossibleRollups(this.timeFilter);\n    this.availableGranularities = getPossibleGranularities(this.timeFilter.windowSize);\n\n    return Promise.all(\n      options.targets.map((target) => {\n        let targetTimeFilter = readTime(range!);\n\n        // grafana setting to disable query execution\n        if (target.hide) {\n          return { data: [], target: target };\n        }\n\n        // target migration for downwards compatibility\n        migrate(target);\n\n        if (!target.metricCategory) {\n          target.metricCategory = MetricCategories[0];\n        }\n\n        this.setPossibleTimeIntervals(target);\n        if (!this.availableTimeIntervals.find((i) => i.key === target.timeInterval.key)) {\n          target.timeInterval = this.getDefaultTimeInterval(target);\n        }\n\n        if (target.timeShift) {\n          let millis = this.convertTimeShiftToMillis(target.timeShift);\n          if (millis > 0) {\n            targetTimeFilter = this.applyTimeShiftOnTimeFilter(targetTimeFilter, millis);\n          }\n        }\n\n        target.timeFilter = targetTimeFilter;\n        target.stableHash = generateStableHash(target);\n        targetTimeFilter = this.adjustTimeFilterIfCached(targetTimeFilter, target);\n        const category = target.metricCategory.key;\n\n        if (category === SLO_INFORMATION) {\n          return this.dataSourceSlo.runQuery(target, targetTimeFilter).then((data: any) => {\n            return this.buildTargetWithAppendedDataResult(target, targetTimeFilter, data);\n          });\n        } else if (category === INFRASTRUCTURE_EXPLORE) {\n          return this.dataSourceInfrastructure.runQuery(target, targetTimeFilter).then((data: any) => {\n            return this.buildTarget(target, data);\n          });\n        } else if (category === BUILT_IN_METRICS || category === CUSTOM_METRICS) {\n          return this.dataSourceInfrastructure.runQuery(target, targetTimeFilter).then((data: any) => {\n            return this.buildTargetWithAppendedDataResult(target, targetTimeFilter, data);\n          });\n        } else if (category === ANALYZE_WEBSITE_METRICS) {\n          return this.dataSourceWebsite.runQuery(target, targetTimeFilter).then((data: any) => {\n            return this.buildTargetWithAppendedDataResult(target, targetTimeFilter, data);\n          });\n        } else if (category === ANALYZE_APPLICATION_METRICS) {\n          return this.dataSourceApplication.runQuery(target, targetTimeFilter).then((data: any) => {\n            return this.buildTargetWithAppendedDataResult(target, targetTimeFilter, data);\n          });\n        } else if (category === APPLICATION_SERVICE_ENDPOINT_METRICS) {\n          return this.getApplicationServiceEndpointMetrics(target, targetTimeFilter).then((data: any) => {\n            return this.buildTargetWithAppendedDataResult(target, targetTimeFilter, data);\n          });\n        }\n\n        return Promise.resolve(emptyResultData(target.refId));\n      })\n    ).then((targetData) => {\n      let result: any = [];\n      _.each(targetData, (targetAndData) => {\n        // Flatten the list as Grafana expects a list of targets with corresponding datapoints.\n        let resultData: any = _.compact(_.flatten(targetAndData.data)); // Also remove empty data items\n        this.cacheResultIfNecessary(_.cloneDeep(resultData), targetAndData.target); // clone to store results without timeshift re-calculation\n        this.applyTimeShiftIfNecessary(resultData, targetAndData.target); // adjust resultdata after caching the result\n        resultData = this.aggregateDataIfNecessary(resultData, targetAndData.target);\n        result.push(resultData);\n      });\n\n      return { data: _.flatten(result) };\n    });\n  }\n\n  getApplicationServiceEndpointMetrics(target: InstanaQuery, timeFilter: TimeFilter) {\n    // do not try to execute too big queries\n    if (isInvalidQueryInterval(timeFilter.windowSize, hoursToMs(this.options.queryinterval_limit_app_metrics))) {\n      throw new Error(\n        'Limit for maximum selectable windowsize exceeded, max is: ' +\n          this.options.queryinterval_limit_app_metrics +\n          ' hours'\n      );\n    }\n\n    if (target.endpoint && target.endpoint.key) {\n      return this.dataSourceEndpoint.fetchEndpointMetrics(target, timeFilter).then((response: any) => {\n        return readItemMetrics(target, response, this.dataSourceEndpoint.buildEndpointMetricLabel);\n      });\n    } else if (target.service && target.service.key) {\n      return this.dataSourceService.fetchServiceMetrics(target, timeFilter).then((response: any) => {\n        return readItemMetrics(target, response, this.dataSourceService.buildServiceMetricLabel);\n      });\n    } else if (target.entity && target.entity.key) {\n      return this.dataSourceApplication.fetchApplicationMetrics(target, timeFilter).then((response: any) => {\n        if (response.data) {\n          target.showWarningCantShowAllResults = response.data.canLoadMore;\n        }\n        return readItemMetrics(target, response, this.dataSourceApplication.buildApplicationMetricLabel);\n      });\n    }\n\n    return Promise.resolve({ data: { items: [] } });\n  }\n\n  applyTimeShiftIfNecessary(data: any, target: InstanaQuery) {\n    if (target.timeShift) {\n      let millis = this.convertTimeShiftToMillis(target.timeShift);\n      if (millis > 0) {\n        data.forEach((data: any) => {\n          this.applyTimeShiftOnData(data, millis);\n        });\n      }\n    }\n  }\n\n  cacheResultIfNecessary(result: any, target: InstanaQuery) {\n    if (this.supportsDeltaRequests(target) && this.hasResult(result)) {\n      let cachedObj = {\n        timeFilter: target.timeFilter,\n        results: result,\n      };\n      this.resultCache.put(target.stableHash, cachedObj, 4000000); // set to 1,11 hour\n    }\n  }\n\n  supportsDeltaRequests(target: InstanaQuery): boolean {\n    if (target.metricCategory) {\n      if (target.metricCategory.key === SLO_INFORMATION || target.metricCategory.key === INFRASTRUCTURE_EXPLORE) {\n        return false;\n      }\n    }\n\n    let version = this.resultCache.get('version');\n    if (!version) {\n      return getVersion(this.options).then((version: any) => {\n        this.resultCache.put('version', version, 4000000); // set to 1,11 hour\n        return version >= 171;\n      });\n    }\n\n    return version >= 171;\n  }\n\n  hasResult(result: any) {\n    return result && result.length > 0;\n  }\n\n  applyTimeShiftOnData(data: any, timeshift: number) {\n    data.datapoints.forEach((datapoint: any) => {\n      datapoint[1] = datapoint[1] + timeshift;\n    });\n  }\n\n  aggregateDataIfNecessary(data: any, target: InstanaQuery): any[] {\n    let newData = [];\n\n    if (target.aggregateGraphs) {\n      const aggregatedData = aggregateTarget(data, target);\n      newData.push(aggregatedData);\n      if (!target.hideOriginalGraphs) {\n        _.each(data, (dt) => {\n          if (dt.target !== aggregatedData.target) {\n            newData.push(dt);\n          }\n        });\n      }\n      return newData;\n    }\n\n    return data;\n  }\n\n  buildTarget(target: InstanaQuery, data: any) {\n    return {\n      target: target,\n      data: data,\n    };\n  }\n\n  buildTargetWithAppendedDataResult(target: InstanaQuery, timeFilter: TimeFilter, data: any) {\n    if (timeFilter.from !== target.timeFilter.from && data) {\n      data = this.appendResult(data, target);\n\n      data.forEach((t: any) => {\n        t.datapoints = t.datapoints.filter((d: any) => d[1] >= target.timeFilter.from);\n      });\n    }\n\n    return this.buildTarget(target, data);\n  }\n\n  appendResult(data: any, target: InstanaQuery) {\n    let cachedResult = this.resultCache.get(target.stableHash);\n    if (cachedResult && cachedResult.results) {\n      data = appendData(data, cachedResult.results);\n    }\n    return data;\n  }\n\n  adjustTimeFilterIfCached(timeFilter: TimeFilter, target: InstanaQuery): TimeFilter {\n    let cachedResult = this.resultCache.get(target.stableHash);\n    if (cachedResult && hasIntersection(timeFilter, cachedResult.timeFilter)) {\n      let newFrom = getDeltaRequestTimestamp(cachedResult.results, cachedResult.timeFilter.from, target.timeInterval);\n      let newTo = Math.floor(timeFilter.to / 10000) * 10000;\n      return {\n        from: newFrom,\n        to: newTo,\n        windowSize: newTo - newFrom,\n      };\n    }\n    return timeFilter;\n  }\n\n  getSloReports(): Promise<SelectableValue[]> {\n    return this.dataSourceSlo.getConfiguredSLIs();\n  }\n\n  getEntityTypes(): Promise<SelectableValue[]> {\n    return this.dataSourceInfrastructure.getEntityTypes();\n  }\n\n  fetchApplications() {\n    return this.dataSourceApplication.getApplications(this.getTimeFilter());\n  }\n\n  fetchApplicationTags() {\n    return this.dataSourceApplication.getApplicationTags(this.getTimeFilter());\n  }\n\n  fetchServices(target: InstanaQuery) {\n    return this.dataSourceService.getServicesOfApplication(target, this.getTimeFilter());\n  }\n\n  fetchEndpoints(target: InstanaQuery) {\n    return this.dataSourceEndpoint.getEndpointsOfService(target, this.getTimeFilter());\n  }\n\n  fetchTypesForTarget(query: InstanaQuery) {\n    return this.dataSourceInfrastructure.fetchTypesForTarget(query, this.getTimeFilter());\n  }\n\n  fetchWebsites(): Promise<SelectableValue[]> {\n    return this.dataSourceWebsite.getWebsites(this.getTimeFilter());\n  }\n\n  getDefaultTimeInterval(query: InstanaQuery) {\n    const category = query.metricCategory.key;\n    if (category === BUILT_IN_METRICS || category === CUSTOM_METRICS || category === INFRASTRUCTURE_EXPLORE) {\n      return getDefaultMetricRollupDuration(this.getTimeFilter());\n    } else {\n      return getDefaultChartGranularity(this.getTimeFilter().windowSize);\n    }\n  }\n\n  convertTimeShiftToMillis(timeShift: string): number {\n    if (!timeShift) {\n      return 0;\n    }\n\n    try {\n      return this.parseTimeShift(timeShift);\n    } catch (e) {\n      return 0;\n    }\n  }\n\n  parseTimeShift(timeShift: string): number {\n    let milliSeconds = 1000;\n\n    if (timeShift.endsWith('s')) {\n      return parseInt(timeShift.split('s')[0], 10) * milliSeconds;\n    } else if (timeShift.endsWith('m')) {\n      return parseInt(timeShift.split('m')[0], 10) * 60 * milliSeconds;\n    } else if (timeShift.endsWith('h')) {\n      return parseInt(timeShift.split('h')[0], 10) * 60 * 60 * milliSeconds;\n    } else if (timeShift.endsWith('d')) {\n      return parseInt(timeShift.split('d')[0], 10) * 60 * 60 * 24 * milliSeconds;\n    } else if (timeShift.endsWith('w')) {\n      return parseInt(timeShift.split('w')[0], 10) * 60 * 60 * 24 * 7 * milliSeconds;\n    }\n    return 0;\n  }\n\n  applyTimeShiftOnTimeFilter(timeFilter: TimeFilter, timeShift: number): TimeFilter {\n    return {\n      from: timeFilter.from - timeShift,\n      to: timeFilter.to - timeShift,\n      windowSize: timeFilter.windowSize,\n    };\n  }\n\n  setPossibleTimeIntervals(target: InstanaQuery) {\n    const category = target.metricCategory.key;\n    if (category === BUILT_IN_METRICS || category === CUSTOM_METRICS || category === INFRASTRUCTURE_EXPLORE) {\n      this.availableTimeIntervals = this.availableRollups;\n    } else {\n      this.availableTimeIntervals = this.availableGranularities;\n    }\n  }\n\n  getTimeFilter(): TimeFilter {\n    if (!this.timeFilter || !this.timeFilter.from) {\n      const now = Math.floor(Date.now() / 1000) * 1000;\n      const windowSize = 6 * 60 * 60 * 1000; // 6h\n      this.timeFilter = {\n        from: now - windowSize,\n        to: now,\n        windowSize: windowSize,\n      };\n    }\n\n    return this.timeFilter;\n  }\n\n  testDatasource(): Promise<any> {\n    return getRequest(this.options, '/api/monitoringState').then(\n      () => {\n        return {\n          status: 'success',\n          message: 'Successfully connected to the Instana API.',\n          title: 'Success',\n        };\n      },\n      (error: any) => {\n        if (error.status === 401) {\n          return {\n            status: 'error',\n            message: 'Unauthorized. Please verify the API Token.',\n            title: 'Error',\n          };\n        } else {\n          console.log(error);\n          return {\n            status: 'error',\n            message: 'Error (' + error.status + ') connecting to the Instana API: ' + error.statusText,\n            title: 'Error',\n          };\n        }\n      }\n    );\n  }\n}\n","import _ from 'lodash';\n\n// check grafana version (5.3+)\nexport default () => {\n  const version = _.get(window, ['grafanaBootData', 'settings', 'buildInfo', 'version'], '3.0.0');\n  const versions = _.split(version, '.', 2).map((v) => {\n    return parseInt(v, 10);\n  });\n  return version[0] >= 6 || (versions[0] >= 5 && versions[1] >= 3);\n};\n","import React, { ChangeEvent, PureComponent } from 'react';\n\nimport { DataSourcePluginOptionsEditorProps, DataSourceSettings, SelectableValue } from '@grafana/data';\nimport { Legend, Field, Input, Checkbox, Icon, Tooltip } from '@grafana/ui';\nimport { InstanaOptions } from '../types/instana_options';\nimport getVersion from '../util/instana_version';\nimport proxyCheck from '../util/proxy_check';\nimport _ from 'lodash';\nimport './plugin.css';\n\ninterface Props extends DataSourcePluginOptionsEditorProps<InstanaOptions> {}\n\ninterface State {\n  canQueryOfflineSnapshots: boolean;\n  canUseProxy: boolean;\n}\n\nexport class ConfigEditor extends PureComponent<Props, State> {\n  constructor(props: Readonly<Props>) {\n    super(props);\n    this.state = { canQueryOfflineSnapshots: false, canUseProxy: false };\n\n    // check possibility every time\n    this.detectFeatures();\n\n    const { options } = this.props;\n    const { jsonData } = options;\n\n    if (jsonData.useProxy === undefined) {\n      jsonData.useProxy = proxyCheck();\n    }\n  }\n\n  onInstanaOptionsChange = (eventItem: ChangeEvent<HTMLInputElement> | SelectableValue, key: keyof InstanaOptions) => {\n    const { options, onOptionsChange } = this.props;\n    const jsonData = {\n      ...options.jsonData,\n      [key]: eventItem.currentTarget.value,\n    };\n\n    onOptionsChange({ ...options, jsonData });\n\n    if ('url' === key || 'apiToken' === key) {\n      this.debouncedDetectFeatures(options);\n    }\n  };\n\n  onSwitchChange = (eventItem: SelectableValue<HTMLInputElement> | any, key: keyof InstanaOptions) => {\n    const { options, onOptionsChange } = this.props;\n    let value = false;\n\n    if (eventItem && eventItem.currentTarget) {\n      value = !options.jsonData[key];\n    }\n\n    const jsonData = {\n      ...options.jsonData,\n      [key]: value,\n    };\n\n    onOptionsChange({ ...options, jsonData });\n  };\n\n  debouncedDetectFeatures = (settings?: DataSourceSettings<InstanaOptions, {}>) => {\n    _.debounce(() => this.detectFeatures(settings), 500);\n  };\n\n  /**\n   * Checks whether the provided tenant-unit is able to provide certain features such as querying offline snapshots.\n   */\n  detectFeatures = (settings?: DataSourceSettings<InstanaOptions, {}>) => {\n    if (!settings) {\n      settings = this.props.options;\n    }\n\n    if (!settings.id) {\n      return;\n    }\n\n    this.setState({ canUseProxy: proxyCheck() });\n    getVersion(settings.jsonData).then((version: any) => {\n      version\n        ? this.setState({ canQueryOfflineSnapshots: version >= 156 })\n        : this.setState({ canQueryOfflineSnapshots: false });\n    });\n  };\n\n  render() {\n    const { options } = this.props;\n    const { jsonData } = options;\n\n    return (\n      <div className=\"settings\">\n        <Legend>Instana configuration</Legend>\n\n        <Field\n          className={'width-30'}\n          horizontal\n          required\n          label=\"URL\"\n          description=\"The URL of your Instana installation.\"\n        >\n          <Input\n            width={30}\n            value={jsonData.url}\n            placeholder={'https://tools-acme.instana.io'}\n            onChange={(event) => this.onInstanaOptionsChange(event, 'url')}\n          />\n        </Field>\n\n        <Field\n          className={'width-30'}\n          horizontal\n          required\n          label=\"API Token\"\n          description=\"The API token to access the data.\"\n        >\n          <Input\n            type=\"password\"\n            width={30}\n            value={jsonData.apiToken}\n            suffix={\n              <Tooltip\n                content={\n                  <p>\n                    You can create API tokens following the instructions at&nbsp;\n                    <a href=\"https://www.ibm.com/docs/en/obi/current?topic=apis-web-rest-api#unit-specific-api-tokens\">\n                      https://www.ibm.com/docs/en/obi/current?topic=apis-web-rest-api\n                    </a>\n                  </p>\n                }\n                theme={'info'}\n              >\n                <Icon name=\"info-circle\" />\n              </Tooltip>\n            }\n            onChange={(event) => this.onInstanaOptionsChange(event, 'apiToken')}\n          />\n        </Field>\n\n        <Checkbox\n          label={'Use Proxy'}\n          value={jsonData.useProxy}\n          onChange={(event) => this.onSwitchChange(event, 'useProxy')}\n          description={'Use Grafana server as proxy. Needs Grafana 5.3+ and Instana datasource 2.0.0+'}\n        />\n\n        <Checkbox\n          label={'Enable offline snapshots'}\n          value={jsonData.showOffline}\n          onChange={(event) => this.onSwitchChange(event, 'showOffline')}\n          description={'Enables querying offline snapshots. Needs Instana release 156+ and Instana datasource 2.3.0+'}\n        />\n\n        <Checkbox\n          label={'Enable Infrastructure Explore category'}\n          value={jsonData.allowInfraExplore}\n          onChange={(event) => this.onSwitchChange(event, 'allowInfraExplore')}\n          description={\n            'Beta feature. Adds a new category that allows usage of Infrastructure Explore functionality. Needs Instana release ' +\n            '195+ and an explicit feature flag. If you are interested in this technology, please submit a request via ' +\n            'our support system at https://support.instana.com/.'\n          }\n        />\n\n        <br />\n        <br />\n        <b>Maximum query intervals in hours</b>\n        <p className={'width-30'}>\n          This settings are optional values to control the load of data queries, by defining the maximum allowed query\n          intervals against the Instana API.\n        </p>\n\n        <Field className={'width-30'} horizontal label=\"Infrastructure metrics\">\n          <Input\n            width={30}\n            value={jsonData.queryinterval_limit_infra}\n            placeholder={'optional: interval limit in hours'}\n            onChange={(event) => this.onInstanaOptionsChange(event, 'queryinterval_limit_infra')}\n          />\n        </Field>\n\n        <Field className={'width-30'} horizontal label=\"Application metrics\">\n          <Input\n            width={30}\n            value={jsonData.queryinterval_limit_app_metrics}\n            placeholder={'optional: interval limit in hours'}\n            onChange={(event) => this.onInstanaOptionsChange(event, 'queryinterval_limit_app_metrics')}\n          />\n        </Field>\n\n        <Field className={'width-30'} horizontal label=\"Analyze application calls\">\n          <Input\n            width={30}\n            value={jsonData.queryinterval_limit_app_calls}\n            placeholder={'optional: interval limit in hours'}\n            onChange={(event) => this.onInstanaOptionsChange(event, 'queryinterval_limit_app_calls')}\n          />\n        </Field>\n\n        <Field className={'width-30'} horizontal label=\"Analyze website\">\n          <Input\n            width={30}\n            value={jsonData.queryinterval_limit_website_metrics}\n            placeholder={'optional: interval limit in hours'}\n            onChange={(event) => this.onInstanaOptionsChange(event, 'queryinterval_limit_website_metrics')}\n          />\n        </Field>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\ninterface WrapperProps {\n  disabled?: boolean;\n  stretch?: boolean;\n  children: any;\n}\n\nexport default function FormWrapper(props: WrapperProps) {\n  const style: any = { display: 'flex' };\n\n  if (props.disabled) {\n    style.opacity = '0.4';\n    style.pointerEvents = 'none';\n  }\n\n  if (props.stretch) {\n    style.width = '100%';\n  }\n\n  return <div style={style}>{props.children}</div>;\n}\n","import React from 'react';\n\nimport { InlineFormLabel, LegacyForms, PopoverContent } from '@grafana/ui';\nimport FormWrapper from './FormWrapper';\n\nconst { Switch } = LegacyForms;\n\ninterface State {}\n\ninterface Props {\n  label: string;\n  value: boolean;\n  disabled?: boolean;\n  queryKeyword?: boolean;\n  labelWidth?: number | 14;\n  tooltip?: PopoverContent;\n\n  onChange(event?: any): any;\n}\n\n/**\n * Default switch field including label. Switch element is grafana/ui <Switch />.\n */\nexport default class FormSwitch extends React.Component<Props, State> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  render() {\n    const { label, tooltip, queryKeyword, disabled, labelWidth = 14, value, ...remainingProps } = this.props;\n\n    return (\n      <FormWrapper disabled={disabled} stretch={false}>\n        <InlineFormLabel className={queryKeyword ? 'query-keyword' : ''} width={labelWidth} tooltip={tooltip}>\n          {label}\n        </InlineFormLabel>\n        <Switch checked={value} label={''} {...remainingProps} />\n      </FormWrapper>\n    );\n  }\n}\n","import React, { ChangeEvent } from 'react';\n\nimport { InstanaQuery } from '../../../types/instana_query';\nimport FormSwitch from '../../FormField/FormSwitch';\nimport { Input } from '@grafana/ui';\nimport _ from 'lodash';\n\ninterface FreeTextMetricsState {}\n\ninterface Props {\n  query: InstanaQuery;\n  onRunQuery(): void;\n  onChange(value: InstanaQuery): void;\n  loadEntityTypes(filterResult?: boolean): void;\n}\n\nexport class FreeTextMetrics extends React.Component<Props, FreeTextMetricsState> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  debouncedRunQuery = _.debounce(this.props.onRunQuery, 500);\n\n  onUseFreeTextMetricsChange = (event: React.SyntheticEvent<HTMLInputElement> | undefined) => {\n    const { query, onChange, loadEntityTypes } = this.props;\n    if (event && event.currentTarget) {\n      query.useFreeTextMetrics = event.currentTarget.checked;\n      if (query.useFreeTextMetrics) {\n        loadEntityTypes(false);\n        query.metric = {};\n      } else {\n        loadEntityTypes(true);\n      }\n      onChange(query);\n    }\n  };\n\n  onFreeTextMetricsChange = (eventItem: ChangeEvent<HTMLInputElement>) => {\n    const { query, onChange } = this.props;\n    query.freeTextMetrics = eventItem.currentTarget.value;\n    onChange(query);\n\n    // onRunQuery with 500ms delay after last debounce\n    this.debouncedRunQuery();\n  };\n\n  render() {\n    const { query } = this.props;\n\n    return (\n      <div className={'gf-form'}>\n        <FormSwitch\n          queryKeyword\n          label={'Enable free text metrics'}\n          tooltip={\n            'Specify comma separated metrics directly in this text field. Once this field has a value,' +\n            ' selected metrics from above will be ignored. Enabled as soon as a query is entered.' +\n            ' Max 4 metrics supported.'\n          }\n          value={query.useFreeTextMetrics}\n          onChange={this.onUseFreeTextMetricsChange}\n          disabled={false}\n        />\n        <Input\n          width={0}\n          disabled={!query.useFreeTextMetrics}\n          value={query.freeTextMetrics}\n          placeholder={'metric.one,metric.two,metric.three'}\n          onChange={this.onFreeTextMetricsChange}\n        />\n      </div>\n    );\n  }\n}\n","export default [\n  {\n    label: 'SUM',\n  },\n  {\n    label: 'MEAN',\n  },\n  {\n    label: 'MIN',\n  },\n  {\n    label: 'MAX',\n  },\n];\n","import React from 'react';\n\nimport AggregationFunctions from '../../lists/aggregation_function';\nimport { InstanaQuery } from '../../types/instana_query';\nimport FormSwitch from '../FormField/FormSwitch';\nimport { SelectableValue } from '@grafana/data';\nimport { Select } from '@grafana/ui';\n\ninterface AggregateQueryState {}\n\ninterface Props {\n  query: InstanaQuery;\n  onRunQuery(): void;\n  onChange(value: InstanaQuery): void;\n}\n\nexport class AggregateQuery extends React.Component<Props, AggregateQueryState> {\n  constructor(props: any) {\n    super(props);\n    this.state = { showAdditionalSettings: false, legendFormat: '' };\n    const { query } = this.props;\n    if (!query.aggregationFunction) {\n      query.aggregationFunction = AggregationFunctions[0];\n    }\n  }\n\n  onAggregateGraphs = (event: React.SyntheticEvent<HTMLInputElement> | undefined) => {\n    const { query, onRunQuery } = this.props;\n    if (event && event.currentTarget) {\n      query.aggregateGraphs = event.currentTarget.checked;\n      onRunQuery();\n    }\n  };\n\n  onHideOriginalGraph = (event: React.SyntheticEvent<HTMLInputElement> | undefined) => {\n    const { query, onRunQuery } = this.props;\n    if (event && event.currentTarget) {\n      query.hideOriginalGraphs = event.currentTarget.checked;\n      onRunQuery();\n    }\n  };\n\n  onAggregationFunctionChange = (event: SelectableValue) => {\n    const { query, onRunQuery } = this.props;\n    query.aggregationFunction = event;\n    onRunQuery();\n  };\n\n  render() {\n    const { query } = this.props;\n\n    return (\n      <div className={'gf-form'}>\n        <FormSwitch\n          queryKeyword\n          label={'Aggregate query graphs'}\n          tooltip={'Aggregate all graphs of a query.'}\n          value={query.aggregateGraphs}\n          onChange={this.onAggregateGraphs}\n        />\n\n        <Select\n          menuPlacement={'bottom'}\n          width={12}\n          isSearchable={true}\n          options={AggregationFunctions}\n          value={query.aggregationFunction}\n          disabled={!query.aggregateGraphs}\n          onChange={this.onAggregationFunctionChange}\n        />\n\n        <FormSwitch\n          queryKeyword\n          disabled={!query.aggregateGraphs}\n          labelWidth={10}\n          label={'Hide original graphs'}\n          tooltip={'Removes the original graphs resulted from the query and only shows the aggregated graph.'}\n          value={query.hideOriginalGraphs}\n          onChange={this.onHideOriginalGraph}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nimport { InlineFormLabel, Input, PopoverContent } from '@grafana/ui';\nimport FormWrapper from './FormWrapper';\n\ninterface State {}\n\ninterface Props {\n  label: string;\n  value: string;\n  invalid?: boolean;\n  disabled?: boolean;\n  placeholder?: string;\n  queryKeyword?: boolean;\n  labelWidth?: number | 14;\n  inputWidth?: number | 30;\n  tooltip?: PopoverContent;\n\n  onChange(event?: any): any;\n}\n\n/**\n * Default input field including label. Input element is grafana/ui <Input />.\n */\nexport default class FormInput extends React.Component<Props, State> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  render() {\n    const { label, tooltip, queryKeyword, disabled, labelWidth = 14, inputWidth = 30, ...remainingProps } = this.props;\n\n    return (\n      <FormWrapper disabled={disabled} stretch={!inputWidth}>\n        <InlineFormLabel className={queryKeyword ? 'query-keyword' : ''} width={labelWidth} tooltip={tooltip}>\n          {label}\n        </InlineFormLabel>\n        <Input width={inputWidth} disabled={disabled} {...remainingProps} />\n      </FormWrapper>\n    );\n  }\n}\n","import React, { ChangeEvent, FormEvent } from 'react';\n\nimport { BUILT_IN_METRICS, CUSTOM_METRICS, INFRASTRUCTURE_EXPLORE, SLO_INFORMATION } from '../../GlobalVariables';\nimport { FreeTextMetrics } from '../Infrastructure/Custom/FreeTextMetrics';\nimport { InstanaQuery } from '../../types/instana_query';\nimport { AggregateQuery } from './AggregateQuery';\nimport FormSwitch from '../FormField/FormSwitch';\nimport FormInput from '../FormField/FormInput';\nimport _ from 'lodash';\n\nconst legendFormatPlaceholders = [\n  '$label (on host $host)',\n  '$label (on host $host)',\n  '$label ($application) - $key',\n  '$label ($website) - $key',\n  '$label ($application) - $key',\n  '',\n  '',\n  '',\n];\n\nconst legendFormatTooltips = [\n  <div key=\"builtIn\">\n    Default: $label (on host $host)\n    <ul>\n      <li>• $label - entity label</li>\n      <li>• $host - corresponding host</li>\n      <li>• $pid - corresponding PID</li>\n      <li>• $timeShift - corresponding timeShift</li>\n      <li>• $metric - displayed metric</li>\n      <li>• $type - entity type</li>\n      <li>• $service - service label</li>\n      <li>• $name - label alternative</li>\n      <li>• $index - index in the list</li>\n    </ul>\n  </div>,\n  <div key=\"custom\">\n    Default: $label (on host $host)\n    <ul>\n      <li>• $label - entity label</li>\n      <li>• $host - corresponding host</li>\n      <li>• $pid - corresponding PID</li>\n      <li>• $timeShift - corresponding timeShift</li>\n      <li>• $metric - displayed metric</li>\n      <li>• $type - entity type</li>\n      <li>• $service - service label</li>\n      <li>• $name - label alternative</li>\n      <li>• $index - index in the list</li>\n    </ul>\n  </div>,\n  <div key=\"application\">\n    Default: $label ($application) - $key\n    <ul>\n      <li>• $label - entity label</li>\n      <li>• $application - application label</li>\n      <li>• $timeShift - corresponding timeShift</li>\n      <li>• $metric - displayed metric</li>\n      <li>• $key - metric key with aggregation and rollup</li>\n      <li>• $index - index in the list</li>\n    </ul>\n  </div>,\n  <div key=\"website\">\n    Default: $label ($website) - $key\n    <ul>\n      <li>• $label - entity label</li>\n      <li>• $website - application label</li>\n      <li>• $type - entity type</li>\n      <li>• $timeShift - corresponding timeShift</li>\n      <li>• $metric - displayed metric</li>\n      <li>• $key - metric key with aggregation and rollup</li>\n      <li>• $index - index in the list</li>\n    </ul>\n  </div>,\n  <div key=\"endpoint\">\n    Default: $label ($application) - $key\n    <ul>\n      <li>• $label - entity label</li>\n      <li>• $application - application label</li>\n      <li>• $service - service label</li>\n      <li>• $endpoint - endpoint label</li>\n      <li>• $timeShift - corresponding timeShift</li>\n      <li>• $metric - displayed metric</li>\n      <li>• $key - metric key with aggregation and rollup</li>\n      <li>• $index - index in the list</li>\n    </ul>\n  </div>,\n  '',\n  '',\n  '',\n];\n\ninterface AdvancedSettingsState {\n  legendFormatPlaceholder: string;\n}\n\ninterface Props {\n  query: InstanaQuery;\n  onRunQuery(): void;\n  onChange(value: InstanaQuery): void;\n  loadEntityTypes(filterResult?: boolean): void;\n}\n\nexport default class AdvancedSettings extends React.Component<Props, AdvancedSettingsState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      legendFormatPlaceholder: this.setLegendFormatPlaceholder(),\n    };\n  }\n\n  debouncedRunQuery = _.debounce(this.props.onRunQuery, 500);\n\n  onLegendFormatChange = (eventItem: FormEvent<HTMLInputElement>) => {\n    const { query, onChange } = this.props;\n    query.labelFormat = eventItem.currentTarget.value;\n    onChange(query);\n\n    // onRunQuery with 500ms delay after last debounce\n    this.debouncedRunQuery();\n  };\n\n  onTimeShiftChange = (eventItem: ChangeEvent<HTMLInputElement>) => {\n    const { query, onChange } = this.props;\n    query.timeShift = eventItem.currentTarget.value;\n\n    if (query.timeShift) {\n      query.timeShiftIsValid = query.timeShift.match(/\\d+[m,s,h,d,w]{1}/) ? true : false;\n    } else {\n      query.timeShiftIsValid = true;\n    }\n\n    onChange(query);\n\n    if (query.timeShiftIsValid) {\n      // onRunQuery with 500ms delay after last debounce\n      this.debouncedRunQuery();\n    }\n  };\n\n  setLegendFormatPlaceholder(): string {\n    const { query } = this.props;\n    return legendFormatPlaceholders[query.metricCategory.key];\n  }\n\n  setLegendFormatTooltip() {\n    const { query } = this.props;\n    return legendFormatTooltips[query.metricCategory.key];\n  }\n\n  onShowAdvancedSettingsChange = (event: React.SyntheticEvent<HTMLInputElement> | undefined) => {\n    if (event && event.currentTarget) {\n      const { query, onChange } = this.props;\n      query.showAdvancedSettings = event.currentTarget.checked;\n      onChange(query);\n    }\n  };\n\n  render() {\n    const { query, onRunQuery, onChange, loadEntityTypes } = this.props;\n    const category = query.metricCategory.key;\n\n    return (\n      <div>\n        <div className={'gf-form'}>\n          <FormSwitch\n            label={'Show advanced settings'}\n            tooltip={'Show all additional settings'}\n            value={query.showAdvancedSettings}\n            onChange={(e) => this.onShowAdvancedSettingsChange(e)}\n          />\n        </div>\n\n        <div hidden={!query.showAdvancedSettings}>\n          <div className={'gf-form'} hidden={category === SLO_INFORMATION || category === INFRASTRUCTURE_EXPLORE}>\n            <FormInput\n              queryKeyword\n              inputWidth={0}\n              label={'Legend format'}\n              tooltip={this.setLegendFormatTooltip()}\n              value={query.labelFormat}\n              placeholder={this.setLegendFormatPlaceholder()}\n              onChange={(event) => this.onLegendFormatChange(event)}\n            />\n          </div>\n\n          <div className={'gf-form'}>\n            <FormInput\n              queryKeyword\n              inputWidth={0}\n              label={'Time shift'}\n              tooltip={\n                'Specify the amount of hours that shall be used. The time shift function always go back in time, ' +\n                'not forward. Accepts values such as 1s, 1m, 1h, 1d, 1w.'\n              }\n              value={query.timeShift}\n              invalid={!query.timeShiftIsValid}\n              placeholder={'1h'}\n              onChange={(event) => this.onTimeShiftChange(event)}\n            />\n          </div>\n\n          <div hidden={category !== CUSTOM_METRICS}>\n            <FreeTextMetrics\n              query={query}\n              onRunQuery={onRunQuery}\n              onChange={onChange}\n              loadEntityTypes={loadEntityTypes}\n            />\n          </div>\n\n          <div hidden={category !== BUILT_IN_METRICS && category !== CUSTOM_METRICS}>\n            <AggregateQuery query={query} onRunQuery={onRunQuery} onChange={onChange} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","export default ['DESTINATION', 'SOURCE'];\n","import React, { useState } from 'react';\nimport { Tooltip, useTheme } from '@grafana/ui';\n\nconst DESTINATION = 'DESTINATION';\nconst SOURCE = 'SOURCE';\n\nconst dropdown = {\n  position: 'relative',\n  background: 'transparent',\n  width: '32px',\n  height: '32px',\n  marginRight: '4px',\n} as React.CSSProperties;\n\nconst dropdown__list = {\n  transition: 'max-height .2s ease-out',\n  maxHeight: 0,\n  overflow: 'hidden',\n  zIndex: 1,\n  position: 'fixed',\n} as React.CSSProperties;\n\nconst dropdown__list__active = {\n  overflow: 'hidden',\n  zIndex: 2, // we set a zIndex to ensure that the overlay is above other elements and does not move any DOM elements.\n  position: 'fixed',\n  maxHeight: '1000px',\n  opacity: 1,\n} as React.CSSProperties;\n\nconst iconTextContainer = {\n  display: 'inline-flex',\n};\n\nconst iconStyle = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n};\n\nconst iconTextStyle = {\n  padding: '7px',\n};\n\nconst iconSize = 30;\n\nconst destinationIcon = (\n  <svg style={iconStyle} height={iconSize} width={iconSize}>\n    <path\n      transform=\"translate(3, 5)\"\n      fill=\"#33a2e5\"\n      d=\"M4 11.173h6.38L8.115 8.92 9.042 8l3.704 3.684-3.704 3.684-.926-.92 2.263-2.252H4zM16.43 14.316c-1.426 0-2.632-1.206-2.632-2.632 0-1.425 1.206-2.631 2.632-2.631 1.425 0 2.631 1.206 2.631 2.631 0 1.426-1.206 2.632-2.631 2.632z\"\n    />\n  </svg>\n);\n\nconst sourceIcon = (\n  <svg style={iconStyle} height={iconSize} width={iconSize}>\n    <path\n      transform=\"translate(3, 5)\"\n      fill=\"#33a2e5\"\n      d=\"M9.939 11.173h6.379L14.054 8.92 14.98 8l3.704 3.684-3.704 3.684-.926-.92 2.264-2.252h-6.38c-.308 1.023-1.234 1.842-2.366 1.842C6.132 14.243 5 13.117 5 11.787c0-1.33 1.132-2.457 2.47-2.457 1.234 0 2.16.717 2.469 1.843z\"\n    />\n  </svg>\n);\n\n/**\n * Props have to be:\n *   value: string\n *   onChange: function that accepts a string as a parameter and returns void\n */\nexport default function Entity(props: any) {\n  const theme = useTheme();\n\n  const dropdown__list__item = {\n    background: theme.colors.bg2,\n    cursor: 'pointer',\n    listStyle: 'none',\n    borderRadius: '3px',\n    height: '32px',\n  } as React.CSSProperties;\n\n  const [active, setActive] = useState(false);\n\n  function toggleDropdown() {\n    setActive(!active);\n  }\n\n  function handleClick(entity: string) {\n    props.onChange(entity);\n    setActive(false);\n  }\n\n  return (\n    <div style={dropdown}>\n      <div\n        onClick={() => toggleDropdown()}\n        onBlur={() => setActive(false)}\n        style={dropdown__list__item}\n        contentEditable\n      >\n        <Tooltip content={props.value} theme={'info'} placement={'top'}>\n          {props.value === DESTINATION ? destinationIcon : sourceIcon}\n        </Tooltip>\n      </div>\n\n      <ul style={active ? dropdown__list__active : dropdown__list}>\n        <li onClick={() => handleClick(DESTINATION)} key={DESTINATION} style={dropdown__list__item}>\n          <div style={iconTextContainer}>\n            {destinationIcon} <span style={iconTextStyle}>{DESTINATION}</span>\n          </div>\n        </li>\n        <li onClick={() => handleClick('SOURCE')} key={SOURCE} style={dropdown__list__item}>\n          <div style={iconTextContainer}>\n            {sourceIcon} <span style={iconTextStyle}>{SOURCE}</span>\n          </div>\n        </li>\n      </ul>\n    </div>\n  );\n}\n","import React, { ChangeEvent } from 'react';\n\nimport { ALL_APPLICATIONS, ANALYZE_APPLICATION_METRICS } from '../../GlobalVariables';\nimport call_to_entities from '../../lists/apply_call_to_entities';\nimport { Input, Select, InlineFormLabel } from '@grafana/ui';\nimport { DataSource } from '../../datasources/DataSource';\nimport { InstanaQuery } from '../../types/instana_query';\nimport FormWrapper from '../FormField/FormWrapper';\nimport { SelectableValue } from '@grafana/data';\nimport Entity from '../Entity/Entity';\nimport _ from 'lodash';\nimport '../plugin.css';\n\ninterface ApplicationCallsMetricsState {\n  applications: SelectableValue[];\n}\n\ninterface Props {\n  query: InstanaQuery;\n\n  groups: SelectableValue[];\n\n  updateGroups(groups: SelectableValue[]): void;\n\n  onRunQuery(): void;\n\n  onChange(value: InstanaQuery): void;\n\n  updateMetrics(metrics: SelectableValue[]): void;\n\n  datasource: DataSource;\n}\n\nlet isUnmounting = false;\n\nexport class ApplicationCallsMetrics extends React.Component<Props, ApplicationCallsMetricsState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      applications: [],\n    };\n  }\n\n  componentDidMount() {\n    const { query, datasource, onChange } = this.props;\n    isUnmounting = false;\n    datasource.fetchApplications().then((applications) => {\n      if (!isUnmounting) {\n        if (!_.find(applications, { key: null })) {\n          applications.unshift({ key: null, label: ALL_APPLICATIONS });\n        }\n\n        this.setState({\n          applications: applications,\n        });\n\n        if (!query.entity || (!query.entity.key && !query.entity.label)) {\n          query.entity = applications[0];\n        }\n\n        if (!query.callToEntity) {\n          query.callToEntity = call_to_entities[0];\n        }\n        if (!query.applicationCallToEntity) {\n          query.applicationCallToEntity = call_to_entities[0];\n        }\n\n        onChange(query);\n      }\n    });\n\n    datasource.fetchApplicationTags().then((applicationTags: any) => {\n      if (!isUnmounting) {\n        this.props.updateGroups(_.sortBy(applicationTags, 'key'));\n\n        // select a meaningful default group\n        if (!query.group || !query.group.key) {\n          query.group = _.find(applicationTags, ['key', 'endpoint.name']);\n          onChange(query);\n        }\n      }\n    });\n\n    this.props.updateMetrics(datasource.dataSourceApplication.getApplicationMetricsCatalog());\n  }\n\n  componentWillUnmount() {\n    isUnmounting = true;\n  }\n\n  onApplicationChange = (application: SelectableValue) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.entity = application;\n    onChange(query);\n    onRunQuery();\n  };\n\n  onGroupChange = (group: SelectableValue) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.group = group;\n\n    if (query.group && query.metricCategory.key === ANALYZE_APPLICATION_METRICS) {\n      query.showGroupBySecondLevel = query.group.type === 'KEY_VALUE_PAIR';\n    }\n\n    if (!query.showGroupBySecondLevel) {\n      query.groupbyTagSecondLevelKey = '';\n    }\n\n    onChange(query);\n    onRunQuery();\n  };\n\n  onApplicationCallToEntityChange = (applicationCallToEntity: string) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.applicationCallToEntity = applicationCallToEntity;\n    onChange(query);\n    onRunQuery();\n  };\n\n  onCallToEntityChange = (callToEntity: string) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.callToEntity = callToEntity;\n    onChange(query);\n    onRunQuery();\n  };\n\n  debouncedRunQuery = _.debounce(this.props.onRunQuery, 500);\n\n  onGroupByTagSecondLevelKeyChange = (eventItem: ChangeEvent<HTMLInputElement>) => {\n    const { query, onChange } = this.props;\n    query.groupbyTagSecondLevelKey = eventItem.currentTarget.value;\n    onChange(query);\n\n    // onRunQuery with 500ms delay after last debounce\n    this.debouncedRunQuery();\n  };\n\n  render() {\n    const { query, groups } = this.props;\n\n    return (\n      <div className={'gf-form'}>\n        <FormWrapper stretch={true}>\n          <InlineFormLabel className={'query-keyword'} width={14} tooltip={'Select your application.'}>\n            Application\n          </InlineFormLabel>\n          <Entity value={query.applicationCallToEntity} onChange={this.onApplicationCallToEntityChange} />\n          <Select\n            menuPlacement={'bottom'}\n            width={0}\n            isSearchable={true}\n            value={query.entity}\n            options={this.state.applications}\n            onChange={this.onApplicationChange}\n          />\n        </FormWrapper>\n\n        <FormWrapper stretch={true}>\n          <InlineFormLabel className={'query-keyword'} width={7} tooltip={'Group by tag.'}>\n            Group by\n          </InlineFormLabel>\n          <Entity value={query.callToEntity} onChange={this.onCallToEntityChange} />\n          <Select\n            menuPlacement={'bottom'}\n            width={0}\n            isSearchable={true}\n            options={groups}\n            value={query.group}\n            onChange={this.onGroupChange}\n          />\n        </FormWrapper>\n\n        <div style={!query.showGroupBySecondLevel ? { display: 'none' } : {}}>\n          <Input\n            type={'text'}\n            value={query.groupbyTagSecondLevelKey}\n            onChange={this.onGroupByTagSecondLevelKeyChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import { Tooltip, useTheme } from '@grafana/ui';\nimport React, { useState } from 'react';\n\nimport './ApplicationBoundaryScope.css';\n\nconst INBOUND = 'INBOUND';\nconst ALL = 'ALL';\n\nconst dropdown = {\n  position: 'relative',\n  background: 'transparent',\n  width: '32px',\n  height: '32px',\n  marginRight: '4px',\n} as React.CSSProperties;\n\nconst iconSize = 30;\n\nconst inboundIcon = (\n  <svg className={'iconStyle'} height={iconSize} width={iconSize}>\n    <path\n      transform=\"translate(3, 5)\"\n      fill=\"#33a2e5\"\n      d=\"M12.7891666,14.6051302 L12.7751756,19.8293818 L11.4691127,19.8328795 L11.4776628,16.6402814 L6.96695389,21.1509902 L6.2433066,20.427343 L10.7540155,15.9166341 L7.56141732,15.9251842 L7.56491507,14.6191213 L12.7891666,14.6051302 Z M15.754133,9.38135895 C17.1795716,9.38135895 18.3857119,10.5874993 18.3857119,12.0129379 C18.3857119,13.4383765 17.1795716,14.6445168 15.754133,14.6445168 C14.3286944,14.6445168 13.122554,13.4383765 13.122554,12.0129379 C13.122554,10.5874993 14.3286944,9.38135895 15.754133,9.38135895 Z M6.96695389,3.2433066 L11.4776628,7.75401547 L11.4691127,4.56141732 L12.7751756,4.56491507 L12.7891666,9.7891666 L7.56491507,9.77517557 L7.56141732,8.46911269 L10.7540155,8.47766276 L6.2433066,3.96695389 L6.96695389,3.2433066 Z\"\n    />\n  </svg>\n);\n\nconst allIcon = (\n  <svg className={'iconStyle'} height={iconSize} width={iconSize}>\n    <path\n      transform=\"translate(3, 5)\"\n      fill=\"#33a2e5\"\n      d=\"M7.54586,15 L7.53186897,20.2242515 L6.22580608,20.2277493 L6.23435616,17.0351511 L1.72364729,21.54586 L1,20.8222127 L5.51070887,16.3115038 L2.31811071,16.3200539 L2.32160847,15.013991 L7.54586,15 Z M14.1975552,7.94441147 L17.901552,11.628622 L14.1975552,15.3128325 L13.271556,14.3917799 L15.5351096,12.1403179 L12.4724561,12.1407167 C12.2827518,13.474447 11.1361413,14.5 9.75,14.5 C8.23121694,14.5 7,13.2687831 7,11.75 C7,10.2312169 8.23121694,9 9.75,9 C11.0508538,9 12.1407461,9.90323356 12.4267385,11.1167623 L15.5351096,11.1169261 L13.271556,8.8654641 L14.1975552,7.94441147 Z M20.75,9 C22.2687831,9 23.5,10.2312169 23.5,11.75 C23.5,13.2687831 22.2687831,14.5 20.75,14.5 C19.2312169,14.5 18,13.2687831 18,11.75 C18,10.2312169 19.2312169,9 20.75,9 Z M1.72364729,2 L6.23435616,6.51070887 L6.22580608,3.31811071 L7.53186897,3.32160847 L7.54586,8.54586 L2.32160847,8.53186897 L2.31811071,7.22580608 L5.51070887,7.23435616 L1,2.72364729 L1.72364729,2 Z\"\n    />\n  </svg>\n);\n\n/**\n * Props have to be:\n *   value: string\n *   onChange: function that accepts a string as a parameter and returns void\n *   disabled: boolean\n */\nexport default function ApplicationBoundaryScope(props: any) {\n  const theme = useTheme();\n\n  const opacity = props.disabled ? 0.5 : 1;\n\n  const dropdown__list__item = {\n    background: theme.colors.bg2,\n    cursor: 'pointer',\n    listStyle: 'none',\n    borderRadius: '3px',\n    height: '32px',\n    opacity: opacity,\n  } as React.CSSProperties;\n\n  const [active, setActive] = useState(false);\n\n  function toggleDropdown() {\n    if (!props.disabled) {\n      setActive(!active);\n    }\n  }\n\n  function handleClick(entity: string) {\n    props.onChange(entity);\n    setActive(false);\n  }\n\n  return (\n    <div style={dropdown}>\n      <div\n        onClick={() => toggleDropdown()}\n        onBlur={() => setActive(false)}\n        style={dropdown__list__item}\n        contentEditable\n      >\n        <Tooltip content={props.value ? props.value : ALL} theme={'info'} placement={'top'}>\n          {props.value === INBOUND ? inboundIcon : allIcon}\n        </Tooltip>\n      </div>\n\n      <ul className={active ? 'dropdown-list-active' : 'dropdown-list'}>\n        <li onClick={() => handleClick(INBOUND)} key={INBOUND} style={dropdown__list__item}>\n          <div className={'iconTextContainer'}>\n            {inboundIcon} <span className={'iconTextStyle'}>{INBOUND}</span>\n          </div>\n        </li>\n        <li onClick={() => handleClick(ALL)} key={ALL} style={dropdown__list__item}>\n          <div className={'iconTextContainer'}>\n            {allIcon} <span className={'iconTextStyle'}>{ALL}</span>\n          </div>\n        </li>\n      </ul>\n    </div>\n  );\n}\n","import React, { ChangeEvent } from 'react';\n\nimport { ALL_APPLICATIONS, ALL_ENDPOINTS, ALL_SERVICES } from '../../GlobalVariables';\nimport ApplicationBoundaryScope from './ApplicationBoundaryScope';\nimport { InlineFormLabel, Input, Select } from '@grafana/ui';\nimport { DataSource } from '../../datasources/DataSource';\nimport { InstanaQuery } from '../../types/instana_query';\nimport { SelectableValue } from '@grafana/data';\nimport _ from 'lodash';\n\ninterface ApplicationServiceEndpointMetricsState {\n  applications: SelectableValue[];\n  services: SelectableValue[];\n  endpoints: SelectableValue[];\n  value: SelectableValue;\n}\n\ninterface Props {\n  query: InstanaQuery;\n\n  onRunQuery(): void;\n\n  onChange(value: InstanaQuery): void;\n\n  updateMetrics(metrics: SelectableValue[]): void;\n\n  datasource: DataSource;\n}\n\nlet isUnmounting = false;\n\nexport class ApplicationServiceEndpointMetrics extends React.Component<Props, ApplicationServiceEndpointMetricsState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      applications: [],\n      services: [],\n      endpoints: [],\n      value: {\n        value: 2,\n        imgUrl: '../../resources/dest.png',\n      },\n    };\n  }\n\n  componentDidMount() {\n    isUnmounting = false;\n    this.loadApplications();\n    this.loadServices();\n    this.loadEndpoints();\n\n    const { datasource } = this.props;\n    this.props.updateMetrics(datasource.dataSourceApplication.getApplicationMetricsCatalog());\n  }\n\n  componentWillUnmount() {\n    isUnmounting = true;\n  }\n\n  loadApplications() {\n    const { query, onChange, datasource } = this.props;\n    datasource.fetchApplications().then((applications) => {\n      if (!isUnmounting) {\n        this.setState({\n          applications: applications,\n        });\n\n        if (!_.find(this.state.applications, { key: null })) {\n          let apps = this.state.applications;\n          apps.unshift({ key: null, label: ALL_APPLICATIONS });\n          this.setState({\n            applications: apps,\n          });\n        }\n\n        // replace removed application\n        if (\n          query.entity &&\n          query.entity.key &&\n          !_.find(this.state.applications, (app) => app.key === query.entity.key)\n        ) {\n          query.entity = this.state.applications[0];\n        } else if ((!query.entity || !query.entity.key) && applications) {\n          query.entity = this.state.applications[0];\n        }\n\n        onChange(query);\n      }\n    });\n  }\n\n  loadServices() {\n    const { query, onChange, datasource } = this.props;\n    datasource.fetchServices(query).then((services) => {\n      if (!isUnmounting) {\n        this.setState({\n          services: services,\n        });\n\n        if (!_.find(this.state.services, { key: null })) {\n          let s = this.state.services;\n          s.unshift({ key: null, label: ALL_SERVICES });\n          this.setState({\n            services: s,\n          });\n        }\n\n        if (query.service && query.service.key) {\n          if (!_.find(this.state.services, (app) => app.key === query.service.key)) {\n            query.service = this.state.services[0];\n          }\n        } else {\n          query.service = this.state.services[0];\n        }\n\n        onChange(query);\n      }\n    });\n  }\n\n  loadEndpoints() {\n    const { query, onChange, datasource } = this.props;\n    datasource.fetchEndpoints(query).then((endpoints) => {\n      if (!isUnmounting) {\n        this.setState({\n          endpoints: endpoints,\n        });\n\n        if (!_.find(this.state.endpoints, { key: null })) {\n          let e = this.state.endpoints;\n          e.unshift({ key: null, label: ALL_ENDPOINTS });\n          this.setState({\n            endpoints: e,\n          });\n        }\n\n        if (query.endpoint && query.endpoint.key) {\n          if (!_.find(this.state.endpoints, (app) => app.key === query.endpoint.key)) {\n            query.endpoint = { key: null, label: ALL_ENDPOINTS };\n          }\n        } else {\n          query.endpoint = { key: null, label: ALL_ENDPOINTS };\n        }\n\n        onChange(query);\n      }\n    });\n  }\n\n  onApplicationChange = (application: SelectableValue) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.entity = application;\n    if (application.boundaryScope !== '') {\n      //set the default boundary scope that is configured for this application\n      query.applicationBoundaryScope = application.boundaryScope;\n    } else {\n      if (query.applicationBoundaryScope !== 'ALL' && query.applicationBoundaryScope !== 'INBOUND') {\n        //if no default is set, set it to INBOUND\n        query.applicationBoundaryScope = 'INBOUND';\n      }\n    }\n\n    onChange(query);\n    this.loadServices();\n    this.loadEndpoints();\n    onRunQuery();\n  };\n\n  onServiceChange = (service: SelectableValue) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.service = service;\n    onChange(query);\n    this.loadEndpoints();\n    onRunQuery();\n  };\n\n  onEndpointChange = (endpoint: SelectableValue) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.endpoint = endpoint;\n    onChange(query);\n    onRunQuery();\n  };\n\n  debouncedRunQuery = _.debounce(this.props.onRunQuery, 500);\n\n  onGroupByTagSecondLevelKeyChange = (eventItem: ChangeEvent<HTMLInputElement>) => {\n    const { query, onChange } = this.props;\n    query.groupbyTagSecondLevelKey = eventItem.currentTarget.value;\n    onChange(query);\n\n    // onRunQuery with 500ms delay after last debounce\n    this.debouncedRunQuery();\n  };\n\n  onApplicationBoundaryScopeChange = (scope: string) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.applicationBoundaryScope = scope;\n    onChange(query);\n    this.loadServices();\n    this.loadEndpoints();\n    onRunQuery();\n  };\n\n  render() {\n    const { query } = this.props;\n\n    return (\n      <div className={'gf-form'}>\n        <InlineFormLabel className={'query-keyword'} width={14} tooltip={'Select your application.'}>\n          Application\n        </InlineFormLabel>\n        <ApplicationBoundaryScope\n          value={query.applicationBoundaryScope}\n          disabled={!query.entity?.key}\n          onChange={this.onApplicationBoundaryScopeChange}\n        />\n        <Select\n          menuPlacement={'bottom'}\n          width={0}\n          isSearchable={true}\n          value={query.entity}\n          options={this.state.applications}\n          onChange={this.onApplicationChange}\n        />\n\n        <InlineFormLabel className={'query-keyword'} width={6} tooltip={'Select your service.'}>\n          Service\n        </InlineFormLabel>\n        <Select\n          menuPlacement={'bottom'}\n          width={0}\n          isSearchable={true}\n          value={query.service}\n          options={this.state.services}\n          onChange={this.onServiceChange}\n        />\n\n        <InlineFormLabel className={'query-keyword'} width={6} tooltip={'Select your endpoint.'}>\n          Endpoint\n        </InlineFormLabel>\n        <Select\n          menuPlacement={'bottom'}\n          width={0}\n          isSearchable={true}\n          value={query.endpoint}\n          options={this.state.endpoints}\n          onChange={this.onEndpointChange}\n        />\n\n        <div style={!query.showGroupBySecondLevel ? { display: 'none' } : {}}>\n          <Input value={query.groupbyTagSecondLevelKey} onChange={this.onGroupByTagSecondLevelKeyChange} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nimport { InlineFormLabel, TextArea, PopoverContent } from '@grafana/ui';\nimport FormWrapper from './FormWrapper';\n\ninterface State {}\n\ninterface Props {\n  label: string;\n  value: string;\n  invalid?: boolean;\n  disabled?: boolean;\n  placeholder?: string;\n  queryKeyword?: boolean;\n  labelWidth?: number | 14;\n  inputWidth?: number | 30;\n  tooltip?: PopoverContent;\n\n  onChange(event?: any): any;\n}\n\n/**\n * Default input text area including label. Input text area is grafana/ui <TextArea />.\n */\nexport default class FormTextArea extends React.Component<Props, State> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  render() {\n    const { label, tooltip, queryKeyword, disabled, labelWidth = 14, inputWidth = 30, ...remainingProps } = this.props;\n\n    return (\n      <FormWrapper disabled={disabled} stretch={!inputWidth}>\n        <InlineFormLabel className={queryKeyword ? 'query-keyword' : ''} width={labelWidth} tooltip={tooltip}>\n          {label}\n        </InlineFormLabel>\n        <TextArea rows={4} width={inputWidth} disabled={disabled} {...remainingProps} />\n      </FormWrapper>\n    );\n  }\n}\n","import React, { ChangeEvent } from 'react';\n\nimport FormTextArea from 'components/FormField/FormTextArea';\nimport { DataSource } from '../../datasources/DataSource';\nimport { InstanaQuery } from '../../types/instana_query';\nimport { SelectableValue } from '@grafana/data';\nimport _ from 'lodash';\nimport '../plugin.css';\n\ninterface State {\n  queryTypes: SelectableValue[];\n}\n\ninterface Props {\n  query: InstanaQuery;\n  datasource: DataSource;\n  queryTypes: SelectableValue[];\n  onRunQuery(): void;\n  onChange(value: InstanaQuery): void;\n  updateMetrics(metrics: SelectableValue[]): void;\n  updateQueryTypes(types: SelectableValue[]): void;\n}\n\nexport class Explore extends React.Component<Props, State> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  onFilterChange = (eventItem: ChangeEvent<HTMLInputElement>) => {\n    const { query, onChange } = this.props;\n    query.tagFilterExpression = eventItem.currentTarget.value;\n    onChange(query);\n\n    // onRunQuery with 500ms delay after last debounce\n    this.debouncedRunQuery();\n  };\n\n  isValidJson = (tagFilterExpression: string): boolean => {\n    if (tagFilterExpression) {\n      try {\n        JSON.parse(tagFilterExpression);\n        return true;\n      } catch (error) {\n        return false;\n      }\n    }\n\n    // no need to invalidate an empty input field\n    return true;\n  };\n\n  debouncedRunQuery = _.debounce(this.props.onRunQuery, 500);\n\n  render() {\n    const { query } = this.props;\n\n    return (\n      <div>\n        <div className={'gf-form'}>\n          <FormTextArea\n            queryKeyword\n            inputWidth={0}\n            label={'Filter'}\n            tooltip={\n              'This is currently a beta feature and only available for selected customers. If you are interestedin this technology, please submit a request via our support system at https://support.instana.com/.'\n            }\n            value={query.tagFilterExpression}\n            invalid={!this.isValidJson(query.tagFilterExpression)}\n            onChange={this.onFilterChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","export default [\n  // STRING\n  { key: 'EQUALS', label: 'equals', type: 'STRING' },\n  { key: 'NOT_EQUAL', label: 'does not equal', type: 'STRING' },\n  { key: 'CONTAINS', label: 'contains', type: 'STRING' },\n  { key: 'NOT_CONTAIN', label: 'does not contain', type: 'STRING' },\n  { key: 'NOT_EMPTY', label: 'is present', type: 'STRING' },\n  { key: 'IS_EMPTY', label: 'is not present', type: 'STRING' },\n  { key: 'STARTS_WITH', label: 'starts with', type: 'STRING' },\n  { key: 'ENDS_WITH', label: 'ends with', type: 'STRING' },\n  { key: 'NOT_STARTS_WITH', label: 'does not start with', type: 'STRING' },\n  { key: 'NOT_ENDS_WITH', label: 'does not end with', type: 'STRING' },\n  // NUMBER\n  { key: 'EQUALS', label: '=', type: 'NUMBER' },\n  { key: 'NOT_EQUAL', label: '!=', type: 'NUMBER' },\n  { key: 'LESS_THAN', label: '<', type: 'NUMBER' },\n  { key: 'GREATER_THAN', label: '>', type: 'NUMBER' },\n  { key: 'IS_EMPTY', label: 'is empty', type: 'NUMBER' },\n  { key: 'NOT_EMPTY', label: 'is not empty', type: 'NUMBER' },\n  { key: 'LESS_OR_EQUAL_THAN', label: 'less or equal than', type: 'NUMBER' },\n  { key: 'GREATER_OR_EQUAL_THAN', label: 'greater or equal than', type: 'NUMBER' },\n  // BOOLEAN\n  { key: 'EQUALS', label: 'is', type: 'BOOLEAN' },\n  // KEY_VALUE_PAIR\n  { key: 'EQUALS', label: 'equals', type: 'KEY_VALUE_PAIR' },\n  { key: 'NOT_EQUAL', label: 'does not equal', type: 'KEY_VALUE_PAIR' },\n  { key: 'CONTAINS', label: 'contains', type: 'KEY_VALUE_PAIR' },\n  { key: 'NOT_CONTAIN', label: 'does not contain', type: 'KEY_VALUE_PAIR' },\n  { key: 'NOT_EMPTY', label: 'is present', type: 'KEY_VALUE_PAIR' },\n  { key: 'IS_EMPTY', label: 'is not present', type: 'KEY_VALUE_PAIR' },\n  { key: 'STARTS_WITH', label: 'starts with', type: 'KEY_VALUE_PAIR' },\n  { key: 'ENDS_WITH', label: 'ends with', type: 'KEY_VALUE_PAIR' },\n  { key: 'IS_BLANK', label: 'is blank', type: 'KEY_VALUE_PAIR' },\n  { key: 'NOT_BLANK', label: 'is not blank', type: 'KEY_VALUE_PAIR' },\n  // STRING_SET\n  { key: 'EQUALS', label: 'equals', type: 'STRING_SET' },\n  { key: 'NOT_EQUAL', label: 'does not equal', type: 'STRING_SET' },\n  { key: 'CONTAINS', label: 'contains', type: 'STRING_SET' },\n  { key: 'NOT_CONTAIN', label: 'does not contain', type: 'STRING_SET' },\n  { key: 'NOT_EMPTY', label: 'is present', type: 'STRING_SET' },\n  { key: 'IS_EMPTY', label: 'is not present', type: 'STRING_SET' },\n];\n","import React, { FormEvent } from 'react';\n\nimport { ANALYZE_APPLICATION_METRICS, PLEASE_SPECIFY } from '../../GlobalVariables';\nimport { Button, InlineFormLabel, Input, Select } from '@grafana/ui';\nimport call_to_entities from '../../lists/apply_call_to_entities';\nimport { DataSource } from '../../datasources/DataSource';\nimport { InstanaQuery } from '../../types/instana_query';\nimport { SelectableValue } from '@grafana/data';\nimport TagFilter from '../../types/tag_filter';\nimport operators from '../../lists/operators';\nimport Entity from '../Entity/Entity';\nimport _ from 'lodash';\n\ninterface FilterState {}\n\ninterface Props {\n  query: InstanaQuery;\n  datasource: DataSource;\n  groups: SelectableValue[];\n\n  onRunQuery(): void;\n\n  onChange(value: InstanaQuery): void;\n}\n\nexport class Filters extends React.Component<Props, FilterState> {\n  OPERATOR_STRING = 'STRING';\n  OPERATOR_STRING_SET = 'STRING_SET';\n  OPERATOR_NUMBER = 'NUMBER';\n  OPERATOR_BOOLEAN = 'BOOLEAN';\n  OPERATOR_KEY_VALUE = 'KEY_VALUE_PAIR';\n\n  constructor(props: any) {\n    super(props);\n  }\n\n  addTagFilter = () => {\n    const { query, onChange } = this.props;\n    query.filters.push({\n      tag: query.group,\n      entity: call_to_entities[0],\n      operator: this.filterOperatorsOnType(query.group.type)[0],\n      booleanValue: false,\n      numberValue: 0,\n      stringValue: '',\n      isValid: false,\n    });\n\n    onChange(query);\n  };\n\n  removeTagFilter = (index: number) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.filters.splice(index, 1);\n\n    onChange(query);\n    onRunQuery();\n  };\n\n  filterOperatorsOnType(type: any): SelectableValue[] {\n    return _.filter(operators, (o) => o.type === type);\n  }\n\n  onGroupChange(group: SelectableValue, index: number) {\n    const { query } = this.props;\n    query.filters[index].tag = group;\n\n    let ops = this.filterOperatorsOnType(group.type);\n    if (!_.includes(ops, query.filters[index].operator)) {\n      query.filters[index].operator = ops[0];\n    }\n\n    this.validateChangeAndRun(index);\n  }\n\n  onCallToEntityChange = (callToEntity: string, index: number) => {\n    const { query } = this.props;\n    query.filters[index].entity = callToEntity;\n\n    this.validateChangeAndRun(index);\n  };\n\n  onOperatorChange = (operator: SelectableValue, index: number) => {\n    const { query } = this.props;\n    query.filters[index].operator = operator;\n\n    this.validateChangeAndRun(index);\n  };\n\n  canShowStringInput(filter: TagFilter) {\n    return (\n      filter.tag.type === this.OPERATOR_KEY_VALUE ||\n      (!filter.operator.key.includes('EMPTY') &&\n        (filter.tag.type === this.OPERATOR_STRING || filter.tag.type === this.OPERATOR_STRING_SET))\n    );\n  }\n\n  canShowNumberInput(filter: TagFilter) {\n    return filter.tag.type === this.OPERATOR_NUMBER && !filter.operator.key.includes('EMPTY');\n  }\n\n  debouncedRunQuery = _.debounce(this.props.onRunQuery, 500);\n\n  onTagFilterStringValueChange = (value: FormEvent<HTMLInputElement>, index: number) => {\n    const { query } = this.props;\n    query.filters[index].stringValue = value.currentTarget.value;\n\n    this.validateChangeAndRun(index, true);\n  };\n\n  onTagFilterNumberValueChange = (value: FormEvent<HTMLInputElement>, index: number) => {\n    const { query } = this.props;\n    query.filters[index].numberValue = value.currentTarget.valueAsNumber;\n\n    this.validateChangeAndRun(index, true);\n  };\n\n  onTagFilterBooleanValueChange(value: SelectableValue, index: number) {\n    const { query } = this.props;\n    query.filters[index].booleanValue = value.key;\n\n    this.validateChangeAndRun(index);\n  }\n\n  validateChangeAndRun(index: number, runDebounced = false) {\n    const { query, onChange, onRunQuery } = this.props;\n    if (query.filters[index].tag) {\n      if (\n        query.filters[index].operator.key.includes('EMPTY') &&\n        (this.OPERATOR_STRING === query.filters[index].tag.type ||\n          this.OPERATOR_STRING_SET === query.filters[index].tag.type)\n      ) {\n        query.filters[index].isValid = true;\n        // to avoid sending value with query.filters[index] operators that do not require a value (such as is-present/is-not-present)\n        query.filters[index].stringValue = '';\n        query.filters[index].numberValue = 0;\n        query.filters[index].booleanValue = true;\n      } else if (\n        (this.OPERATOR_STRING === query.filters[index].tag.type ||\n          this.OPERATOR_STRING_SET === query.filters[index].tag.type) &&\n        query.filters[index].stringValue\n      ) {\n        query.filters[index].isValid = true;\n      } else if (\n        query.filters[index].operator.key.includes('EMPTY') &&\n        this.OPERATOR_KEY_VALUE === query.filters[index].tag.type &&\n        query.filters[index].stringValue\n      ) {\n        query.filters[index].isValid = true;\n      } else if (\n        this.OPERATOR_KEY_VALUE === query.filters[index].tag.type &&\n        query.filters[index].stringValue &&\n        query.filters[index].stringValue.includes('=')\n      ) {\n        query.filters[index].isValid = true;\n      } else if (this.OPERATOR_NUMBER === query.filters[index].tag.type && !isNaN(query.filters[index].numberValue)) {\n        query.filters[index].isValid = true;\n      } else if (\n        this.OPERATOR_BOOLEAN === query.filters[index].tag.type &&\n        query.filters[index].booleanValue !== undefined\n      ) {\n        query.filters[index].isValid = true;\n      }\n    } else {\n      query.filters[index].isValid = false;\n    }\n\n    onChange(query);\n    if (runDebounced) {\n      // onRunQuery with 500ms delay after last debounce\n      this.debouncedRunQuery();\n    } else {\n      onRunQuery();\n    }\n  }\n\n  render() {\n    const { query, groups } = this.props;\n\n    let listFilter = query.filters?.map((singleFilter, index) => {\n      return (\n        <div key={'filter_' + index} className={'gf-form'}>\n          <InlineFormLabel className={'query-keyword'} width={14} tooltip={'Filter by tag.'}>\n            {index + 1}. filter\n          </InlineFormLabel>\n          {query.metricCategory.key === ANALYZE_APPLICATION_METRICS && (\n            <Entity\n              value={query.filters[index].entity}\n              onChange={(callToEntity: string) => this.onCallToEntityChange(callToEntity, index)}\n            />\n          )}\n          <Select\n            menuPlacement={'bottom'}\n            width={30}\n            isSearchable={true}\n            value={query.filters[index].tag}\n            options={groups}\n            onChange={(group) => this.onGroupChange(group, index)}\n          />\n          <Select\n            menuPlacement={'bottom'}\n            width={20}\n            isSearchable={true}\n            value={query.filters[index].operator}\n            options={this.filterOperatorsOnType(query.filters[index].tag.type)}\n            onChange={(operator) => this.onOperatorChange(operator, index)}\n          />\n\n          {this.canShowStringInput(query.filters[index]) && (\n            <Input\n              width={30}\n              value={query.filters[index].stringValue}\n              placeholder={query.filters[index].tag.type === 'KEY_VALUE_PAIR' ? 'key=value' : PLEASE_SPECIFY}\n              onChange={(event) => this.onTagFilterStringValueChange(event, index)}\n            />\n          )}\n\n          {this.canShowNumberInput(query.filters[index]) && (\n            <Input\n              type={'number'}\n              width={30}\n              value={query.filters[index].numberValue}\n              placeholder={PLEASE_SPECIFY}\n              onChange={(event) => this.onTagFilterNumberValueChange(event, index)}\n            />\n          )}\n\n          {query.filters[index].tag.type === 'BOOLEAN' && (\n            <Select\n              menuPlacement={'bottom'}\n              width={30}\n              isSearchable={true}\n              onChange={(e) => this.onTagFilterBooleanValueChange(e, index)}\n              value={{ key: '' + query.filters[index].booleanValue, label: '' + query.filters[index].booleanValue }}\n              options={[\n                { key: 'false', label: 'false' },\n                { key: 'true', label: 'true' },\n              ]}\n            />\n          )}\n\n          <Button variant={'secondary'} onClick={() => this.removeTagFilter(index)}>\n            -\n          </Button>\n        </div>\n      );\n    });\n\n    return (\n      <div>\n        {listFilter}\n\n        <div className={'gf-form'}>\n          <InlineFormLabel width={14} tooltip={'Add an additional tag filter.'}>\n            Add filter\n          </InlineFormLabel>\n          <Button variant={'secondary'} onClick={this.addTagFilter}>\n            +\n          </Button>\n          <div hidden={!query.showWarningCantShowAllResults}>\n            <InlineFormLabel width={12} tooltip={'Add Filter to narrow down the data.'}>\n              ⚠️ Can&apos;t show all results\n            </InlineFormLabel>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nimport { InlineFormLabel, Select, PopoverContent } from '@grafana/ui';\nimport FormWrapper from './FormWrapper';\nimport { SelectableValue } from '@grafana/data';\n\ninterface State {}\n\ninterface Props {\n  label: string;\n  value: SelectableValue;\n  options: any;\n  queryKeyword?: boolean;\n  disabled?: boolean;\n  defaultValue?: SelectableValue;\n  noOptionsMessage?: string;\n  searchable?: boolean | true;\n  labelWidth?: number | 14;\n  inputWidth?: number | 30;\n  placeholder?: string | '-';\n  tooltip?: PopoverContent;\n\n  onChange(event?: any): any;\n}\n\n/**\n * Default select field including label. Select element is grafana/ui <Select />.\n */\nexport default class FormSelect extends React.Component<Props, State> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  render() {\n    const {\n      label,\n      tooltip,\n      searchable = true,\n      disabled,\n      queryKeyword,\n      placeholder = '-',\n      labelWidth = 14,\n      inputWidth = 30,\n      ...remainingProps\n    } = this.props;\n\n    return (\n      <FormWrapper disabled={disabled} stretch={!inputWidth}>\n        <InlineFormLabel className={queryKeyword ? 'query-keyword' : ''} width={labelWidth} tooltip={tooltip}>\n          {label}\n        </InlineFormLabel>\n        <Select\n          menuPlacement={'bottom'}\n          disabled={disabled}\n          width={inputWidth}\n          isSearchable={searchable}\n          placeholder={placeholder}\n          {...remainingProps}\n        />\n      </FormWrapper>\n    );\n  }\n}\n","import React, { ChangeEvent } from 'react';\n\nimport { DataSource } from '../../datasources/DataSource';\nimport { InstanaQuery } from '../../types/instana_query';\nimport { PLEASE_SPECIFY } from '../../GlobalVariables';\nimport FormSelect from '../FormField/FormSelect';\nimport { SelectableValue } from '@grafana/data';\nimport FormInput from '../FormField/FormInput';\nimport _ from 'lodash';\n\ninterface QueryTypeState {}\n\ninterface Props {\n  query: InstanaQuery;\n  datasource: DataSource;\n  queryTypes: SelectableValue[];\n  onRunQuery(): void;\n  loadEntityTypes(filterResult?: boolean): void;\n  onChange(value: InstanaQuery): void;\n  updateMetrics(metrics: SelectableValue[]): void;\n  updateQueryTypes(types: SelectableValue[]): void;\n}\n\nexport class QueryType extends React.Component<Props, QueryTypeState> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  componentDidMount() {\n    const { query, loadEntityTypes } = this.props;\n    if (query.entityQuery) {\n      loadEntityTypes();\n    }\n  }\n\n  onQueryChange = (eventItem: ChangeEvent<HTMLInputElement>) => {\n    const { query, onChange, updateQueryTypes } = this.props;\n    if (eventItem.currentTarget && eventItem.currentTarget.value) {\n      query.entityQuery = eventItem.currentTarget.value;\n    } else {\n      updateQueryTypes([]);\n      query.entityQuery = '';\n      query.entityType = { key: null, label: '-' };\n    }\n\n    onChange(query);\n\n    // loadEntityTypes with 500ms delay after last debounce\n    this.debouncedEntityTypes();\n  };\n\n  onTypeChange = (eventItem: SelectableValue) => {\n    const { query, datasource, onChange } = this.props;\n    query.entityType = eventItem;\n    onChange(query);\n\n    datasource.dataSourceInfrastructure\n      .getMetricsCatalog(query.entityType, query.metricCategory.key)\n      .then((results) => {\n        this.props.updateMetrics(results);\n      });\n  };\n\n  debouncedEntityTypes = _.debounce(this.props.loadEntityTypes, 500);\n\n  render() {\n    const { query, queryTypes } = this.props;\n\n    return (\n      <div className={'gf-form'}>\n        <FormInput\n          queryKeyword\n          inputWidth={0}\n          label={'Query'}\n          tooltip={\n            <div>\n              Specify a query for the entities you wish to plot. Use the dynamic focus syntax:\n              <a href=\"https://docs.instana.io/core_concepts/dynamic_focus/#syntax\">\n                https://docs.instana.io/core_concepts/dynamic_focus/#syntax\n              </a>\n            </div>\n          }\n          value={query.entityQuery}\n          placeholder={PLEASE_SPECIFY}\n          onChange={this.onQueryChange}\n        />\n\n        <FormSelect\n          queryKeyword\n          labelWidth={6}\n          label={'Type'}\n          tooltip={'Select an entity type for a list of available metrics.'}\n          noOptionsMessage={'No types found with query'}\n          value={query.entityType}\n          options={queryTypes}\n          onChange={this.onTypeChange}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nimport { DataSource } from '../../datasources/DataSource';\nimport { InstanaQuery } from '../../types/instana_query';\nimport { SelectableValue } from '@grafana/data';\nimport { QueryType } from './QueryType';\n\ninterface InfrastructureBuiltInState {}\n\ninterface Props {\n  query: InstanaQuery;\n  datasource: DataSource;\n  queryTypes: SelectableValue[];\n  onRunQuery(): void;\n  loadEntityTypes(filterResult?: boolean): void;\n  onChange(value: InstanaQuery): void;\n  updateMetrics(metrics: SelectableValue[]): void;\n  updateQueryTypes(types: SelectableValue[]): void;\n}\n\nlet isUnmounting = false;\n\nexport class Infrastructure extends React.Component<Props, InfrastructureBuiltInState> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  componentDidMount() {\n    const { query, onChange, datasource } = this.props;\n    isUnmounting = false;\n\n    if (query.entityQuery && query.entityType && query.entityType.key) {\n      datasource.dataSourceInfrastructure\n        .getMetricsCatalog(query.entityType, query.metricCategory.key)\n        .then((results) => {\n          if (!isUnmounting) {\n            this.props.updateMetrics(results);\n          }\n        });\n    } else {\n      query.metric = {\n        key: null,\n        label: '-',\n      };\n    }\n\n    onChange(query);\n  }\n\n  componentWillUnmount() {\n    isUnmounting = true;\n  }\n\n  render() {\n    const {\n      query,\n      onRunQuery,\n      onChange,\n      updateMetrics,\n      loadEntityTypes,\n      datasource,\n      queryTypes,\n      updateQueryTypes,\n    } = this.props;\n\n    return (\n      <QueryType\n        query={query}\n        onChange={onChange}\n        queryTypes={queryTypes}\n        onRunQuery={onRunQuery}\n        datasource={datasource}\n        updateMetrics={updateMetrics}\n        loadEntityTypes={loadEntityTypes}\n        updateQueryTypes={updateQueryTypes}\n      />\n    );\n  }\n}\n","import React from 'react';\n\nimport { BUILT_IN_METRICS, CUSTOM_METRICS, ANALYZE_APPLICATION_METRICS } from '../../GlobalVariables';\nimport { DataSource } from '../../datasources/DataSource';\nimport { InstanaQuery } from '../../types/instana_query';\nimport max_metrics from '../../lists/max_metrics';\nimport FormSelect from '../FormField/FormSelect';\nimport FormSwitch from '../FormField/FormSwitch';\nimport { SelectableValue } from '@grafana/data';\nimport _ from 'lodash';\n\ninterface MetricState {\n  possibleTimeIntervals: SelectableValue[];\n  possibleAggregations: SelectableValue[];\n}\n\ninterface Props {\n  query: InstanaQuery;\n  datasource: DataSource;\n  availableMetrics: SelectableValue[];\n\n  updateMetrics(metrics: SelectableValue[]): void;\n\n  onRunQuery(): void;\n\n  onChange(value: InstanaQuery): void;\n}\n\nexport default class Metric extends React.Component<Props, MetricState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      possibleTimeIntervals: [],\n      possibleAggregations: [],\n    };\n  }\n\n  componentDidMount() {\n    const { query, datasource, onChange } = this.props;\n\n    if (\n      !query.timeInterval ||\n      !query.timeInterval.key ||\n      !datasource.availableTimeIntervals.find((i) => i.key === query.timeInterval.key)\n    ) {\n      query.timeInterval = datasource.getDefaultTimeInterval(query);\n    }\n\n    onChange(query);\n  }\n\n  onMetricChange = (metric: SelectableValue) => {\n    const { query, onRunQuery, onChange } = this.props;\n    query.metric = metric;\n\n    if (query.metric && query.metric.key && !_.includes(query.metric.aggregations, query.aggregation)) {\n      query.aggregation = query.metric.aggregations[0];\n    }\n\n    if (query.displayMaxMetricValue && !this.canShowMaxMetricValue()) {\n      query.displayMaxMetricValue = false;\n    }\n\n    query.allMetrics = [];\n    query.showAllMetrics = false;\n\n    onChange(query);\n    onRunQuery();\n  };\n\n  canShowMaxMetricValue() {\n    const { query } = this.props;\n    return (\n      query.entityType &&\n      query.entityType.key === 'host' &&\n      query.metric &&\n      _.find(max_metrics, (m) => m.key === query.metric.key)\n    );\n  }\n\n  onTimeIntervalChange = (timeInterval: SelectableValue) => {\n    const { query, onRunQuery, onChange } = this.props;\n    query.timeInterval = timeInterval;\n    onChange(query);\n    onRunQuery();\n  };\n\n  onAggregationChange = (aggregation: SelectableValue) => {\n    const { query, onRunQuery, onChange } = this.props;\n    query.aggregation = aggregation;\n    onChange(query);\n    onRunQuery();\n  };\n\n  onShowMaxValueChange = (event?: React.SyntheticEvent<HTMLInputElement>) => {\n    const { query, onChange, onRunQuery } = this.props;\n    if (event && event.currentTarget) {\n      query.displayMaxMetricValue = event.currentTarget.checked;\n      onChange(query);\n      onRunQuery();\n    }\n  };\n\n  onShowAllMetricsChange = (event?: React.SyntheticEvent<HTMLInputElement>) => {\n    const { query, onChange, onRunQuery } = this.props;\n    if (event && event.currentTarget) {\n      query.showAllMetrics = event.currentTarget.checked;\n      if (query.showAllMetrics) {\n        query.metric = { key: null, label: `Displaying ${this.props.availableMetrics.length} metrics` };\n        query.allMetrics = this.props.availableMetrics;\n      }\n      onChange(query);\n      onRunQuery();\n    }\n  };\n\n  canShowAggregation() {\n    const { query } = this.props;\n    return query.metricCategory.key >= ANALYZE_APPLICATION_METRICS;\n  }\n\n  canSelectAggregation() {\n    const { query } = this.props;\n    return query.metric && query.metric.aggregations && query.metric.aggregations.length > 1;\n  }\n\n  render() {\n    const { query, datasource } = this.props;\n\n    return (\n      <div className={'gf-form'}>\n        <FormSelect\n          queryKeyword\n          disabled={query.useFreeTextMetrics}\n          inputWidth={0}\n          label={'Metric'}\n          tooltip={'Select the metric you wish to plot.'}\n          value={query.metric}\n          noOptionsMessage={'No metrics found'}\n          options={this.props.availableMetrics}\n          onChange={this.onMetricChange}\n        />\n\n        {query.metricCategory.key === BUILT_IN_METRICS && (\n          <FormSwitch\n            queryKeyword\n            disabled={!this.canShowMaxMetricValue()}\n            labelWidth={9}\n            label={'Show max value'}\n            tooltip={\n              \"Displays the maximal value of current metric. Supported for 'Type=Host' with cpu.used, \" +\n              'memory.used and openFiles.used only.'\n            }\n            value={query.displayMaxMetricValue}\n            onChange={this.onShowMaxValueChange}\n          />\n        )}\n\n        {query.metricCategory.key === CUSTOM_METRICS && (\n          <FormSwitch\n            queryKeyword\n            disabled={!query.canShowAllMetrics}\n            labelWidth={9}\n            label={'Show all metrics'}\n            tooltip={\n              'You have the option to show all metrics in the graph once the amount of possible, selectable ' +\n              'metrics is between 1 and 5.'\n            }\n            value={query.showAllMetrics}\n            onChange={this.onShowAllMetricsChange}\n          />\n        )}\n\n        {this.canShowAggregation() && (\n          <FormSelect\n            queryKeyword\n            disabled={!this.canSelectAggregation()}\n            labelWidth={7}\n            inputWidth={12}\n            label={'Aggregation'}\n            tooltip={'Select a metric aggregation.'}\n            value={query.aggregation}\n            options={query.metric.aggregations}\n            onChange={this.onAggregationChange}\n          />\n        )}\n\n        <FormSelect\n          queryKeyword\n          disabled={datasource.availableTimeIntervals.length <= 1}\n          labelWidth={5}\n          inputWidth={12}\n          label={'Rollup'}\n          tooltip={'Select the rollup value.'}\n          value={query.timeInterval}\n          options={datasource.availableTimeIntervals}\n          onChange={this.onTimeIntervalChange}\n        />\n      </div>\n    );\n  }\n}\n","import React, { ChangeEvent } from 'react';\n\nimport { PLEASE_SPECIFY } from '../../../GlobalVariables';\nimport { DataSource } from '../../../datasources/DataSource';\nimport { InstanaQuery } from '../../../types/instana_query';\nimport { Button, InlineFormLabel } from '@grafana/ui';\nimport FormInput from '../../FormField/FormInput';\nimport { SelectableValue } from '@grafana/data';\n\ninterface MetricFilterState {\n  customFilters: string[];\n}\n\ninterface Props {\n  query: InstanaQuery;\n  datasource: DataSource;\n  availableMetrics: SelectableValue[];\n  onFilterChange(customFilters: string[]): void;\n  onRunQuery(): void;\n  onChange(value: InstanaQuery): void;\n}\n\nexport class MetricFilter extends React.Component<Props, MetricFilterState> {\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      customFilters: [],\n    };\n  }\n\n  componentDidMount() {\n    const { query } = this.props;\n    this.setState({ customFilters: query.customFilters });\n  }\n\n  onFilterChange = (eventItem: ChangeEvent<HTMLInputElement>, index: number) => {\n    const customFilters: string[] = this.state.customFilters;\n    customFilters[index] = eventItem.currentTarget.value;\n    this.setState({ customFilters: customFilters });\n\n    this.props.onFilterChange(customFilters);\n  };\n\n  addCustomFilter = () => {\n    let customFilters = this.state.customFilters;\n    customFilters.push('');\n    this.setState({ customFilters: customFilters });\n\n    const { query, onChange } = this.props;\n    query.customFilters = customFilters;\n    onChange(query);\n  };\n\n  removeCustomFilter = (index: number) => {\n    let customFilters: string[] = this.state.customFilters;\n    customFilters.splice(index, 1);\n    this.setState({ customFilters: customFilters });\n\n    this.props.onFilterChange(customFilters);\n  };\n\n  render() {\n    let filter = null;\n    let listFilter = this.state.customFilters.map((filters, index) => {\n      filter = (\n        <div className={'gf-form'}>\n          <FormInput\n            label={index + 1 + '. filter metric select'}\n            value={this.state.customFilters[index]}\n            placeholder={PLEASE_SPECIFY}\n            onChange={(event) => this.onFilterChange(event, index)}\n            tooltip={'Type to suggest metrics.'}\n          />\n          <Button variant={'secondary'} onClick={() => this.removeCustomFilter(index)}>\n            -\n          </Button>\n        </div>\n      );\n      return filter;\n    });\n\n    return (\n      <div>\n        {listFilter}\n\n        <div className={'gf-form'}>\n          <InlineFormLabel width={14} tooltip={'Add an additional metric select filter.'}>\n            Add filter metric select\n          </InlineFormLabel>\n          <Button variant={'secondary'} onClick={this.addCustomFilter}>\n            +\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n","export default [\n  {\n    key: 'SLI',\n    label: 'SLI',\n  },\n  {\n    key: 'Remaining Error Budget',\n    label: 'Remaining Error Budget',\n  },\n  {\n    key: 'Timeseries',\n    label: 'Timeseries',\n  },\n];\n","import React, { ChangeEvent } from 'react';\n\nimport { DataSource } from '../../datasources/DataSource';\nimport { InstanaQuery } from '../../types/instana_query';\nimport { SLO_INFORMATION } from '../../GlobalVariables';\nimport SloSpecifics from '../../lists/slo_specifics';\nimport FormSelect from '../FormField/FormSelect';\nimport { SelectableValue } from '@grafana/data';\nimport FormInput from '../FormField/FormInput';\nimport _ from 'lodash';\n\nconst MAX_VAL = 0.9999;\n\ninterface SloInformationState {\n  sloReports: SelectableValue[];\n  isValidSlo: boolean;\n}\n\ninterface Props {\n  query: InstanaQuery;\n\n  onRunQuery(): void;\n\n  onChange(value: InstanaQuery): void;\n\n  datasource: DataSource;\n}\n\nlet isUnmounting = false;\n\nexport class SloInformation extends React.Component<Props, SloInformationState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      sloReports: [],\n      isValidSlo: true,\n    };\n  }\n\n  componentDidMount() {\n    isUnmounting = false;\n    this.loadSloReports();\n    this.isValid(this.props.query.sloValue);\n  }\n\n  componentWillUnmount() {\n    isUnmounting = true;\n  }\n\n  debouncedRunQuery = _.debounce(this.props.onRunQuery, 500);\n\n  onSloChange = (slo: SelectableValue) => {\n    const { query, onRunQuery } = this.props;\n    query.sloReport = slo;\n    onRunQuery();\n  };\n\n  onSloValueChange = (sloValue: ChangeEvent<HTMLInputElement>) => {\n    const { query } = this.props;\n    query.sloValue = sloValue.currentTarget.value;\n\n    if (this.isValid(query.sloValue)) {\n      // onRunQuery with 500ms delay after last debounce\n      this.debouncedRunQuery();\n    }\n  };\n\n  onSloSpecificChange = (sloSpecific: SelectableValue) => {\n    const { query, onRunQuery } = this.props;\n    query.sloSpecific = sloSpecific;\n    onRunQuery();\n  };\n\n  isValid(val: string): boolean {\n    const valid = !val || (+val >= 0 && +val <= MAX_VAL);\n    this.setState({\n      isValidSlo: valid,\n    });\n    return valid;\n  }\n\n  shouldComponentUpdate(\n    nextProps: Readonly<Props>,\n    nextState: Readonly<SloInformationState>,\n    nextContext: any\n  ): boolean {\n    return nextProps.query.metricCategory.key === SLO_INFORMATION;\n  }\n\n  loadSloReports() {\n    const { query } = this.props;\n    this.props.datasource.getSloReports().then((sloReports) => {\n      if (!isUnmounting) {\n        this.setState({ sloReports: sloReports });\n\n        if (!query.sloReport && sloReports.length >= 1) {\n          query.sloReport = sloReports[0];\n        }\n      }\n    });\n  }\n\n  render() {\n    const { query } = this.props;\n\n    return (\n      <div className={'gf-form'}>\n        <FormSelect\n          queryKeyword\n          inputWidth={0}\n          label={'Configured SLI'}\n          tooltip={'SLI configuration used to compute error budget and SLI values.'}\n          noOptionsMessage={'No configured SLI found'}\n          value={query.sloReport}\n          options={this.state.sloReports}\n          onChange={this.onSloChange}\n        />\n\n        <FormInput\n          queryKeyword\n          labelWidth={7}\n          inputWidth={0}\n          label={'SLO'}\n          tooltip={'Type in your desired SLO threshold from 0 to ' + MAX_VAL}\n          value={query.sloValue}\n          invalid={!this.state.isValidSlo}\n          placeholder={'0.99'}\n          onChange={this.onSloValueChange}\n        />\n\n        <FormSelect\n          queryKeyword\n          labelWidth={7}\n          inputWidth={0}\n          label={'Value type'}\n          tooltip={\n            <div>\n              Select your specific SLO information:\n              <ul>\n                <li>&apos;SLI&apos; requires Gauge visualization</li>\n                <li>&apos;Remaining Error Budget&apos; requires Singlestat visualization</li>\n                <li>&apos;Timeseries&apos; drequires Bars draw mode on Graph visualization</li>\n              </ul>\n            </div>\n          }\n          value={query.sloSpecific}\n          options={SloSpecifics}\n          onChange={this.onSloSpecificChange}\n        />\n      </div>\n    );\n  }\n}\n","export default [\n  { key: 'pageLoad', label: 'Page Loads' },\n  { key: 'page_change', label: 'Page Transitions' },\n  { key: 'resourceLoad', label: 'Resources' },\n  { key: 'httpRequest', label: 'HTTP Requests' },\n  { key: 'error', label: 'Errors' },\n  { key: 'custom', label: 'Custom Events' },\n];\n","import React, { ChangeEvent } from 'react';\n\nimport { ALL_WEBSITES, ANALYZE_WEBSITE_METRICS } from '../../GlobalVariables';\nimport { DataSource } from '../../datasources/DataSource';\nimport { InstanaQuery } from '../../types/instana_query';\nimport beacon_types from '../../lists/beacon_types';\nimport FormSelect from '../FormField/FormSelect';\nimport { SelectableValue } from '@grafana/data';\nimport { Input } from '@grafana/ui';\nimport _ from 'lodash';\n\ninterface WebsiteMetricsState {\n  websites: SelectableValue[];\n}\n\ninterface Props {\n  query: InstanaQuery;\n  groups: SelectableValue[];\n  datasource: DataSource;\n\n  updateGroups(groups: SelectableValue[]): void;\n  onRunQuery(): void;\n  onChange(value: InstanaQuery): void;\n  updateMetrics(metrics: SelectableValue[]): void;\n  filterMetricsOnType(type: string): any;\n}\n\nlet isUnmounting = false;\n\nexport class WebsiteMetrics extends React.Component<Props, WebsiteMetricsState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      websites: [],\n    };\n  }\n\n  componentDidMount() {\n    const { query, datasource, onChange } = this.props;\n    isUnmounting = false;\n    datasource.fetchWebsites().then((websites) => {\n      if (!isUnmounting) {\n        if (!_.find(websites, { key: null })) {\n          websites.unshift({ key: null, label: ALL_WEBSITES });\n        }\n\n        this.setState({\n          websites: websites,\n        });\n\n        if ((!query.entity || !query.entity.key) && websites) {\n          query.entity = websites[0];\n        } else if (query.entity && !_.find(websites, ['key', query.entity.key])) {\n          query.entity = websites[0];\n        }\n\n        onChange(query);\n      }\n    });\n\n    datasource.dataSourceWebsite.getWebsiteTags().then((websiteTags: any) => {\n      if (!isUnmounting) {\n        this.props.updateGroups(_.sortBy(websiteTags, 'key'));\n\n        // select a meaningful default group\n        if (!query.group || !query.group.key) {\n          query.group = _.find(websiteTags, ['key', 'beacon.page.name']);\n          onChange(query);\n        }\n      }\n    });\n\n    if (!query.entityType || !query.entityType.key) {\n      query.entityType = beacon_types[0];\n      onChange(query);\n    }\n\n    datasource.dataSourceWebsite.getWebsiteMetricsCatalog().then((websiteMetrics: any) => {\n      if (!isUnmounting) {\n        this.props.updateMetrics(_.filter(websiteMetrics, (m) => m.beaconTypes.includes(query.entityType.key)));\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    isUnmounting = true;\n  }\n\n  onWebsiteChange = (website: SelectableValue) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.entity = website;\n    onChange(query);\n    onRunQuery();\n  };\n\n  onBeaconTypeChange = (type: SelectableValue) => {\n    const { query, onChange, filterMetricsOnType } = this.props;\n    query.entityType = type;\n    onChange(query);\n    filterMetricsOnType(query.entityType.key);\n  };\n\n  onGroupChange = (group: SelectableValue) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.group = group;\n\n    if (query.group && query.metricCategory.key === ANALYZE_WEBSITE_METRICS) {\n      query.showGroupBySecondLevel = query.group.type === 'KEY_VALUE_PAIR';\n    }\n    if (!query.showGroupBySecondLevel) {\n      query.groupbyTagSecondLevelKey = '';\n    }\n\n    onChange(query);\n    onRunQuery();\n  };\n\n  debouncedRunQuery = _.debounce(this.props.onRunQuery, 500);\n\n  onGroupByTagSecondLevelKeyChange = (eventItem: ChangeEvent<HTMLInputElement>) => {\n    const { query, onChange } = this.props;\n    query.groupbyTagSecondLevelKey = eventItem.currentTarget.value;\n    onChange(query);\n\n    // onRunQuery with 500ms delay after last debounce\n    this.debouncedRunQuery();\n  };\n\n  render() {\n    const { query, groups } = this.props;\n\n    return (\n      <div className={'gf-form'}>\n        <FormSelect\n          queryKeyword\n          inputWidth={0}\n          label={'Website'}\n          tooltip={'Select your website.'}\n          noOptionsMessage={'No websites found'}\n          value={query.entity}\n          options={this.state.websites}\n          onChange={this.onWebsiteChange}\n        />\n\n        <FormSelect\n          queryKeyword\n          labelWidth={6}\n          label={'Type'}\n          tooltip={'Select a beacon type.'}\n          value={query.entityType}\n          options={beacon_types}\n          onChange={this.onBeaconTypeChange}\n        />\n\n        <FormSelect\n          queryKeyword\n          labelWidth={6}\n          label={'Group by'}\n          tooltip={'Group by tag.'}\n          value={query.group}\n          options={groups}\n          onChange={this.onGroupChange}\n        />\n\n        <div style={!query.showGroupBySecondLevel ? { display: 'none' } : {}}>\n          <Input value={query.groupbyTagSecondLevelKey} onChange={this.onGroupByTagSecondLevelKeyChange} />\n        </div>\n      </div>\n    );\n  }\n}\n","import '../instana-grafana.css';\n\nimport {\n  ANALYZE_APPLICATION_METRICS,\n  ANALYZE_WEBSITE_METRICS,\n  APPLICATION_SERVICE_ENDPOINT_METRICS,\n  BUILT_IN_METRICS,\n  CUSTOM_METRICS,\n  INFRASTRUCTURE_EXPLORE,\n  SLO_INFORMATION,\n} from '../GlobalVariables';\nimport { QueryEditorProps, SelectableValue } from '@grafana/data';\nimport React, { PureComponent } from 'react';\n\nimport AdvancedSettings from './AdvancedSettings/AdvancedSettings';\nimport AggregationFunctions from '../lists/aggregation_function';\nimport { ApplicationCallsMetrics } from './Analyze/ApplicationCallsMetrics';\nimport { ApplicationServiceEndpointMetrics } from './ApplicationServiceEndpointMetrics/ApplicationServiceEndpointMetrics';\nimport { Badge } from '@grafana/ui';\nimport { DataSource } from '../datasources/DataSource';\nimport { Explore } from './Infrastructure/Explore';\nimport { Filters } from './Analyze/Filter';\nimport FormSelect from './FormField/FormSelect';\nimport { Infrastructure } from './Infrastructure/Infrastructure';\nimport { InstanaOptions } from '../types/instana_options';\nimport { InstanaQuery } from '../types/instana_query';\nimport Metric from './Metric/Metric';\nimport { MetricFilter } from './Infrastructure/Custom/MetricFilter';\nimport { SloInformation } from './SLOInformation/SloInformation';\nimport { WebsiteMetrics } from './Analyze/WebsiteMetrics';\nimport _ from 'lodash';\nimport metricCategories from '../lists/metric_categories';\nimport migrate from '../migration';\nimport { readTime } from '../util/time_util';\n\ntype Props = QueryEditorProps<DataSource, InstanaQuery, InstanaOptions>;\n\ninterface QueryState {\n  groups: SelectableValue[];\n  queryTypes: SelectableValue[];\n  allMetrics: SelectableValue[];\n  availableMetrics: SelectableValue[];\n  selectedWindowSize: number;\n}\n\nexport class QueryEditor extends PureComponent<Props, QueryState> {\n  query: InstanaQuery;\n  snapshots: any;\n  allowInfraExplore: boolean;\n\n  constructor(props: Props) {\n    super(props);\n    const defaultQuery: Partial<InstanaQuery> = {\n      metricCategory: metricCategories[0],\n      timeShiftIsValid: true,\n      customFilters: [],\n    };\n\n    this.query = Object.assign(defaultQuery, props.query);\n\n    migrate(this.query);\n\n    this.state = {\n      groups: [],\n      allMetrics: [],\n      queryTypes: [],\n      availableMetrics: [],\n      selectedWindowSize: props.range ? readTime(props.range).windowSize : 21600000,\n    };\n\n    this.filterMetricsOnType = this.filterMetricsOnType.bind(this);\n    this.loadEntityTypes = this.loadEntityTypes.bind(this);\n    this.allowInfraExplore = props.datasource.options.allowInfraExplore;\n\n    props.onChange(this.query);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>, prevState: Readonly<QueryState>, snapshot?: any) {\n    const { onChange, range, datasource } = this.props;\n    if (range && this.state.selectedWindowSize !== readTime(range).windowSize) {\n      this.setState({\n        ...this.state,\n        selectedWindowSize: readTime(range).windowSize,\n      });\n      datasource.setPossibleTimeIntervals(this.query);\n      if (!datasource.availableTimeIntervals.find((i) => i.key === this.query.timeInterval.key)) {\n        this.query.timeInterval = datasource.getDefaultTimeInterval(this.query);\n        onChange(this.query);\n        // no need to execute onRunQuery() here because the change of time frame triggers\n        // datasource.query() anyways and datasource will take care of correcting the timeInterval\n      }\n    }\n  }\n\n  onCategoryChange = (newCategory: SelectableValue) => {\n    if (this.query.metricCategory === newCategory) {\n      // nothing needs to be done\n    } else {\n      this.selectionReset();\n      this.query.metricCategory = newCategory;\n      this.query.timeInterval = this.props.datasource.getDefaultTimeInterval(this.query);\n\n      this.changeAndRun();\n    }\n  };\n\n  changeAndRun = () => {\n    this.props.onChange(this.query);\n    this.props.onRunQuery();\n  };\n\n  setMetricPlaceholder(nrOfTotalResults: number) {\n    if (this.query.metricCategory.key === CUSTOM_METRICS) {\n      this.query.metric = {\n        key: null,\n        label: 'Please select (' + nrOfTotalResults + '/' + this.state.allMetrics.length + ')',\n      };\n    } else {\n      this.query.metric = {\n        key: null,\n        label: 'Please select (' + nrOfTotalResults + ')',\n      };\n    }\n\n    this.props.onChange(this.query);\n  }\n\n  updateMetrics = (metrics: SelectableValue[]) => {\n    this.setState({\n      availableMetrics: _.sortBy(metrics, 'key'),\n      allMetrics: _.sortBy(metrics, 'key'),\n    });\n\n    if ((this.query.metric && this.query.metric.key) || this.query.showAllMetrics) {\n      const metric = _.find(metrics, (m) => m.key === this.query.metric.key);\n      metric ? (this.query.metric = metric) : (this.query.metric = { key: null });\n    }\n\n    if (this.query.metricCategory.key === CUSTOM_METRICS) {\n      this.onMetricsFilter(this.query.customFilters); // this contains setMetricPlaceholder\n    } else if (!this.query.metric || !this.query.metric.key) {\n      this.setMetricPlaceholder(metrics.length);\n    }\n\n    this.changeAndRun();\n  };\n\n  loadEntityTypes(filterResult = true) {\n    const { query, datasource, onRunQuery } = this.props;\n\n    if (query.entityQuery) {\n      datasource.fetchTypesForTarget(query).then((response: any) => {\n        this.snapshots = response.data;\n        this.filterForEntityType(true, filterResult);\n        onRunQuery();\n      });\n    } else {\n      this.setState({ queryTypes: [] });\n    }\n  }\n\n  filterForEntityType = (findMatchingEntityTypes = true, filterResults = true) => {\n    const { query, datasource, onChange } = this.props;\n    datasource.getEntityTypes().then((entityTypes: any) => {\n      let queryTypes = entityTypes;\n      if (filterResults && !query.useFreeTextMetrics) {\n        queryTypes = this.filterEntityTypes(entityTypes, findMatchingEntityTypes);\n      }\n\n      this.setState({ queryTypes: queryTypes });\n\n      if (!query.entityType || !query.entityType.key || !_.find(queryTypes, (m) => m.key === query.entityType.key)) {\n        query.entityType = { key: null, label: 'Please select (' + queryTypes.length + ')' };\n      }\n\n      onChange(query);\n    });\n  };\n\n  filterEntityTypes = (entityTypes: SelectableValue[], findMatchingEntityTypes: boolean) => {\n    if (findMatchingEntityTypes) {\n      return _.sortBy(\n        _.filter(entityTypes, (entityType) => this.findMatchingEntityTypes(entityType)),\n        'label'\n      );\n    }\n\n    return _.sortBy(entityTypes, 'label');\n  };\n\n  findMatchingEntityTypes = (entityType: SelectableValue) => {\n    const { query } = this.props;\n    // workaround as long the api does not support returning plugins with custom metrics only\n    if (\n      query.metricCategory.key === BUILT_IN_METRICS ||\n      entityType.key === 'statsd' ||\n      entityType.key === 'prometheus' ||\n      entityType.key === 'jvmRuntimePlatform' ||\n      entityType.key === 'dropwizardApplicationContainer'\n    ) {\n      return this.snapshots.find((type: any) => type === entityType.key) && entityType.label != null;\n    }\n\n    return false;\n  };\n\n  updateQueryTypes = (types: SelectableValue[]) => {\n    this.setState({\n      queryTypes: types,\n    });\n  };\n\n  updateGroups = (groups: SelectableValue[]) => {\n    this.setState({\n      groups: groups,\n    });\n  };\n\n  onMetricsFilter = (customFilters: string[]) => {\n    let newAvailableMetrics: SelectableValue[] = [];\n    if (!customFilters || customFilters.length === 0) {\n      newAvailableMetrics = this.state.allMetrics;\n    } else {\n      newAvailableMetrics = this.applyFilterToMetricList(customFilters);\n    }\n    this.query.canShowAllMetrics = this.isAbleToShowAllMetrics(newAvailableMetrics);\n    if (!this.query.canShowAllMetrics) {\n      this.query.showAllMetrics = false;\n    }\n    this.query.customFilters = customFilters;\n    if (!this.query.metric || !this.query.metric.key) {\n      this.setMetricPlaceholder(newAvailableMetrics.length);\n    }\n\n    this.setState((state) => ({ ...state, availableMetrics: newAvailableMetrics }));\n\n    this.props.onChange(this.query);\n    this.checkMetricAndRefresh();\n  };\n\n  applyFilterToMetricList(filters: string[]) {\n    let filteredMetrics: any = this.state.allMetrics;\n    _.forEach(filters, (filter) => {\n      if (filter !== '') {\n        filteredMetrics = _.sortBy(\n          _.filter(filteredMetrics, (metric) => metric.key.toLowerCase().includes(filter.toLowerCase())),\n          'key'\n        );\n      }\n    });\n\n    return filteredMetrics;\n  }\n\n  filterMetricsOnType(type: string) {\n    let filteredMetrics: SelectableValue[] = this.state.allMetrics.filter((metric) => {\n      return metric.beaconTypes.includes(type);\n    });\n\n    this.setState({\n      availableMetrics: filteredMetrics,\n    });\n\n    if (!this.query.metric || !this.query.metric.key || !this.query.metric.beaconTypes.includes(type)) {\n      this.setMetricPlaceholder(filteredMetrics.length);\n    }\n\n    this.changeAndRun();\n  }\n\n  isAbleToShowAllMetrics(metrics: SelectableValue[]) {\n    return this.query.metricCategory.key === CUSTOM_METRICS && metrics.length > 0 && metrics.length <= 5;\n  }\n\n  checkMetricAndRefresh() {\n    if (\n      this.query.metric &&\n      this.query.metric.key &&\n      !_.includes(\n        _.map(this.state.availableMetrics, (m) => m.key),\n        this.query.metric.key\n      )\n    ) {\n      this.resetMetricSelection();\n    }\n\n    this.changeAndRun();\n  }\n\n  selectionReset() {\n    const { query } = this.props;\n    if (query.metricCategory.key > CUSTOM_METRICS) {\n      query.entityQuery = '';\n    }\n\n    this.setState({\n      availableMetrics: [],\n      allMetrics: [],\n      groups: [],\n    });\n\n    this.resetEntityTypeSelection();\n    this.resetEntitySelection();\n    this.resetMetricSelection();\n  }\n\n  resetEntityTypeSelection() {\n    const { query } = this.props;\n    query.entityType = {\n      key: null,\n      label: '-',\n    };\n    query.customFilters = [];\n  }\n\n  resetEntitySelection() {\n    const { query } = this.props;\n    query.entity = {};\n    query.group = {};\n    query.showGroupBySecondLevel = false;\n    query.groupbyTagSecondLevelKey = '';\n    query.aggregateGraphs = false;\n    query.aggregationFunction = AggregationFunctions[0];\n    query.hideOriginalGraphs = false;\n    query.filters = [];\n    query.showWarningCantShowAllResults = false;\n    query.showAllMetrics = false;\n    query.canShowAllMetrics = false;\n    query.displayMaxMetricValue = false;\n    query.applicationCallToEntity = '';\n    query.callToEntity = '';\n    query.tagFilterExpression = '';\n    this.resetServices();\n    this.resetEndpoints();\n    this.resetSLO();\n  }\n\n  resetMetricSelection() {\n    const { query } = this.props;\n    query.metric = {};\n    query.timeShift = '';\n    query.timeShiftIsValid = true;\n    query.showWarningCantShowAllResults = false;\n    query.showAllMetrics = false;\n    query.labelFormat = '';\n    query.freeTextMetrics = '';\n    query.useFreeTextMetrics = false;\n  }\n\n  resetServices() {\n    this.props.query.service = {};\n  }\n\n  resetEndpoints() {\n    this.props.query.endpoint = {};\n  }\n\n  resetSLO() {\n    const { query } = this.props;\n    query.sloValue = '';\n    query.sloReport = {};\n  }\n\n  render() {\n    const { query, onCategoryChange } = this;\n    const categories = this.allowInfraExplore\n      ? metricCategories\n      : metricCategories.filter((category) => category.key !== INFRASTRUCTURE_EXPLORE);\n\n    return (\n      <div className={'gf-form-group'}>\n        <div className={'gf-form'}>\n          <FormSelect\n            queryKeyword\n            inputWidth={0}\n            label={'Category'}\n            tooltip={'Select a metric category.'}\n            value={query.metricCategory}\n            options={categories}\n            onChange={onCategoryChange}\n          />\n        </div>\n\n        {query.metricCategory.key === BUILT_IN_METRICS && (\n          <Infrastructure\n            query={query}\n            queryTypes={this.state.queryTypes}\n            datasource={this.props.datasource}\n            onRunQuery={this.props.onRunQuery}\n            onChange={this.props.onChange}\n            updateMetrics={this.updateMetrics}\n            loadEntityTypes={this.loadEntityTypes}\n            updateQueryTypes={this.updateQueryTypes}\n          />\n        )}\n\n        {query.metricCategory.key === CUSTOM_METRICS && (\n          <Infrastructure\n            query={query}\n            queryTypes={this.state.queryTypes}\n            datasource={this.props.datasource}\n            onRunQuery={this.props.onRunQuery}\n            onChange={this.props.onChange}\n            updateMetrics={this.updateMetrics}\n            loadEntityTypes={this.loadEntityTypes}\n            updateQueryTypes={this.updateQueryTypes}\n          />\n        )}\n\n        {query.metricCategory.key === INFRASTRUCTURE_EXPLORE && (\n          <Explore\n            query={query}\n            queryTypes={this.state.queryTypes}\n            datasource={this.props.datasource}\n            onRunQuery={this.props.onRunQuery}\n            onChange={this.props.onChange}\n            updateMetrics={this.updateMetrics}\n            updateQueryTypes={this.updateQueryTypes}\n          />\n        )}\n\n        {query.metricCategory.key === ANALYZE_APPLICATION_METRICS && (\n          <ApplicationCallsMetrics\n            query={query}\n            onRunQuery={this.props.onRunQuery}\n            onChange={this.props.onChange}\n            updateMetrics={this.updateMetrics}\n            groups={this.state.groups}\n            updateGroups={this.updateGroups}\n            datasource={this.props.datasource}\n          />\n        )}\n\n        {query.metricCategory.key === ANALYZE_WEBSITE_METRICS && (\n          <WebsiteMetrics\n            query={query}\n            onRunQuery={this.props.onRunQuery}\n            onChange={this.props.onChange}\n            updateMetrics={this.updateMetrics}\n            groups={this.state.groups}\n            updateGroups={this.updateGroups}\n            filterMetricsOnType={this.filterMetricsOnType}\n            datasource={this.props.datasource}\n          />\n        )}\n\n        {query.metricCategory.key === APPLICATION_SERVICE_ENDPOINT_METRICS && (\n          <ApplicationServiceEndpointMetrics\n            query={query}\n            onRunQuery={this.props.onRunQuery}\n            onChange={this.props.onChange}\n            updateMetrics={this.updateMetrics}\n            datasource={this.props.datasource}\n          />\n        )}\n\n        {query.metricCategory.key === SLO_INFORMATION && (\n          <SloInformation\n            query={query}\n            onRunQuery={this.props.onRunQuery}\n            onChange={this.props.onChange}\n            datasource={this.props.datasource}\n          />\n        )}\n\n        {query.metricCategory.key !== SLO_INFORMATION && query.metricCategory.key !== INFRASTRUCTURE_EXPLORE && (\n          <Metric\n            query={query}\n            onChange={this.props.onChange}\n            onRunQuery={this.props.onRunQuery}\n            updateMetrics={this.updateMetrics}\n            availableMetrics={this.state.availableMetrics}\n            datasource={this.props.datasource}\n          />\n        )}\n\n        {query.metricCategory.key === CUSTOM_METRICS && (\n          <MetricFilter\n            query={query}\n            onChange={this.props.onChange}\n            onRunQuery={this.props.onRunQuery}\n            onFilterChange={this.onMetricsFilter}\n            availableMetrics={this.state.availableMetrics}\n            datasource={this.props.datasource}\n          />\n        )}\n\n        {(query.metricCategory.key === ANALYZE_APPLICATION_METRICS ||\n          query.metricCategory.key === ANALYZE_WEBSITE_METRICS) && (\n          <Filters\n            query={query}\n            onChange={this.props.onChange}\n            onRunQuery={this.props.onRunQuery}\n            datasource={this.props.datasource}\n            groups={this.state.groups}\n          />\n        )}\n\n        <AdvancedSettings\n          query={query}\n          onRunQuery={this.props.onRunQuery}\n          onChange={this.props.onChange}\n          loadEntityTypes={this.loadEntityTypes}\n        />\n\n        <Badge text={'3.3.2'} color={'blue'} />\n      </div>\n    );\n  }\n}\n","import { InstanaOptions } from './types/instana_options';\nimport { DataSourcePlugin } from '@grafana/data';\nimport { DataSource } from './datasources/DataSource';\nimport { ConfigEditor } from './components/ConfigEditor';\nimport { QueryEditor } from './components/QueryEditor';\nimport { InstanaQuery } from './types/instana_query';\n\nexport const plugin = new DataSourcePlugin<DataSource, InstanaQuery, InstanaOptions>(DataSource)\n  .setConfigEditor(ConfigEditor)\n  .setQueryEditor(QueryEditor);\n"],"sourceRoot":""}