{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///external \"lodash\"","webpack:///external \"@grafana/ui\"","webpack:///external \"@grafana/data\"","webpack:///./components/plugin.css?fa54","webpack:///../node_modules/css-loader/dist/runtime/api.js","webpack:///../node_modules/style-loader/lib/addStyles.js","webpack:///external \"@grafana/runtime\"","webpack:///./components/plugin.css","webpack:///../node_modules/style-loader/lib/urls.js","webpack:///./instana-grafana.css?07a9","webpack:///./instana-grafana.css","webpack:///./components/ApplicationServiceEndpointMetrics/ApplicationBoundaryScope.css?61cc","webpack:///./components/ApplicationServiceEndpointMetrics/ApplicationBoundaryScope.css","webpack:///../node_modules/tslib/tslib.es6.js","webpack:///./util/request_handler.ts","webpack:///./util/target_util.ts","webpack:///./GlobalVariables.ts","webpack:///./util/time_util.ts","webpack:///./cache.ts","webpack:///./datasources/DataSource_Slo.ts","webpack:///./lists/metric_categories.ts","webpack:///./util/queryInterval_check.ts","webpack:///./lists/granularities.ts","webpack:///./lists/rollups.ts","webpack:///./util/rollup_granularity_util.ts","webpack:///./lists/max_metrics.ts","webpack:///./datasources/Datasource_Infrastructure.ts","webpack:///./util/delta_util.ts","webpack:///./util/instana_version.ts","webpack:///./util/aggregation_util.ts","webpack:///./util/analyze_util.ts","webpack:///./datasources/DataSource_Website.ts","webpack:///./lists/default_metric_catalog.ts","webpack:///./datasources/DataSource_Application.ts","webpack:///./datasources/DataSource_Service.ts","webpack:///./datasources/DataSource_Endpoint.ts","webpack:///./migration.ts","webpack:///./datasources/DataSource.ts","webpack:///./util/proxy_check.ts","webpack:///./components/ConfigEditor.tsx","webpack:///./components/FormField/FormWrapper.tsx","webpack:///./components/FormField/FormSwitch.tsx","webpack:///./components/Infrastructure/Custom/FreeTextMetrics.tsx","webpack:///./lists/aggregation_function.ts","webpack:///./components/AdvancedSettings/AggregateQuery.tsx","webpack:///./components/FormField/FormInput.tsx","webpack:///./components/AdvancedSettings/AdvancedSettings.tsx","webpack:///./lists/apply_call_to_entities.ts","webpack:///./components/Entity/Entity.tsx","webpack:///./components/Analyze/ApplicationCallsMetrics.tsx","webpack:///./components/ApplicationServiceEndpointMetrics/ApplicationBoundaryScope.tsx","webpack:///./components/ApplicationServiceEndpointMetrics/ApplicationServiceEndpointMetrics.tsx","webpack:///./components/FormField/FormTextArea.tsx","webpack:///./components/Infrastructure/Explore.tsx","webpack:///./lists/operators.ts","webpack:///./components/Analyze/Filter.tsx","webpack:///./components/FormField/FormSelect.tsx","webpack:///./components/Infrastructure/QueryType.tsx","webpack:///./components/Infrastructure/Infrastructure.tsx","webpack:///./components/Metric/Metric.tsx","webpack:///./components/Infrastructure/Custom/MetricFilter.tsx","webpack:///./lists/slo_specifics.ts","webpack:///./components/SLOInformation/SloInformation.tsx","webpack:///./lists/beacon_types.ts","webpack:///./components/Analyze/WebsiteMetrics.tsx","webpack:///./components/QueryEditor.tsx","webpack:///./module.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__3__","content","options","transform","undefined","locals","useSourceMap","list","toString","this","map","item","cssMapping","btoa","sourceMapping","sourceMap","base64","unescape","encodeURIComponent","JSON","stringify","data","concat","sourceURLs","sources","source","sourceRoot","join","cssWithMappingToString","mediaQuery","dedupe","alreadyImportedModules","length","id","_i","push","fn","memo","stylesInDom","isOldIE","window","document","all","atob","apply","arguments","getTarget","target","parent","querySelector","getElement","styleTarget","HTMLIFrameElement","contentDocument","head","e","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","domStyle","refs","j","parts","addStyle","listToStyles","newStyles","base","part","css","media","insertStyleElement","style","insertInto","Error","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","before","removeStyleElement","parentNode","removeChild","idx","indexOf","splice","createStyleElement","createElement","attrs","type","nonce","getNonce","addAttrs","el","keys","forEach","setAttribute","obj","update","remove","result","default","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","link","rel","createLinkElement","updateLink","href","applyToTag","newObj","DEBUG","newList","mayRemove","textStore","replaceText","index","replacement","filter","Boolean","styleSheet","cssText","cssNode","createTextNode","childNodes","autoFixUrls","convertToAbsoluteUrls","blob","oldSrc","__WEBPACK_EXTERNAL_MODULE__7__","___CSS_LOADER_API_IMPORT___","location","baseUrl","protocol","host","currentDir","pathname","replace","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","$1","test","extendStatics","b","setPrototypeOf","__proto__","Array","__extends","__","constructor","__assign","assign","__rest","getOwnPropertySymbols","propertyIsEnumerable","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","iterator","v","op","TypeError","pop","__read","ar","error","getRequest","endpoint","swallowError","maxRetries","doRequest","method","url","postRequest","request","useProxy","Authorization","apiToken","datasourceRequest","status","errors","includes","setTimeout","console","log","emptyResultData","refId","datapoints","buildTimeSeries","ALL_APPLICATIONS","ALL_ENDPOINTS","readTime","time","from","Math","floor","Date","valueOf","getTime","to","windowSize","getWindowSize","timeFilter","getTimeKey","msToMin","hoursToMs","hours","store","put","ttl","del","expiry","now","timeout","clearTimeout","instanaOptions","sliReportsCache","getConfiguredSLIs","sliReports","response","sliName","runQuery","sloReport","sloSpecific","sloValue","extractSpecificValueFromSLI","sliResult","buildResultArray","sli","errorBudgetRemaining","buildViolationDistributionTimeSeries","violationDistribution","timestamp","series","greens","reds","greys","granularity","isInvalidQueryInterval","queryIntervalLimit","availableFor","rollup","getDefaultChartGranularity","getPossibleGranularities","maxValues","possibleGranularities","granularities","getDefaultMetricRollupDuration","getPossibleRollups","possibleRollups","rollups","rollupDefinition","rollUp","timeToLiveSnapshotInfoCache","snapshotCache","snapshotInfoCache","catalogCache","typeCache","queryinterval_limit_infra","tagFilterExpression","fetchExploreEntities","metric","showAllMetrics","freeTextMetrics","fetchSnapshotsForTarget","snapshots","fetchMultipleMetricsForSnapshots","allMetrics","metrics","extractMetricsFromText","fetchMetricsForSnapshots","freeText","metricsString","split","each","metricString","parse","slice","resultPromises","allResults","res","snapshot","fetchMetricsForSnapshot","snapshotId","timeInterval","timeseries","readTimeSeries","values","aggregation","buildLabel","stableHash","displayMaxMetricValue","maxValue","getMaxMetricValue","buildMaxMetricTarget","convertRelativeToAbsolute","maxMetrics","max_metrics","find","resultLabel","maxLabel","convertMetricNameToMaxLabel","datapoint","getEntityTypes","entityTypes","typesResponse","entry","plugin","sortBy","fetchTypesForTarget","query","fetchSnapshotTypesUrl","entityQuery","showOffline","payload","pagination","retrievalSize","groupBy","timeFrame","message","items","entity","tags","getMetricsCatalog","metricCategory","catalogResponse","metricId","description","aggregations","entityType","pluginId","buildQuery","buildSnapshotCacheKey","fetchSnapshotContextsUrl","contextsResponse","snapshotInfo","fetchSnapshotUrl","snapshotResponse","reduceSnapshot","compact","pick","correctMeanToSum","secondMultiplier","parseInt","getHostSuffix","labelFormat","timeShift","timeShiftIsValid","omitLabels","versionCache","getVersion","cachedVersion","imageTag","majorVersion","aggregateTarget","targetLabel","customFilters","aggregationFunction","buildAggregationLabel","concatedTargetData","concatTargetData","aggregatedData","dataGroupedByTimestamp","aggregationLabel","timestampData","valuesOfTimestamp","aggregatedValue","toLowerCase","sum","mean","min","max","aggregateDataOfTimestamp","buildResult","createTagFilter","tagFilter","tag","operator","stringValue","numberValue","booleanValue","readItemMetrics","getLabel","flatten","websitesCache","miscCache","queryinterval_limit_website_metrics","group","fetchAnalyzeMetricsForWebsite","buildAnalyzeWebsiteLabel","getWebsites","websites","websitesResponse","website","getWebsiteTags","websiteTags","tagsResponse","getWebsiteMetricsCatalog","websiteCatalog","transformAggregations","sort","beaconTypes","transformBeaconTypes","a","tagFilters","filters","isValid","groupbyTag","groupbyTagSecondLevelKey","applicationsCache","queryinterval_limit_app_calls","fetchAnalyzeMetricsForApplication","showWarningCantShowAllResults","canLoadMore","buildAnalyzeApplicationLabel","getApplications","applications","paginateApplications","flattenDeep","pageSet","orderBy","boundaryScope","application","results","page","pageSize","pageLimit","queryParameters","totalHits","getApplicationTags","applicationTags","version","getCatalog","catalog","mapCatalogResponse","getCatalogFromDeprecatedEndpoint","canApplyToSource","canApplyToDestination","getApplicationMetricsCatalog","applicationCallToEntity","getTagEntity","callToEntity","logicalOperator","elements","selectedEntity","fetchApplicationMetrics","applicationBoundaryScope","buildApplicationMetricLabel","servicesCache","getServicesOfApplication","applicationId","services","paginateServices","service","fetchServiceMetrics","buildServiceMetricLabel","endpointsCache","getEndpointsOfService","serviceId","endpoints","paginateEndpoints","fetchEndpointMetrics","endpointId","buildEndpointMetricLabel","selectedApplication","cf","metric_categories","category","instanceSettings","jsonData","instanaUrl","availableGranularities","availableRollups","availableTimeIntervals","dataSourceSlo","dataSourceInfrastructure","dataSourceWebsite","dataSourceApplication","dataSourceService","dataSourceEndpoint","resultCache","DataSource","range","targets","pseudoHash","targetTimeFilter","hide","setPossibleTimeIntervals","getDefaultTimeInterval","millis","convertTimeShiftToMillis","applyTimeShiftOnTimeFilter","omit","mapValues","adjustTimeFilterIfCached","buildTargetWithAppendedDataResult","buildTarget","getApplicationServiceEndpointMetrics","targetData","targetAndData","resultData","cacheResultIfNecessary","cloneDeep","applyTimeShiftIfNecessary","aggregateDataIfNecessary","queryinterval_limit_app_metrics","applyTimeShiftOnData","supportsDeltaRequests","hasResult","cachedObj","timeshift","newData","aggregateGraphs","hideOriginalGraphs","dt","appendResult","newDeltaData","cachedData","cachedResult","deltaData","matchingCachedDataIndex","findIndex","sortedUniqBy","takeRight","t1","t2","newFrom","fromDefault","penultimate","getDeltaRequestTimestamp","newTo","getSloReports","fetchApplications","getTimeFilter","fetchApplicationTags","fetchServices","fetchEndpoints","fetchWebsites","parseTimeShift","endsWith","testDatasource","title","statusText","versions","props","onInstanaOptionsChange","eventItem","onOptionsChange","currentTarget","debouncedDetectFeatures","onSwitchChange","settings","debounce","detectFeatures","setState","canUseProxy","canQueryOfflineSnapshots","state","render","className","horizontal","required","width","placeholder","onChange","event","suffix","theme","allowInfraExplore","FormWrapper","display","disabled","opacity","pointerEvents","stretch","children","Switch","tooltip","queryKeyword","labelWidth","remainingProps","checked","Component","debouncedRunQuery","onRunQuery","onUseFreeTextMetricsChange","loadEntityTypes","useFreeTextMetrics","onFreeTextMetricsChange","onAggregateGraphs","onHideOriginalGraph","onAggregationFunctionChange","showAdditionalSettings","legendFormat","menuPlacement","isSearchable","inputWidth","legendFormatPlaceholders","legendFormatTooltips","onLegendFormatChange","onTimeShiftChange","match","onShowAdvancedSettingsChange","showAdvancedSettings","legendFormatPlaceholder","setLegendFormatPlaceholder","setLegendFormatTooltip","hidden","invalid","dropdown","position","background","height","marginRight","dropdown__list","transition","maxHeight","overflow","zIndex","dropdown__list__active","iconTextContainer","iconStyle","alignItems","justifyContent","iconTextStyle","padding","destinationIcon","fill","sourceIcon","Entity","dropdown__list__item","colors","bg2","cursor","listStyle","borderRadius","active","setActive","handleClick","onClick","onBlur","contentEditable","placement","isUnmounting","onApplicationChange","onGroupChange","showGroupBySecondLevel","onApplicationCallToEntityChange","onCallToEntityChange","onGroupByTagSecondLevelKeyChange","componentDidMount","datasource","unshift","updateGroups","updateMetrics","componentWillUnmount","groups","inboundIcon","allIcon","loadServices","loadEndpoints","onServiceChange","onEndpointChange","onApplicationBoundaryScopeChange","scope","imgUrl","loadApplications","apps","app","rows","onFilterChange","isValidJson","OPERATOR_STRING","OPERATOR_STRING_SET","OPERATOR_NUMBER","OPERATOR_BOOLEAN","OPERATOR_KEY_VALUE","addTagFilter","filterOperatorsOnType","removeTagFilter","validateChangeAndRun","onOperatorChange","onTagFilterStringValueChange","onTagFilterNumberValueChange","valueAsNumber","operators","canShowStringInput","canShowNumberInput","onTagFilterBooleanValueChange","runDebounced","isNaN","listFilter","singleFilter","variant","searchable","onQueryChange","updateQueryTypes","debouncedEntityTypes","onTypeChange","queryTypes","noOptionsMessage","onMetricChange","canShowMaxMetricValue","onTimeIntervalChange","onAggregationChange","onShowMaxValueChange","onShowAllMetricsChange","availableMetrics","possibleTimeIntervals","possibleAggregations","canShowAggregation","canSelectAggregation","canShowAllMetrics","addCustomFilter","removeCustomFilter","onSloChange","slo","onSloValueChange","onSloSpecificChange","sloReports","isValidSlo","loadSloReports","val","valid","shouldComponentUpdate","nextProps","nextState","nextContext","onWebsiteChange","onBeaconTypeChange","filterMetricsOnType","beacon_types","websiteMetrics","onCategoryChange","newCategory","selectionReset","changeAndRun","onMetricsFilter","setMetricPlaceholder","filterForEntityType","findMatchingEntityTypes","filterResults","filterEntityTypes","types","newAvailableMetrics","applyFilterToMetricList","isAbleToShowAllMetrics","checkMetricAndRefresh","defaultQuery","selectedWindowSize","componentDidUpdate","prevProps","prevState","nrOfTotalResults","filterResult","filteredMetrics","resetMetricSelection","resetEntityTypeSelection","resetEntitySelection","resetServices","resetEndpoints","resetSLO","categories","text","color","setConfigEditor","setQueryEditor"],"mappings":";mHACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QA0Df,OArDAF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,IAIjBlC,EAAoBA,EAAoBmC,EAAI,I,gBClFrDhC,EAAOD,QAAUkC,G,cCAjBjC,EAAOD,QAAUmC,G,cCAjBlC,EAAOD,QAAUoC,G,cCAjBnC,EAAOD,QAAUqC,G,gBCCjB,IAAIC,EAAU,EAAQ,GAEA,iBAAZA,IAAsBA,EAAU,CAAC,CAACrC,EAAOC,EAAIoC,EAAS,MAOhE,IAAIC,EAAU,CAAC,KAAM,EAErB,eAPIC,EAQJ,gBAAqBC,GAER,EAAQ,EAAR,CAA6DH,EAASC,GAEhFD,EAAQI,SAAQzC,EAAOD,QAAUsC,EAAQI,S,6BCT5CzC,EAAOD,QAAU,SAAU2C,GACzB,IAAIC,EAAO,GAuDX,OArDAA,EAAKC,SAAW,WACd,OAAOC,KAAKC,KAAI,SAAUC,GACxB,IAAIV,EAsDV,SAAgCU,EAAML,GACpC,IAAIL,EAAUU,EAAK,IAAM,GAErBC,EAAaD,EAAK,GAEtB,IAAKC,EACH,OAAOX,EAGT,GAAIK,GAAgC,mBAATO,KAAqB,CAC9C,IAAIC,GAWWC,EAXeH,EAa5BI,EAASH,KAAKI,SAASC,mBAAmBC,KAAKC,UAAUL,MACzDM,EAAO,+DAA+DC,OAAON,GAC1E,OAAOM,OAAOD,EAAM,QAdrBE,EAAaX,EAAWY,QAAQd,KAAI,SAAUe,GAChD,MAAO,iBAAiBH,OAAOV,EAAWc,YAAc,IAAIJ,OAAOG,EAAQ,UAE7E,MAAO,CAACxB,GAASqB,OAAOC,GAAYD,OAAO,CAACR,IAAgBa,KAAK,MAOrE,IAAmBZ,EAEbC,EACAK,EAPJ,MAAO,CAACpB,GAAS0B,KAAK,MAvEJC,CAAuBjB,EAAML,GAE3C,OAAIK,EAAK,GACA,UAAUW,OAAOX,EAAK,GAAI,MAAMW,OAAOrB,EAAS,KAGlDA,KACN0B,KAAK,KAKVpB,EAAK1C,EAAI,SAAUE,EAAS8D,EAAYC,GACf,iBAAZ/D,IAETA,EAAU,CAAC,CAAC,KAAMA,EAAS,MAG7B,IAAIgE,EAAyB,GAE7B,GAAID,EACF,IAAK,IAAIjE,EAAI,EAAGA,EAAI4C,KAAKuB,OAAQnE,IAAK,CAEpC,IAAIoE,EAAKxB,KAAK5C,GAAG,GAEP,MAANoE,IACFF,EAAuBE,IAAM,GAKnC,IAAK,IAAIC,EAAK,EAAGA,EAAKnE,EAAQiE,OAAQE,IAAM,CAC1C,IAAIvB,EAAO,GAAGW,OAAOvD,EAAQmE,IAEzBJ,GAAUC,EAAuBpB,EAAK,MAKtCkB,IACGlB,EAAK,GAGRA,EAAK,GAAK,GAAGW,OAAOO,EAAY,SAASP,OAAOX,EAAK,IAFrDA,EAAK,GAAKkB,GAMdtB,EAAK4B,KAAKxB,MAIPJ,I,gBC3DT,IAEwB6B,EACnBC,EAHDC,EAAc,GAWdC,GAToBH,EASF,WAMrB,OAAOI,QAAUC,UAAYA,SAASC,MAAQF,OAAOG,MAZ9C,WAEN,YADoB,IAATN,IAAsBA,EAAOD,EAAGQ,MAAMnC,KAAMoC,YAChDR,IAaLS,EAAY,SAAUC,EAAQC,GAChC,OAAIA,EACKA,EAAOC,cAAcF,GAEvBN,SAASQ,cAAcF,IAG5BG,EAAa,SAAWd,GAC3B,IAAIC,EAAO,GAEX,OAAO,SAASU,EAAQC,GAMT,GAAsB,mBAAXD,EACH,OAAOA,IAEf,QAA4B,IAAjBV,EAAKU,GAAyB,CACtD,IAAII,EAAcL,EAAU9E,KAAKyC,KAAMsC,EAAQC,GAE/C,GAAIR,OAAOY,mBAAqBD,aAAuBX,OAAOY,kBAC7D,IAGCD,EAAcA,EAAYE,gBAAgBC,KACzC,MAAMC,GACPJ,EAAc,KAGhBd,EAAKU,GAAUI,EAEhB,OAAOd,EAAKU,IA1BG,GA8BbS,EAAY,KACZC,EAAmB,EACnBC,EAAsB,GAEtBC,EAAU,EAAQ,GAqDtB,SAASC,EAAgBC,EAAQ3D,GAChC,IAAK,IAAIrC,EAAI,EAAGA,EAAIgG,EAAO7B,OAAQnE,IAAK,CACvC,IAAI8C,EAAOkD,EAAOhG,GACdiG,EAAWxB,EAAY3B,EAAKsB,IAEhC,GAAG6B,EAAU,CACZA,EAASC,OAET,IAAI,IAAIC,EAAI,EAAGA,EAAIF,EAASG,MAAMjC,OAAQgC,IACzCF,EAASG,MAAMD,GAAGrD,EAAKsD,MAAMD,IAG9B,KAAMA,EAAIrD,EAAKsD,MAAMjC,OAAQgC,IAC5BF,EAASG,MAAM9B,KAAK+B,EAASvD,EAAKsD,MAAMD,GAAI9D,QAEvC,CACN,IAAI+D,EAAQ,GAEZ,IAAQD,EAAI,EAAGA,EAAIrD,EAAKsD,MAAMjC,OAAQgC,IACrCC,EAAM9B,KAAK+B,EAASvD,EAAKsD,MAAMD,GAAI9D,IAGpCoC,EAAY3B,EAAKsB,IAAM,CAACA,GAAItB,EAAKsB,GAAI8B,KAAM,EAAGE,MAAOA,KAKxD,SAASE,EAAc5D,EAAML,GAI5B,IAHA,IAAI2D,EAAS,GACTO,EAAY,GAEPvG,EAAI,EAAGA,EAAI0C,EAAKyB,OAAQnE,IAAK,CACrC,IAAI8C,EAAOJ,EAAK1C,GACZoE,EAAK/B,EAAQmE,KAAO1D,EAAK,GAAKT,EAAQmE,KAAO1D,EAAK,GAIlD2D,EAAO,CAACC,IAHF5D,EAAK,GAGO6D,MAFV7D,EAAK,GAEmBI,UADpBJ,EAAK,IAGjByD,EAAUnC,GACTmC,EAAUnC,GAAIgC,MAAM9B,KAAKmC,GADXT,EAAO1B,KAAKiC,EAAUnC,GAAM,CAACA,GAAIA,EAAIgC,MAAO,CAACK,KAIjE,OAAOT,EAGR,SAASY,EAAoBvE,EAASwE,GACrC,IAAI3B,EAASG,EAAWhD,EAAQyE,YAEhC,IAAK5B,EACJ,MAAM,IAAI6B,MAAM,+GAGjB,IAAIC,EAAgCnB,EAAoBA,EAAoB1B,OAAS,GAErF,GAAyB,QAArB9B,EAAQ4E,SACND,EAEMA,EAA8BE,YACxChC,EAAOiC,aAAaN,EAAOG,EAA8BE,aAEzDhC,EAAOkC,YAAYP,GAJnB3B,EAAOiC,aAAaN,EAAO3B,EAAOmC,YAMnCxB,EAAoBvB,KAAKuC,QACnB,GAAyB,WAArBxE,EAAQ4E,SAClB/B,EAAOkC,YAAYP,OACb,IAAgC,iBAArBxE,EAAQ4E,WAAyB5E,EAAQ4E,SAASK,OAInE,MAAM,IAAIP,MAAM,8LAHhB,IAAIG,EAAc7B,EAAWhD,EAAQ4E,SAASK,OAAQpC,GACtDA,EAAOiC,aAAaN,EAAOK,IAM7B,SAASK,EAAoBV,GAC5B,GAAyB,OAArBA,EAAMW,WAAqB,OAAO,EACtCX,EAAMW,WAAWC,YAAYZ,GAE7B,IAAIa,EAAM7B,EAAoB8B,QAAQd,GACnCa,GAAO,GACT7B,EAAoB+B,OAAOF,EAAK,GAIlC,SAASG,EAAoBxF,GAC5B,IAAIwE,EAAQjC,SAASkD,cAAc,SAMnC,QAJ0BvF,IAAvBF,EAAQ0F,MAAMC,OAChB3F,EAAQ0F,MAAMC,KAAO,iBAGKzF,IAAxBF,EAAQ0F,MAAME,MAAqB,CACrC,IAAIA,EAgCN,WACK,EAIJ,OAAO,KArCMC,GACRD,IACH5F,EAAQ0F,MAAME,MAAQA,GAOxB,OAHAE,EAAStB,EAAOxE,EAAQ0F,OACxBnB,EAAmBvE,EAASwE,GAErBA,EAiBR,SAASsB,EAAUC,EAAIL,GACtBrH,OAAO2H,KAAKN,GAAOO,SAAQ,SAAU/G,GACpC6G,EAAGG,aAAahH,EAAKwG,EAAMxG,OAY7B,SAAS8E,EAAUmC,EAAKnG,GACvB,IAAIwE,EAAO4B,EAAQC,EAAQC,EAG3B,GAAItG,EAAQC,WAAakG,EAAI9B,IAAK,CAK9B,KAJAiC,EAAsC,mBAAtBtG,EAAQC,UACxBD,EAAQC,UAAUkG,EAAI9B,KACtBrE,EAAQC,UAAUsG,QAAQJ,EAAI9B,MAS7B,OAAO,aAJP8B,EAAI9B,IAAMiC,EAUf,GAAItG,EAAQsD,UAAW,CACtB,IAAIkD,EAAajD,IAEjBiB,EAAQlB,IAAcA,EAAYkC,EAAmBxF,IAErDoG,EAASK,EAAoBtH,KAAK,KAAMqF,EAAOgC,GAAY,GAC3DH,EAASI,EAAoBtH,KAAK,KAAMqF,EAAOgC,GAAY,QAG3DL,EAAItF,WACW,mBAAR6F,KACwB,mBAAxBA,IAAIC,iBACoB,mBAAxBD,IAAIE,iBACK,mBAATC,MACS,mBAATlG,MAEP6D,EAlEF,SAA4BxE,GAC3B,IAAI8G,EAAOvE,SAASkD,cAAc,QAUlC,YAR0BvF,IAAvBF,EAAQ0F,MAAMC,OAChB3F,EAAQ0F,MAAMC,KAAO,YAEtB3F,EAAQ0F,MAAMqB,IAAM,aAEpBjB,EAASgB,EAAM9G,EAAQ0F,OACvBnB,EAAmBvE,EAAS8G,GAErBA,EAuDEE,CAAkBhH,GAC1BoG,EAASa,EAAW9H,KAAK,KAAMqF,EAAOxE,GACtCqG,EAAS,WACRnB,EAAmBV,GAEhBA,EAAM0C,MAAMR,IAAIE,gBAAgBpC,EAAM0C,SAG1C1C,EAAQgB,EAAmBxF,GAC3BoG,EAASe,EAAWhI,KAAK,KAAMqF,GAC/B6B,EAAS,WACRnB,EAAmBV,KAMrB,OAFA4B,EAAOD,GAEA,SAAsBiB,GAC5B,GAAIA,EAAQ,CACX,GACCA,EAAO/C,MAAQ8B,EAAI9B,KACnB+C,EAAO9C,QAAU6B,EAAI7B,OACrB8C,EAAOvG,YAAcsF,EAAItF,UAEzB,OAGDuF,EAAOD,EAAMiB,QAEbf,KA1PH3I,EAAOD,QAAU,SAAS4C,EAAML,GAC/B,GAAqB,oBAAVqH,OAAyBA,OACX,iBAAb9E,SAAuB,MAAM,IAAImC,MAAM,iEAGnD1E,EAAUA,GAAW,IAEb0F,MAAiC,iBAAlB1F,EAAQ0F,MAAqB1F,EAAQ0F,MAAQ,GAI/D1F,EAAQsD,WAA0C,kBAAtBtD,EAAQsD,YAAyBtD,EAAQsD,UAAYjB,KAG1ErC,EAAQyE,aAAYzE,EAAQyE,WAAa,QAGhDzE,EAAQ4E,WAAU5E,EAAQ4E,SAAW,UAE1C,IAAIjB,EAASM,EAAa5D,EAAML,GAIhC,OAFA0D,EAAeC,EAAQ3D,GAEhB,SAAiBsH,GAGvB,IAFA,IAAIC,EAAY,GAEP5J,EAAI,EAAGA,EAAIgG,EAAO7B,OAAQnE,IAAK,CACvC,IAAI8C,EAAOkD,EAAOhG,IACdiG,EAAWxB,EAAY3B,EAAKsB,KAEvB8B,OACT0D,EAAUtF,KAAK2B,GAGb0D,GAEF5D,EADgBO,EAAaqD,EAAStH,GACZA,GAG3B,IAASrC,EAAI,EAAGA,EAAI4J,EAAUzF,OAAQnE,IAAK,CAC1C,IAAIiG,EAEJ,GAAqB,KAFjBA,EAAW2D,EAAU5J,IAEbkG,KAAY,CACvB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAASG,MAAMjC,OAAQgC,IAAKF,EAASG,MAAMD,YAExD1B,EAAYwB,EAAS7B,QAkNhC,IACKyF,EADDC,GACCD,EAAY,GAET,SAAUE,EAAOC,GAGvB,OAFAH,EAAUE,GAASC,EAEZH,EAAUI,OAAOC,SAASpG,KAAK,QAIxC,SAASgF,EAAqBjC,EAAOkD,EAAOrB,EAAQF,GACnD,IAAI9B,EAAMgC,EAAS,GAAKF,EAAI9B,IAE5B,GAAIG,EAAMsD,WACTtD,EAAMsD,WAAWC,QAAUN,EAAYC,EAAOrD,OACxC,CACN,IAAI2D,EAAUzF,SAAS0F,eAAe5D,GAClC6D,EAAa1D,EAAM0D,WAEnBA,EAAWR,IAAQlD,EAAMY,YAAY8C,EAAWR,IAEhDQ,EAAWpG,OACd0C,EAAMM,aAAakD,EAASE,EAAWR,IAEvClD,EAAMO,YAAYiD,IAKrB,SAASb,EAAY3C,EAAO2B,GAC3B,IAAI9B,EAAM8B,EAAI9B,IACVC,EAAQ6B,EAAI7B,MAMhB,GAJGA,GACFE,EAAM0B,aAAa,QAAS5B,GAG1BE,EAAMsD,WACRtD,EAAMsD,WAAWC,QAAU1D,MACrB,CACN,KAAMG,EAAMQ,YACXR,EAAMY,YAAYZ,EAAMQ,YAGzBR,EAAMO,YAAYxC,SAAS0F,eAAe5D,KAI5C,SAAS4C,EAAYH,EAAM9G,EAASmG,GACnC,IAAI9B,EAAM8B,EAAI9B,IACVxD,EAAYsF,EAAItF,UAQhBsH,OAAgDjI,IAAlCF,EAAQoI,uBAAuCvH,GAE7Db,EAAQoI,uBAAyBD,KACpC9D,EAAMZ,EAAQY,IAGXxD,IAEHwD,GAAO,uDAAyD1D,KAAKI,SAASC,mBAAmBC,KAAKC,UAAUL,MAAgB,OAGjI,IAAIwH,EAAO,IAAIxB,KAAK,CAACxC,GAAM,CAAEsB,KAAM,aAE/B2C,EAASxB,EAAKI,KAElBJ,EAAKI,KAAOR,IAAIC,gBAAgB0B,GAE7BC,GAAQ5B,IAAIE,gBAAgB0B,K,cC9YhC5K,EAAOD,QAAU8K,G,iBCEjB9K,EADkC,EAAQ,EAChC+K,EAA4B,IAE9BvG,KAAK,CAACvE,EAAOC,EAAI,kFAAmF,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,cAAc,MAAQ,GAAG,SAAW,8CAA8C,KAAO,aAAa,eAAiB,CAAC,sFAE/PD,EAAOD,QAAUA,G,cCQjBC,EAAOD,QAAU,SAAU4G,GAEzB,IAAIoE,EAA6B,oBAAXnG,QAA0BA,OAAOmG,SAEvD,IAAKA,EACH,MAAM,IAAI/D,MAAM,oCAInB,IAAKL,GAAsB,iBAARA,EACjB,OAAOA,EAGR,IAAIqE,EAAUD,EAASE,SAAW,KAAOF,EAASG,KAC9CC,EAAaH,EAAUD,EAASK,SAASC,QAAQ,YAAa,KA2DnE,OA/Be1E,EAAI0E,QAAQ,uDAAuD,SAASC,EAAWC,GAErG,IAWIC,EAXAC,EAAkBF,EACpBG,OACAL,QAAQ,YAAY,SAAS3K,EAAGiL,GAAK,OAAOA,KAC5CN,QAAQ,YAAY,SAAS3K,EAAGiL,GAAK,OAAOA,KAG9C,MAAI,oDAAoDC,KAAKH,GACpDH,GAQRE,EAFqC,IAAlCC,EAAgB7D,QAAQ,MAElB6D,EACkC,IAAjCA,EAAgB7D,QAAQ,KAEzBoD,EAAUS,EAGVN,EAAaM,EAAgBJ,QAAQ,QAAS,IAIjD,OAAS9H,KAAKC,UAAUgI,GAAU,U,gBClF3C,IAAInJ,EAAU,EAAQ,IAEA,iBAAZA,IAAsBA,EAAU,CAAC,CAACrC,EAAOC,EAAIoC,EAAS,MAOhE,IAAIC,EAAU,CAAC,KAAM,EAErB,eAPIC,EAQJ,gBAAqBC,GAER,EAAQ,EAAR,CAA0DH,EAASC,GAE7ED,EAAQI,SAAQzC,EAAOD,QAAUsC,EAAQI,S,iBCf5C1C,EADkC,EAAQ,EAChC+K,EAA4B,IAE9BvG,KAAK,CAACvE,EAAOC,EAAI,oKAAuK,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,uBAAuB,MAAQ,GAAG,SAAW,sBAAsB,KAAO,sBAAsB,eAAiB,CAAC,wKAE7UD,EAAOD,QAAUA,G,gBCLjB,IAAIsC,EAAU,EAAQ,IAEA,iBAAZA,IAAsBA,EAAU,CAAC,CAACrC,EAAOC,EAAIoC,EAAS,MAOhE,IAAIC,EAAU,CAAC,KAAM,EAErB,eAPIC,EAQJ,gBAAqBC,GAER,EAAQ,EAAR,CAAgEH,EAASC,GAEnFD,EAAQI,SAAQzC,EAAOD,QAAUsC,EAAQI,S,iBCf5C1C,EADkC,EAAQ,EAChC+K,EAA4B,IAE9BvG,KAAK,CAACvE,EAAOC,EAAI,6qBAA8qB,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,gCAAgC,MAAQ,GAAG,SAAW,4TAA4T,KAAO,+BAA+B,eAAiB,CAAC,irBAE5oCD,EAAOD,QAAUA,G,+CCUb8L,EAAgB,SAAStL,EAAGuL,GAI5B,OAHAD,EAAgBlL,OAAOoL,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAU1L,EAAGuL,GAAKvL,EAAEyL,UAAYF,IACvE,SAAUvL,EAAGuL,GAAK,IAAK,IAAI/J,KAAK+J,EAAOA,EAAEhK,eAAeC,KAAIxB,EAAEwB,GAAK+J,EAAE/J,MACpDxB,EAAGuL,IAGrB,SAASI,EAAU3L,EAAGuL,GAEzB,SAASK,IAAOtJ,KAAKuJ,YAAc7L,EADnCsL,EAActL,EAAGuL,GAEjBvL,EAAEsB,UAAkB,OAANiK,EAAanL,OAAOY,OAAOuK,IAAMK,EAAGtK,UAAYiK,EAAEjK,UAAW,IAAIsK,GAG5E,IAAIE,EAAW,WAQlB,OAPAA,EAAW1L,OAAO2L,QAAU,SAAkBnL,GAC1C,IAAK,IAAIa,EAAG/B,EAAI,EAAGyB,EAAIuD,UAAUb,OAAQnE,EAAIyB,EAAGzB,IAE5C,IAAK,IAAI8B,KADTC,EAAIiD,UAAUhF,GACOU,OAAOkB,UAAUC,eAAe1B,KAAK4B,EAAGD,KAAIZ,EAAEY,GAAKC,EAAED,IAE9E,OAAOZ,IAEK6D,MAAMnC,KAAMoC,YAGzB,SAASsH,EAAOvK,EAAG2D,GACtB,IAAIxE,EAAI,GACR,IAAK,IAAIY,KAAKC,EAAOrB,OAAOkB,UAAUC,eAAe1B,KAAK4B,EAAGD,IAAM4D,EAAEiC,QAAQ7F,GAAK,IAC9EZ,EAAEY,GAAKC,EAAED,IACb,GAAS,MAALC,GAAqD,mBAAjCrB,OAAO6L,sBACtB,KAAIvM,EAAI,EAAb,IAAgB8B,EAAIpB,OAAO6L,sBAAsBxK,GAAI/B,EAAI8B,EAAEqC,OAAQnE,IAC3D0F,EAAEiC,QAAQ7F,EAAE9B,IAAM,GAAKU,OAAOkB,UAAU4K,qBAAqBrM,KAAK4B,EAAGD,EAAE9B,MACvEkB,EAAEY,EAAE9B,IAAM+B,EAAED,EAAE9B,KAE1B,OAAOkB,EAkBJ,SAASuL,EAAUC,EAASC,EAAYC,EAAGC,GAE9C,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUhM,GAAS,IAAMiM,EAAKL,EAAUM,KAAKlM,IAAW,MAAOyE,GAAKsH,EAAOtH,IACpF,SAAS0H,EAASnM,GAAS,IAAMiM,EAAKL,EAAiB,MAAE5L,IAAW,MAAOyE,GAAKsH,EAAOtH,IACvF,SAASwH,EAAKvE,GAJlB,IAAe1H,EAIa0H,EAAO0E,KAAON,EAAQpE,EAAO1H,QAJ1CA,EAIyD0H,EAAO1H,MAJhDA,aAAiB2L,EAAI3L,EAAQ,IAAI2L,GAAE,SAAUG,GAAWA,EAAQ9L,OAITqM,KAAKL,EAAWG,GAClGF,GAAML,EAAYA,EAAU9H,MAAM2H,EAASC,GAAc,KAAKQ,WAI/D,SAASI,EAAYb,EAASc,GACjC,IAAsGC,EAAGC,EAAGxM,EAAGyM,EAA3GC,EAAI,CAAEC,MAAO,EAAGC,KAAM,WAAa,GAAW,EAAP5M,EAAE,GAAQ,MAAMA,EAAE,GAAI,OAAOA,EAAE,IAAO6M,KAAM,GAAIC,IAAK,IAChG,OAAOL,EAAI,CAAER,KAAMc,EAAK,GAAI,MAASA,EAAK,GAAI,OAAUA,EAAK,IAAwB,mBAAXlN,SAA0B4M,EAAE5M,OAAOmN,UAAY,WAAa,OAAOtL,OAAU+K,EACvJ,SAASM,EAAKxM,GAAK,OAAO,SAAU0M,GAAK,OACzC,SAAcC,GACV,GAAIX,EAAG,MAAM,IAAIY,UAAU,mCAC3B,KAAOT,GAAG,IACN,GAAIH,EAAI,EAAGC,IAAMxM,EAAY,EAARkN,EAAG,GAASV,EAAU,OAAIU,EAAG,GAAKV,EAAS,SAAOxM,EAAIwM,EAAU,SAAMxM,EAAEf,KAAKuN,GAAI,GAAKA,EAAEP,SAAWjM,EAAIA,EAAEf,KAAKuN,EAAGU,EAAG,KAAKf,KAAM,OAAOnM,EAE3J,OADIwM,EAAI,EAAGxM,IAAGkN,EAAK,CAAS,EAARA,EAAG,GAAQlN,EAAED,QACzBmN,EAAG,IACP,KAAK,EAAG,KAAK,EAAGlN,EAAIkN,EAAI,MACxB,KAAK,EAAc,OAAXR,EAAEC,QAAgB,CAAE5M,MAAOmN,EAAG,GAAIf,MAAM,GAChD,KAAK,EAAGO,EAAEC,QAASH,EAAIU,EAAG,GAAIA,EAAK,CAAC,GAAI,SACxC,KAAK,EAAGA,EAAKR,EAAEI,IAAIM,MAAOV,EAAEG,KAAKO,MAAO,SACxC,QACI,KAAMpN,EAAI0M,EAAEG,MAAM7M,EAAIA,EAAEiD,OAAS,GAAKjD,EAAEA,EAAEiD,OAAS,KAAkB,IAAViK,EAAG,IAAsB,IAAVA,EAAG,IAAW,CAAER,EAAI,EAAG,SACjG,GAAc,IAAVQ,EAAG,MAAclN,GAAMkN,EAAG,GAAKlN,EAAE,IAAMkN,EAAG,GAAKlN,EAAE,IAAM,CAAE0M,EAAEC,MAAQO,EAAG,GAAI,MAC9E,GAAc,IAAVA,EAAG,IAAYR,EAAEC,MAAQ3M,EAAE,GAAI,CAAE0M,EAAEC,MAAQ3M,EAAE,GAAIA,EAAIkN,EAAI,MAC7D,GAAIlN,GAAK0M,EAAEC,MAAQ3M,EAAE,GAAI,CAAE0M,EAAEC,MAAQ3M,EAAE,GAAI0M,EAAEI,IAAI1J,KAAK8J,GAAK,MACvDlN,EAAE,IAAI0M,EAAEI,IAAIM,MAChBV,EAAEG,KAAKO,MAAO,SAEtBF,EAAKZ,EAAKrN,KAAKuM,EAASkB,GAC1B,MAAOlI,GAAK0I,EAAK,CAAC,EAAG1I,GAAIgI,EAAI,EAAK,QAAUD,EAAIvM,EAAI,EACtD,GAAY,EAARkN,EAAG,GAAQ,MAAMA,EAAG,GAAI,MAAO,CAAEnN,MAAOmN,EAAG,GAAKA,EAAG,QAAK,EAAQf,MAAM,GArB9BH,CAAK,CAACzL,EAAG0M,MA8CtD,SAASI,EAAO9N,EAAGgB,GACtB,IAAIrB,EAAsB,mBAAXW,QAAyBN,EAAEM,OAAOmN,UACjD,IAAK9N,EAAG,OAAOK,EACf,IAAmBK,EAAY4E,EAA3B1F,EAAII,EAAED,KAAKM,GAAO+N,EAAK,GAC3B,IACI,WAAc,IAAN/M,GAAgBA,KAAM,MAAQX,EAAId,EAAEmN,QAAQE,MAAMmB,EAAGlK,KAAKxD,EAAEG,OAExE,MAAOwN,GAAS/I,EAAI,CAAE+I,MAAOA,GAC7B,QACI,IACQ3N,IAAMA,EAAEuM,OAASjN,EAAIJ,EAAU,SAAII,EAAED,KAAKH,GAElD,QAAU,GAAI0F,EAAG,MAAMA,EAAE+I,OAE7B,OAAOD,E,WCvIEE,EAAa,SAACrM,EAAyBsM,EAAkBC,EAAsBC,GAM1F,YANoE,IAAAD,OAAA,QAAsB,IAAAC,MAAA,GAMnFC,EAAUzM,EALD,CACd0M,OAAQ,MACRC,IAAK3M,EAAQ2M,IAAML,GAGcC,EAAcC,IAGtCI,EAAc,SACzB5M,EACAsM,EACAnL,EACAoL,EACAC,GAQA,YATA,IAAAD,OAAA,QACA,IAAAC,MAAA,GAQOC,EAAUzM,EAND,CACd0M,OAAQ,OACRC,IAAK3M,EAAQ2M,IAAML,EACnBnL,KAAMA,GAG2BoL,EAAcC,IAGnD,SAASC,EACPzM,EACA6M,EACAN,EACAC,GAOA,OALKxM,EAAQ8M,WACXD,EAAO,QAAc,CACnBE,cAAe,YAAc/M,EAAQgN,WAGlC,0BACJC,kBAAkBJ,GADd,OAEE,SAACT,G,MACN,GAAqB,MAAjBA,EAAMc,OAAgB,CAExB,GACEV,EAAa,IACH,QADI,EACdJ,EAAMjL,YAAI,eAAEgM,SACZf,EAAMjL,KAAKgM,OAAO,IAClBf,EAAMjL,KAAKgM,OAAO,GAAGC,SAAS,cAC9B,CACA,IAAM,EAAUZ,GAAc,EAAI,IAA2B,KAAlB,EAAIA,GAC/C,OAAO,IAAI/B,SAAQ,SAACC,GAAY,OAAA2C,WAAW3C,EAAX,MAA8BO,MAAK,WACjE,OAAOwB,EAAUzM,EAAS6M,EAASN,EAAcC,EAAa,MAGlE,MAAM,IAAI9H,MAAM,yBAIlB,IAAI6H,KAAiBH,EAAMc,QAAU,KAAOd,EAAMc,OAAS,KAA3D,CAIA,GAAIV,EAAa,GAAKJ,EAAMc,QAAU,IACpC,OAAOT,EAAUzM,EAAS6M,EAASN,EAAcC,EAAa,GAEhE,MAAMJ,EANJkB,QAAQC,IAAInB,MC5Dd,SAAUoB,EAAgBC,GAC9B,MAAO,CACL5K,OAAQ4K,EACRC,WAAY,IAIV,SAAUC,EAAgBnC,EAAeiC,EAAeC,GAC5D,MAAO,CACL7K,OAAQ2I,EACRiC,MAAOA,EACPC,WAAYA,GCZT,IAiBME,EAAmB,8BAGnBC,EAAgB,2BCjBvB,SAAUC,EAASC,GACvB,IAAMC,EAAqE,IAA9DC,KAAKC,MAAM,IAAIC,KAAKJ,EAAMC,KAAKI,WAAWC,UAAY,KAC7DC,EAAiE,IAA5DL,KAAKC,MAAM,IAAIC,KAAKJ,EAAMO,GAAGF,WAAWC,UAAY,KAC/D,MAAO,CACLL,KAAMA,EACNM,GAAIA,EACJC,WAAYD,EAAKN,GAIf,SAAUQ,EAAcC,GAC5B,OAAOA,EAAWT,KAAOS,EAAWH,GAAKG,EAAWT,KAAOS,EAAWF,WAGlE,SAAUG,EAAWD,GAEzB,OAAOE,EAAQF,EAAWT,MDjBH,ICiBuBW,EAAQF,EAAWH,IAGnE,SAASK,EAAQZ,GACf,OAAOE,KAAKC,MAAMH,EAAO,KAGrB,SAAUa,EAAUC,GACxB,OAAIA,EAAQ,EACK,GAARA,EAAa,GAAK,IAEpB,EC/BT,I,EAAA,WAGE,aACEtO,KAAKuO,MAAQ,GAiCjB,OA9BE,YAAAC,IAAA,SAAI7P,EAAaN,EAAUoQ,GAA3B,gBAA2B,IAAAA,MAAA,UACb9O,IAARhB,QAA+BgB,IAAVtB,IAIzB2B,KAAK0O,IAAI/P,GACTqB,KAAKuO,MAAM5P,GAAO,CAChBN,MAAK,EACLsQ,OAAQf,KAAKgB,MAAQH,EACrBI,QAAS/B,YAAW,WAClB,EAAK4B,IAAI/P,KACR8P,MAIP,YAAAxQ,IAAA,SAAIU,GACF,IAAIuB,EAAOF,KAAKuO,MAAM5P,GAKtB,OAJIuB,GAAUA,EAAKyO,QAAUzO,EAAKyO,OAASf,KAAKgB,QAC9C5O,KAAK0O,IAAI/P,GACTuB,OAAOP,GAEFO,GAAQA,EAAK7B,OAGtB,YAAAqQ,IAAA,SAAI/P,GACEqB,KAAKuO,MAAMtP,eAAeN,KAC5BmQ,aAAa9O,KAAKuO,MAAM5P,GAAKkQ,gBACtB7O,KAAKuO,MAAM5P,KAGxB,EArCA,G,gBCUA,aAIE,WAAYc,GACVO,KAAK+O,eAAiBtP,EACtBO,KAAKgP,gBAAkB,IAAI,EAgG/B,OA7FE,YAAAC,kBAAA,WACE,IAAIC,EAAalP,KAAKgP,gBAAgB/Q,IAAI,cAC1C,OAAIiR,IAIJA,EAAapD,EAAW9L,KAAK+O,eAAgB,qBAAqBrE,MAAK,SAACyE,GACtE,WAAElP,IAAIkP,EAASvO,MAAM,SAAC1C,GACpB,MAAO,CACLS,IAAKT,EAAEsD,GACPyJ,MAAO/M,EAAEkR,eAKfpP,KAAKgP,gBAAgBR,IAAI,aAAcU,GAChCA,IAGT,YAAAG,SAAA,SAAS/M,EAAsB4L,GAA/B,WAEE,KACG5L,GACAA,EAAOgN,WACPhN,EAAOgN,UAAU3Q,KACjB2D,EAAOiN,aACPjN,EAAOiN,YAAY5Q,KACnB2D,EAAOkN,UAER,OAAOtF,QAAQC,QAAQ8C,EAAgB3K,EAAO4K,QAGhD,IAAInB,EACF,mBACAzJ,EAAOgN,UAAU3Q,IACjB,SACAuP,EAAWT,KACX,OACAS,EAAWH,GACX,QACAzL,EAAOkN,SACT,OAAO1D,EAAW9L,KAAK+O,eAAgBhD,GAAUrB,MAAK,SAACyE,GACrD,OAAO,EAAKM,4BAA4BnN,EAAQ6M,EAASvO,KAAMsN,OAInE,YAAAuB,4BAAA,SAA4BnN,EAAsBoN,EAAgBxB,GAChE,MAA+B,QAA3B5L,EAAOiN,YAAY5Q,IACd,CACLyO,EAAgB9K,EAAOiN,YAAYtE,MAAQ3I,EAAO4K,MAAOlN,KAAK2P,iBAAiBD,EAAUE,IAAK1B,EAAWH,MAEvE,2BAA3BzL,EAAOiN,YAAY5Q,IACrB,CACLyO,EACE9K,EAAOiN,YAAYtE,MACnB3I,EAAO4K,MACPlN,KAAK2P,iBAAiBD,EAAUG,qBAAsB3B,EAAWH,MAGjC,eAA3BzL,EAAOiN,YAAY5Q,IACrBqB,KAAK8P,qCAAqCxN,EAAQoN,EAAUK,sBAAuB7B,GAGrF,CAACjB,EAAgB3K,EAAO4K,SAGjC,YAAAyC,iBAAA,SAAiB5J,EAAgBiK,GAC/B,MAAO,CAAC,CAACjK,EAAQiK,KAGnB,YAAAF,qCAAA,SAAqCxN,EAAsB2N,EAAa/B,GACtE,IAAMgC,EAAgB,GAChBC,EAAc,GACdC,EAAe,GAEjBC,EAAcpC,EAAcC,GAAcpQ,OAAO2H,KAAKwK,GAAQ1O,OAClE,IAAEmE,QAAQuK,GAAQ,SAAC5R,EAAe8I,GAClB,IAAV9I,EACF6R,EAAOxO,KAAK,CAAC,EAAGwM,EAAWT,KAAOtG,EAAQkJ,IACvB,IAAVhS,EACT+R,EAAM1O,KAAK,CAAC,EAAGwM,EAAWT,KAAOtG,EAAQkJ,KACrB,IAAXhS,GACT8R,EAAKzO,KAAK,CAAC,EAAGwM,EAAWT,KAAOtG,EAAQkJ,OAI5C,IAAMtK,EAAuB,GAK7B,OAJAA,EAAOrE,KAAK0L,EAAgB,eAAgB9K,EAAO4K,MAAOgD,IAC1DnK,EAAOrE,KAAK0L,EAAgB,YAAa9K,EAAO4K,MAAOiD,IACvDpK,EAAOrE,KAAK0L,EAAgB,UAAW9K,EAAO4K,MAAOkD,IAE9CrK,GAEX,EAtGA,GCPe,GACb,CACEkF,MAAO,kCACPtM,IAAK,GAEP,CACEsM,MAAO,gCACPtM,IAAK,GAEP,CACEsM,MAAO,gCACPtM,IAAK,GAEP,CAEEsM,MAAO,uCACPtM,IAAK,GAEP,CACEsM,MAAO,4BACPtM,IAAK,GAEP,CACEsM,MAAO,kBACPtM,IAAK,GAEP,CACEsM,MAAO,kBACPtM,IAAK,ICzBH,SAAU2R,EAAuBtC,EAAoBuC,GACzD,QAAIA,IACEA,EAAqB,GACgB,IAAhC7C,KAAKC,MAAMK,EAAa,KAAeuC,GCTrC,OACb,CACElS,MAAO,EACP4M,MAAO,MAET,CACE5M,MAAO,EACP4M,MAAO,MAET,CACE5M,MAAO,GACP4M,MAAO,OAET,CACE5M,MAAO,GACP4M,MAAO,QAET,CACE5M,MAAO,IACP4M,MAAO,QAET,CACE5M,MAAO,IACP4M,MAAO,SAET,CACE5M,MAAO,KACP4M,MAAO,MAET,CACE5M,MAAO,KACP4M,MAAO,MAET,CACE5M,MAAO,KACP4M,MAAO,OAET,CACE5M,MAAO,MACP4M,MAAO,MAET,CACE5M,MAAO,MACP4M,MAAO,MAET,CACE5M,MAAO,MACP4M,MAAO,QC/CI,GACb,CACEuF,aAAc,MACdC,OAAQ,IACRxF,MAAO,MAET,CACEuF,aAAc,MACdC,OAAQ,IACRxF,MAAO,MAET,CACEuF,aAAc,QACdC,OAAQ,IACRxF,MAAO,QAET,CACEuF,aAAc,QACdC,OAAQ,IACRxF,MAAO,QAET,CACEuF,aAAc,SACdC,OAAQ,KACRxF,MAAO,OCVL,SAAUyF,EAA2B1C,GACzC,OAAO2C,EAAyB3C,EAPJ,IAOuC,GAG/D,SAAU2C,EAAyB3C,EAAoB4C,QAAA,IAAAA,MAZ9B,KAa7B,IAAIC,EAAwBC,EAAczJ,QACxC,SAACgJ,GAAgB,OAAArC,EAAa,IAAOqC,EAAYhS,OAASuS,GAAiC,IAApBP,EAAYhS,OAAlE2P,KAYnB,OARIA,EAAa,WACf6C,EAAwBA,EAAsBxJ,QAAO,SAACgJ,GAAgB,OAAAA,EAAYhS,OAAZ,SAGpE2P,GAAc,OAChB6C,EAAwBA,EAAsBxJ,QAAO,SAACgJ,GAAgB,OAAAA,EAAYhS,OAAZ,OAGpEwS,EAAsBtP,OAAS,EAC1BsP,EAAsB5Q,KAAI,SAACoQ,GAAgB,MAAC,CACjD1R,IAAK0R,EAAYhS,MAAM0B,WACvBkL,MAAOoF,EAAYpF,UAIhB,CACL,CACEtM,IAAKmS,EAAcA,EAAcvP,OAAS,GAAGlD,MAAM0B,WACnDkL,MAAO6F,EAAcA,EAAcvP,OAAS,GAAG0J,QAK/C,SAAU8F,EAA+B7C,GAC7C,OAAO8C,EAAmB9C,GAAY,GAGlC,SAAU8C,EAAmB9C,GAGjC,IAAMU,EA3CChB,KAAKgB,MA4CNZ,EAAaC,EAAcC,GAE7B+C,EAAkBC,EACnB7J,QAAO,SAAC8J,GAAqB,OAAAjD,EAAWT,MAAQmB,EAAMuC,EAAzB,gBAC7B9J,QAAO,SAAC+J,GAAW,OAAApD,GAAcoD,EAAOX,QAAUzC,EAAaoD,EAAOX,QApDrC,OAsDpC,OAAIQ,EAAgB1P,OAAS,EACpB0P,EAAgBhR,KAAI,SAACwQ,GAAW,MAAC,CACtC9R,IAAK8R,EAAOA,OAAO1Q,WACnBkL,MAAOwF,EAAOxF,UAIX,CACL,CACEtM,IAAKuS,EAAQA,EAAQ3P,OAAS,GAAGkP,OAAO1Q,WACxCkL,MAAOiG,EAAQA,EAAQ3P,OAAS,GAAG0J,QCvE1B,OACb,CACEtM,IAAK,WACLN,MAAO,YACP4M,MAAO,WAET,CACEtM,IAAK,cACLN,MAAO,eACP4M,MAAO,cAET,CACEtM,IAAK,iBACLN,MAAO,gBACP4M,MAAO,kBCAX,aAQE,WAAYxL,GAFZ,KAAA4R,4BAA8B,IAG5BrR,KAAK+O,eAAiBtP,EACtBO,KAAKsR,cAAgB,IAAI,EACzBtR,KAAKuR,kBAAoB,IAAI,EAC7BvR,KAAKwR,aAAe,IAAI,EACxBxR,KAAKyR,UAAY,IAAI,EAuXzB,OApXE,YAAApC,SAAA,SAAS/M,EAAsB4L,GAA/B,WAEE,GAAIoC,EAAuBpC,EAAWF,WAAYK,EAAUrO,KAAK+O,eAAe2C,4BAC9E,MAAM,IAAIvN,MACR,6DACEnE,KAAK+O,eAAe2C,0BACpB,UAIN,OAAIpP,EAAOqP,oBACF3R,KAAK4R,qBAAqBtP,EAAQ4L,GAIrC5L,EAAOuP,QAAWvP,EAAOuP,OAAOlT,KAAS2D,EAAOwP,gBAAmBxP,EAAOyP,gBAKzE/R,KAAKgS,wBAAwB1P,EAAQ4L,GAAYxD,MAAK,SAACuH,GAC5D,GAAI3P,EAAOwP,eAET,OAAO,EAAKI,iCAAiC5P,EAAQ2P,EAAW/D,EAAY5L,EAAO6P,YAC9E,GAAI7P,EAAOyP,gBAAiB,CAEjC,IAAMK,EAAU,EAAKC,uBAAuB/P,EAAOyP,iBACnD,OAAO,EAAKG,iCAAiC5P,EAAQ2P,EAAW/D,EAAYkE,GAE5E,OAAO,EAAKE,yBAAyBhQ,EAAQ2P,EAAW/D,EAAY5L,EAAOuP,WAbtE3H,QAAQC,QAAQ8C,EAAgB3K,EAAO4K,SAkBlD,YAAAmF,uBAAA,SAAuBE,GACrB,IAAMC,EAAgBD,EAAS/J,QAAQ,MAAO,IAAIiK,MAAM,KACpDL,EAAoB,GAOxB,OANA,IAAEM,KAAKF,GAAe,SAACG,GAAiB,OAAAP,EAAQ1Q,KAAKhB,KAAKkS,MAAM,aAAeD,EAAvC,UAEpCP,EAAQ7Q,OAAS,IACnB6Q,EAAUA,EAAQS,MAAM,EAAG,IAGtBT,GAGT,YAAAF,iCAAA,SAAiC5P,EAAsB2P,EAAgB/D,EAAwBkE,GAA/F,WACQU,EAAsB,GAK5B,OAJA,IAAEpN,QAAQ0M,GAAS,SAACP,GAClBiB,EAAepR,KAAK,EAAK4Q,yBAAyBhQ,EAAQ2P,EAAW/D,EAAY2D,OAG5E3H,QAAQjI,IAAI6Q,GAAgBpI,MAAK,SAACqI,GACvC,IAAMZ,EAAkB,GAExB,OADAY,EAAWrN,SAAQ,SAACK,GAAgB,OAAAA,EAAOL,SAAQ,SAACvG,GAAW,OAAAgT,EAAWzQ,KAAX,SACxDyQ,MAIX,YAAAG,yBAAA,SAAyBhQ,EAAsB2P,EAAgB/D,EAAwB2D,GAAvF,WACMjB,EAAiB,GACjBoC,EAAM,IAAE/S,IAAIgS,GAAW,SAACgB,EAAU9L,GAEpC,OAAO,EAAK+L,wBAAwBD,EAASE,WAAYjF,EAAY5L,EAAO8Q,aAAazU,IAAKkT,GAAQnH,MACpG,SAACyE,GACC,IAAIkE,EAAa,EAAKC,eAAenE,EAASvO,KAAK2S,OAAQjR,EAAOkR,YAAatF,GAC3EnI,EAAS,CACXzD,OAAQ,EAAKmR,WAAWR,EAAS9D,SAAU8D,EAAS5K,KAAM/F,EAAQ6E,EAAO0K,GACzE1E,WAAY,IAAElN,IAAIoT,GAAY,SAAChV,GAAU,OAACA,EAAMA,MAAOA,EAAd,cACzC6O,MAAO5K,EAAO4K,MACdvO,IAAK2D,EAAOoR,YAGd,GAAIpR,EAAOqR,sBAAuB,CAChC,IAAMC,EAAW,EAAKC,kBAAkBvR,EAAOuP,OAAQoB,GACvDrC,EAAUlP,KAAK,EAAKoS,qBAAqBxR,EAAQ+Q,EAAYO,EAAU7N,EAAOzD,SAC9EyD,EAAOoH,WAAa,EAAK4G,0BAA0BhO,EAAOoH,WAAYyG,GAGxE,OAAO7N,QAKb,OAAOmE,QAAQjI,IAAI+Q,GAAKtI,MAAK,SAACqI,GAI5B,OAHIzQ,EAAOqR,wBACTZ,EAAa,IAAElS,OAAOmS,EAAKpC,IAEtB1G,QAAQjI,IAAI8Q,OAIvB,YAAAc,kBAAA,SAAkBhC,EAAaoB,GAC7B,IAAMe,EAAkBC,EACxB,OAAOhB,EAAS9D,SAASvO,KAAKA,KAAK,IAAEsT,KAAKF,GAAY,SAACxW,GAAW,OAAAA,EAAEmB,MAAQkT,EAAV,OAAsBxT,QAG1F,YAAAyV,qBAAA,SAAqBxR,EAAa+Q,EAAiBO,EAAeO,GAChE,IAAIhH,EAAa,IAAElN,IAAIoT,GAAY,SAACpD,GAClC,MAAO,CAAC2D,EAAU3D,EAAOD,cAGvBoE,EAAWpU,KAAKqU,4BAA4B/R,EAAOuP,QAEvD,MAAO,CACLvP,OAAQ6R,EAAc,IAAMC,EAC5BjH,WAAYA,EACZD,MAAO5K,EAAO4K,MACdvO,IAAK2D,EAAOoR,WAAaU,IAI7B,YAAAC,4BAAA,SAA4BxC,GAC1B,IAAMmC,EAAkBC,EACxB,OAAO,IAAEC,KAAKF,GAAY,SAACxW,GAAM,OAAAA,EAAEmB,MAAQkT,EAAV,OAAsB5G,OAGzD,YAAA8I,0BAAA,SAA0B5G,EAAiByG,GACzC,OAAO,IAAE3T,IAAIkN,GAAY,SAACmH,GACxB,OAAIA,EAAU,GACL,CAACA,EAAU,GAAKV,EAAUU,EAAU,IAEtC,CAAC,KAAMA,EAAU,QAI5B,YAAAC,eAAA,WACE,IAAIC,EAAcxU,KAAKyR,UAAUxT,IAAI,eACrC,OAAIuW,IAIJA,EAAc1I,EAAW9L,KAAK+O,eAAgB,kDAAkDrE,MAC9F,SAAC+J,GACC,IAAM1O,EAAS0O,EAAc7T,KAAKX,KAAI,SAACyU,GAAe,MAAC,CACrD/V,IAAK+V,EAAMC,OACX1J,MAAOyJ,EAAMzJ,UAQf,OALAlF,EAAOrE,KAAK,CACV/C,IAAK,eACLsM,MAAO,WAGF,IAAE2J,OAAO7O,EAAQ,YAI5B/F,KAAKyR,UAAUjD,IAAI,cAAegG,GAE3BA,IAGT,YAAAK,oBAAA,SAAoBC,EAAqB5G,GACvC,IAAM6G,EACJ,0BACMtU,mBAAmBqU,EAAME,aAC/B,SAAS9G,EAAWT,KACpB,OAAOS,EAAWH,IACjB/N,KAAK+O,eAAekG,YAAc,GAAK,SAAS/G,EAAWH,IAC9D,OAAOjC,EAAW9L,KAAK+O,eAAgBgG,IAGzC,YAAAnD,qBAAA,SAAqBtP,EAAsB4L,GACzC,IAAMtN,EAAOF,KAAKkS,MAAMtQ,EAAOqP,qBAEzBuD,EAAU,CACdvD,oBAAqB/Q,EAAK+Q,oBAC1BwD,WAAY,CACVC,cAAe,KAEjBC,QAASzU,EAAKyU,QACdjQ,KAAMxE,EAAKwE,KACXgN,QAASxR,EAAKwR,QACdkD,UAAW,CACTvH,GAAIG,EAAWH,GACfC,WAAYE,EAAWF,aAI3B,OAAO3B,EAAYrM,KAAK+O,eAAgB,gDAAiDmG,GAASxK,MAChG,SAACsI,GACC,IAAIjN,EAAc,GAElB,IAAKiN,EAAIpS,KAAKA,MAAQoS,EAAIpS,KAAKgM,OAAOrL,QAAU,EAC9C,MAAM,IAAI4C,MAAM6O,EAAIpS,KAAKgM,OAAO,GAAG2I,SAAWvC,EAAIpS,KAAKgM,OAAO,IAgBhE,OAbAoG,EAAIpS,KAAKA,KAAK4U,MAAM9P,SAAQ,SAAC+P,GAC3B,IAAK,IAAI5D,KAAU4D,EAAOrD,QACxBrM,EAAOrE,KAAK,CACVY,OAAQmT,EAAOC,KAAK9U,EAAKyU,SAAW,MAAQxD,EAC5C1E,WAAYsI,EAAOrD,QAAQP,GACvB4D,EAAOrD,QAAQP,GAAQ5R,KAAI,SAACqU,GAAmB,OAACA,EAAU,GAAIA,EAAf,OAC/C,GACJpH,MAAO5K,EAAO4K,MACdvO,IAAK2D,EAAOoR,gBAKX3N,MAKb,YAAA4P,kBAAA,SAAkBhB,EAAyBiB,GACzC,IAAMjX,EAAMgW,EAAOhW,IAAM,IAAMiX,EAE3BxD,EAAUpS,KAAKwR,aAAavT,IAAIU,GACpC,GAAIyT,EACF,OAAOA,EAGT,IAAM/K,EV7OoB,IU6OXuO,EAAoC,SAAW,UAmB9D,OAlBAxD,EAAUtG,EACR9L,KAAK+O,eACL,kDAAkD4F,EAAOhW,IAAG,WAAW0I,GACvEqD,MAAK,SAACmL,GACN,OAAAA,EAAgBjV,KAAKX,KAAI,SAACyU,GAAe,MAAC,CACxC/V,IAAK+V,EAAMoB,SACX7K,MAAOyJ,EAAMzJ,MACb8K,YAAarB,EAAMoB,SACnBE,aAAc,CACZ,CAAErX,IAAK,OAAQsM,MAAO,QACtB,CAAEtM,IAAK,MAAOsM,MAAO,QAEvBgL,WAAYvB,EAAMwB,gBAItBlW,KAAKwR,aAAahD,IAAI7P,EAAKyT,GAEpBA,GAGT,YAAAJ,wBAAA,SAAwB1P,EAAsB4L,GAA9C,WACQ4G,EAAQ9U,KAAKmW,WAAW7T,GACxB3D,EAAMqB,KAAKoW,sBAAsBtB,EAAO5G,GAE1C+D,EAAYjS,KAAKsR,cAAcrT,IAAIU,GACvC,GAAIsT,EACF,OAAOA,EAGT,IAAMoE,EACJ,4BACMvB,EACN,SAAS5G,EAAWT,KACpB,OAAOS,EAAWH,IACjB/N,KAAK+O,eAAekG,YAAc,GAAK,SAAS/G,EAAWH,GAAE,aAyChE,OAvCAkE,EAAYnG,EAAW9L,KAAK+O,eAAgBsH,GACzC3L,MAAK,SAAC4L,GACL,OAAOpM,QAAQjI,IACbqU,EAAiB1V,KAAKX,KAAI,SAAC,G,IAAEkT,EAAU,aAAE9K,EAAI,OACvCkO,EAAe,EAAKhF,kBAAkBtT,IAAIkV,GAC9C,GAAIoD,EACF,OAAOA,EAGT,IAAMC,EACJ,kBAAkBrD,GACjB,EAAKpE,eAAekG,YACjB,SAAS/G,EAAWT,KAAI,OAAOS,EAAWH,GAC1C,SAASG,EAAWH,IAgB1B,OAdAwI,EAAezK,EAAW,EAAKiD,eAAgByH,GAAkB,GAAM9L,MAAK,SAAC+L,GAE3E,YAAyB9W,IAArB8W,EACK,CACLtD,WAAU,EACV9K,KAAI,EACJ8G,SAAU,EAAKuH,eAAeD,IAI3B,QAGT,EAAKlF,kBAAkB/C,IAAI2E,EAAYoD,EAAc,EAAKlF,6BACnDkF,SAIZ7L,MAAK,SAACyE,GAEL,OAAO,IAAEwH,QAAQxH,MAGrBnP,KAAKsR,cAAc9C,IAAI7P,EAAKsT,GACrBA,GAGT,YAAAkE,WAAA,SAAW7T,GAET,OAAI,GAAGA,EAAO0S,aAAcnI,SAAS,sBAAuB,GAAGvK,EAAO0S,aAAcnI,SAAS,oBACpFpM,mBAAmB,GAAG6B,EAAO0S,aAE7BvU,mBAAsB6B,EAAO0S,YAAW,wBAAwB1S,EAAO2T,WAAWtX,MAI7F,YAAAyX,sBAAA,SAAsBtB,EAAe5G,GACnC,OAAO4G,EV3Uc,IU2UM3G,EAAWD,IAGxC,YAAAwI,eAAA,SAAeD,GAGb,OADAA,EAAiB7V,KAAO,IAAEgW,KAAKH,EAAiB7V,KAAM,CAAC,KAAM,QAAS,SAAU,SACzE6V,GAGT,YAAAnD,eAAA,SAAeC,EAAaC,EAA8BtF,GACxD,OAAIsF,GAAmC,QAApBA,EAAY7U,IACtBqB,KAAK6W,iBAAiBtD,EAAQrF,GAEhCqF,GAGT,YAAAsD,iBAAA,SAAiBtD,EAAarF,GAC5B,IAAM4I,EAAmBC,SAAShG,EAA+B7C,GAAYvP,IAAK,IAAM,IACxF,OAAO,IAAEsB,IAAIsT,GAAQ,SAAClV,GACpB,MAAO,CACLA,MAAOA,EAAMA,MAAQA,EAAMA,MAAQyY,EAAmB,KACtD9G,UAAW3R,EAAM2R,eAKvB,YAAAkD,wBAAA,SAAwBC,EAAoBjF,EAAwBuC,EAAgBoB,GAClF,IAAIzF,EACF,uBAAuByF,EAAOlT,IAC9B,SAASuP,EAAWT,KACpB,OAAOS,EAAWH,GAClB,WAAW0C,EAHX,mCAKe0C,EACjB,OAAOrH,EAAW9L,KAAK+O,eAAgB3C,IAGzC,YAAA4K,cAAA,SAAc3O,GACZ,OAAIA,EACK,cAAgBA,EAAO,KAEzB,IAGT,YAAAoL,WAAA,SAAWgD,EAAuBpO,EAAW/F,EAAsB6E,EAAY0K,GAC7E,GAAIvP,EAAO2U,YAAa,CACtB,IAAIhM,EAAQ3I,EAAO2U,YAgBnB,OAfAhM,EAAQ,IAAEzC,QAAQyC,EAAO,SAAUwL,EAAiB7V,KAAKqK,OACzDA,EAAQ,IAAEzC,QAAQyC,EAAO,UAAWwL,EAAiB7V,KAAK+T,QAC1D1J,EAAQ,IAAEzC,QAAQyC,EAAO,YAAawL,EAAiB7V,KAAKY,IAC5DyJ,EAAQ,IAAEzC,QAAQyC,EAAO,QAAS5C,GAAc,WAChD4C,EAAQ,IAAEzC,QAAQyC,EAAO,OAAQ,IAAEhN,IAAIwY,EAAiB7V,KAAM,CAAC,OAAQ,OAAQ,KAC/EqK,EAAQ,IAAEzC,QAAQyC,EAAO,QAAS,IAAEhN,IAAIwY,EAAiB7V,KAAM,CAAC,OAAQ,QAAS,KACjFqK,EAAQ,IAAEzC,QAAQyC,EAAO,QAAS,IAAEhN,IAAIwY,EAAiB7V,KAAM,CAAC,OAAQ,QAAS,KACjFqK,EAAQ,IAAEzC,QAAQyC,EAAO,WAAY,IAAEhN,IAAIwY,EAAiB7V,KAAM,CAAC,OAAQ,gBAAiB,KAE1FqK,EADE3I,EAAOyP,gBACD,IAAEvJ,QAAQyC,EAAO,UAAW4G,EAAOlT,KAEnC,IAAE6J,QAAQyC,EAAO,UAAW,IAAEhN,IAAIqE,EAAQ,CAAC,SAAU,OAAQ,QAEvE2I,EAAQ,IAAEzC,QAAQyC,EAAO,SAAU9D,EAAQ,GAC3C8D,EAAQ,IAAEzC,QAAQyC,EAAO,aAAc3I,EAAO4U,WAGhD,OAAO5U,EAAO4U,WAAa5U,EAAO6U,iBAC9BV,EAAiB7V,KAAKqK,MAAQjL,KAAKgX,cAAc3O,GAAQ,MAAQ/F,EAAO4U,UACxET,EAAiB7V,KAAKqK,MAAQjL,KAAKgX,cAAc3O,IAEzD,EApYA,G,qOCVA,IAAM+O,EAAa,CACjB,QACA,WACA,gCACA,mBACA,qBACA,yBACA,oBACA,aACA,cCTF,IAAMC,EAA8B,IAAI,EAM1B,SAAUC,EAAW7X,GACjC,IAAI8X,EAAgBF,EAAapZ,IAAI,WACrC,OAAIsZ,EACKrN,QAAQC,QAAQoN,GAGlBzL,EAAWrM,EAAS,wBAAwBiL,MACjD,SAAC3E,GACC,GAAIA,EAAOnF,MAAQmF,EAAOnF,KAAK4W,SAAU,CACvC,IAAMC,EAAeV,SAAShR,EAAOnF,KAAK4W,SAAS/E,MAAM,IAAK,GAAG,GAAI,KAAO,KAI5E,OAHIgF,GACFJ,EAAa7I,IAAI/O,EAAQ2M,IAAKqL,EAAc,KAEvCA,EAET,OAAO,QAET,SAAC5L,GACC,OAAO,QCzBP,SAAU6L,EAAgB9W,EAAW0B,GACzC,IAAMqV,EA6DR,SAA+BrV,GAC7B,GAAIA,EAAOwP,eAAgB,CACzB,GAAIxP,EAAO6P,WAAW5Q,OAAS,EAAG,CAChC,GAAIe,EAAOsV,eAAiBtV,EAAOsV,cAAcrW,OAAS,EAAG,CAC3D,IAAI,EAAQ,GAQZ,OAPA,IAAEmR,KAAKpQ,EAAOsV,eAAe,SAACvQ,EAAQF,GACpC,GAASE,EACLF,IAAU7E,EAAOsV,cAAcrW,OAAS,IAC1C,GAAS,QAGb,EAAQ,EAAQ,KAAOe,EAAOuV,oBAAoB5M,MAAQ,IAG1D,OAAO3I,EAAOuV,oBAAoB5M,MAGpC,OAAO3I,EAAO6P,WAAW,GAAGxT,IAAM,KAAO2D,EAAOuV,oBAAoB5M,MAAQ,IAG9E,OAAO3I,EAAOuP,OAAOlT,IAAM,KAAO2D,EAAOuV,oBAAoB5M,MAAQ,IAjFnD6M,CAAsBxV,GAEtCyV,EAgBN,SAA0BnX,GACxB,IAAImF,EAAc,GAIlB,OAHA,IAAE2M,KAAK9R,GAAM,SAAC8T,GACZ3O,EAAS,IAAElF,OAAOkF,EAAQ2O,EAAMvH,eAE3BpH,EArBkBiS,CADzBpX,EAAO,IAAEyG,OAAOzG,GAAM,SAAClD,GAAM,OAAAA,EAAE4E,SAAF,MAOzB2V,EAkBN,SAAkCC,EAA6BC,GAC7D,IAAIpS,EAAc,GAQlB,OAPA,IAAE2M,KAAKwF,GAAwB,SAACE,EAAepI,GAC7C,IASewD,EAAqB5S,EAThCyX,EAAoB,IAAEpY,IAAImY,GAAe,SAAC9D,GAC5C,OAAOA,EAAU,MAEfgE,GAMgC1X,EANcyX,EAOlB,SADjB7E,EANiB2E,GAOlBI,cACP,IAAEC,IAAI5X,GAC0B,SAA9B4S,EAAY+E,cACd,IAAEE,KAAK7X,GACyB,QAA9B4S,EAAY+E,cACd,IAAEG,IAAI9X,GAC0B,QAA9B4S,EAAY+E,cACd,IAAEI,IAAI/X,GAGNA,GAhBPmF,EAAOrE,KAAK,CAAC4W,EAAiBvB,SAAS/G,EAAW,SAE7CjK,EA3Bc6S,CAJQ,IAAEvD,QAAQ0C,GAAoB,SAAUra,GACnE,OAAOA,EAAE,MAG2D4E,EAAOuV,oBAAoB5M,OAOjG,OAsCF,SAAqBgN,EAAqB/K,EAAe5K,GACvD,MAAO,CACL6K,WAAY8K,EACZ/K,MAAOA,EACP5K,OAAQA,GA1CHuW,CANPZ,EAAiB,IAAErD,OAAOqD,EAAgB,CACxC,SAAU3D,GACR,OAAOA,EAAU,MAIchS,EAAO4K,MAAOyK,GCf7C,SAAUmB,EAAgBzR,GAC9B,IAAI0R,EAAY,CACdpb,KAAM0J,EAAO2R,IAAIra,IACjBsa,SAAU5R,EAAO4R,SAASta,IAC1BN,MAAOgJ,EAAO6R,aAWhB,MARI,WAAa7R,EAAO2R,IAAI5T,KACC,OAAvBiC,EAAO8R,cACTJ,EAAU1a,MAAQgJ,EAAO8R,YAAYpZ,YAE9B,YAAcsH,EAAO2R,IAAI5T,OAClC2T,EAAU1a,MAAQgJ,EAAO+R,aAAarZ,YAGjCgZ,EAGH,SAAUM,EAAgB/W,EAAsB6M,EAAemK,GACnE,OAAKnK,EAASvO,KAKP,IAAE2Y,QACPpK,EAASvO,KAAK4U,MAAMvV,KAAI,SAACC,EAAWiH,GAClC,OAAO,IAAElH,IAAIC,EAAKkS,SAAS,SAAC/T,EAAOM,GACjC,MAAO,CACL2D,OAAQgX,EAAShX,EAAQpC,EAAMvB,EAAKwI,GACpCgG,WAAY,IAAElN,IAAI5B,GAAO,SAACwT,GAAW,OAACA,EAAO,GAAIA,EAAZ,OACrC3E,MAAO5K,EAAO4K,MACdvO,IAAK2D,EAAOoR,mBAXXvE,ECVX,iBAKE,WAAY1P,GACVO,KAAK+O,eAAiBtP,EACtBO,KAAKwZ,cAAgB,IAAI,EACzBxZ,KAAKyZ,UAAY,IAAI,EAkLzB,OA/KE,YAAApK,SAAA,SAAS/M,EAAsB4L,GAA/B,WACE,GACEoC,EAAuBpC,EAAWF,WAAYK,EAAUrO,KAAK+O,eAAe2K,sCAE5E,MAAM,IAAIvV,MACR,6DACEnE,KAAK+O,eAAe2K,oCACpB,UAKN,OACGpX,GACAA,EAAOuP,QACPvP,EAAOuP,OAAOlT,KACd2D,EAAOqX,OACPrX,EAAOqX,MAAMhb,KACb2D,EAAOmT,QACPnT,EAAOmT,OAAO9W,IAKVqB,KAAK4Z,8BAA8BtX,EAAQ4L,GAAYxD,MAAK,SAACyE,GAClE,OAAOkK,EAAgB/W,EAAQ6M,EAAU,EAAK0K,6BAJvC3P,QAAQC,QAAQ8C,EAAgB3K,EAAO4K,SAQlD,YAAA4M,YAAA,SAAY5L,GACV,IAAMvP,EAAMwP,EAAWD,GACnB6L,EAAW/Z,KAAKwZ,cAAcvb,IAAIU,GACtC,OAAIob,IAIJA,EAAWjO,EAAW9L,KAAK+O,eAAgB,kCAAkCrE,MAAK,SAACsP,GACjF,OAAAA,EAAiBpZ,KAAKX,KAAI,SAACga,GAAiB,MAAC,CAC3Ctb,IAAKsb,EAAQtc,KACbsN,MAAOgP,EAAQtc,YAGnBqC,KAAKwZ,cAAchL,IAAI7P,EAAKob,EAAU,KAE/BA,IAGT,YAAAG,eAAA,WACE,IAAIC,EAAcna,KAAKyZ,UAAUxb,IAAI,eACrC,OAAIkc,IAIJA,EAAcrO,EAAW9L,KAAK+O,eAAgB,wCAAwCrE,MAAK,SAAC0P,GAC1F,OAAAA,EAAaxZ,KAAKX,KAAI,SAACyU,GAAe,MAAC,CACrC/V,IAAK+V,EAAM/W,KACXsN,MAAOyJ,EAAM/W,KACbyH,KAAMsP,EAAMtP,YAGhBpF,KAAKyZ,UAAUjL,IAAI,cAAe2L,GAE3BA,IAGT,YAAAE,yBAAA,sBACMC,EAAiBta,KAAKyZ,UAAUxb,IAAI,kBACxC,OAAIqc,IAIJA,EAAiBxO,EAAW9L,KAAK+O,eAAgB,2CAA2CrE,MAC1F,SAACmL,GACC,OAAAA,EAAgBjV,KAAKX,KAAI,SAACyU,GACxB,MAAO,CACL/V,IAAK+V,EAAMoB,SACX7K,MAAOyJ,EAAMzJ,MACb+K,aAActB,EAAMsB,aAAe,EAAKuE,sBAAsB7F,EAAMsB,aAAawE,QAAU,GAC3FC,YAAa/F,EAAM+F,YACf,EAAKC,qBAAqBhG,EAAM+F,aAChC,CAAC,WAAY,eAAgB,cAAe,QAAS,SAAU,qBAI3Eza,KAAKyZ,UAAUjL,IAAI,iBAAkB8L,GAE9BA,IAGT,YAAAI,qBAAA,SAAqBD,GACnB,GAAIA,EAAY5N,SAAS,cAAe,CACtC,IAAI9G,EAAS,IAAED,OAAO2U,GAAa,SAACrV,GAAS,qBAAAA,KAE7C,OADAW,EAAOrE,KAAK,eACLqE,EAGT,OAAO0U,GAGT,YAAAF,sBAAA,SAAsBvE,GACpB,OAAO,IAAE/V,IAAI+V,GAAc,SAAC2E,GAC1B,MAAO,CACLhc,IAAKgc,EACL1P,MAAO0P,OAKL,YAAAf,8BAAR,SAAsCtX,EAAsB4L,GAC1D,IAAMF,EAAaC,EAAcC,GAC3B0M,EAAa,CACjB,CACEjd,KAAM,sBACNsb,SAAU,SACV5a,MAAOiE,EAAOmT,OAAO9W,MAIzB,IAAE+G,QAAQpD,EAAOuY,SAAS,SAACxT,GACrBA,EAAOyT,SACTF,EAAWlZ,KAAKoX,EAAgBzR,OAGpC,IAAMwK,EAAc,CAClBA,OAAQvP,EAAOuP,OAAOlT,IACtB6U,YAAalR,EAAOkR,YAAY7U,IAAM2D,EAAOkR,YAAY7U,IAAM,OAG5D2D,EAAO8Q,eACV9Q,EAAO8Q,aAAe1C,EAA2B1C,IAEnD6D,EAAM,YAAkBvP,EAAO8Q,aAAazU,IAE5C,IAAMgb,EAAa,CACjBoB,WAAYzY,EAAOqX,MAAMhb,KAED,mBAAtB2D,EAAOqX,MAAMvU,MAA6B9C,EAAO0Y,2BACnDrB,EAAK,yBAA+BrX,EAAO0Y,0BAG7C,IAAMpa,EAAwB,CAC5B+Y,MAAOA,EACPrE,UAAW,CACTvH,GAAIG,EAAWH,GACfC,WAAYA,GAEd4M,WAAYA,EACZxV,KAAM9C,EAAO2T,WAAWtX,IACxByT,QAAS,CAACP,IAEZ,OAAOxF,EACLrM,KAAK+O,eACL,oEACAnO,GACA,EACA,IAIJ,YAAAiZ,yBAAA,SAAyBvX,EAAsBpC,EAAWvB,EAAawI,GACrE,GAAI7E,EAAO2U,YAAa,CACtB,IAAIhM,EAAQ3I,EAAO2U,YAQnB,OAPAhM,EAAQ,IAAEzC,QAAQyC,EAAO,SAAU/K,EAAKvC,MACxCsN,EAAQ,IAAEzC,QAAQyC,EAAO,WAAY3I,EAAOmT,OAAOxK,OACnDA,EAAQ,IAAEzC,QAAQyC,EAAO,QAAS3I,EAAO2T,WAAWhL,OACpDA,EAAQ,IAAEzC,QAAQyC,EAAO,UAAW3I,EAAOuP,OAAO5G,OAClDA,EAAQ,IAAEzC,QAAQyC,EAAO,OAAQtM,GACjCsM,EAAQ,IAAEzC,QAAQyC,EAAO,SAAU,GAAK9D,EAAQ,GAChD8D,EAAQ,IAAEzC,QAAQyC,EAAO,aAAc3I,EAAO4U,WAGhD,OAAO5U,EAAO4U,WAAa5U,EAAO6U,iBAC9BjX,EAAKvC,KAAO,KAAO2E,EAAOmT,OAAOxK,MAAjC/K,OAAuDvB,EAAM,MAAQ2D,EAAO4U,UAC5EhX,EAAKvC,KAAO,KAAO2E,EAAOmT,OAAOxK,MAAjC/K,OAAuDvB,GAE/D,EA1LA,GCde,GACb,CAAEA,IAAK,QAASsM,MAAO,aAAc8K,YAAa,QAASC,aAAc,CAAC,CAAErX,IAAK,MAAOsM,MAAO,SAC/F,CACEtM,IAAK,UACLsM,MAAO,eACP8K,YAAa,UACbC,aAAc,CACZ,CAAErX,IAAK,MAAOsM,MAAO,OACrB,CAAEtM,IAAK,OAAQsM,MAAO,QACtB,CAAEtM,IAAK,MAAOsM,MAAO,OACrB,CAAEtM,IAAK,MAAOsM,MAAO,OACrB,CAAEtM,IAAK,MAAOsM,MAAO,OACrB,CAAEtM,IAAK,MAAOsM,MAAO,OACrB,CAAEtM,IAAK,MAAOsM,MAAO,OACrB,CAAEtM,IAAK,MAAOsM,MAAO,OACrB,CAAEtM,IAAK,MAAOsM,MAAO,OACrB,CAAEtM,IAAK,MAAOsM,MAAO,SAGzB,CAAEtM,IAAK,SAAUsM,MAAO,aAAc8K,YAAa,SAAUC,aAAc,CAAC,CAAErX,IAAK,OAAQsM,MAAO,UAClG,CACEtM,IAAK,WACLsM,MAAO,gBACP8K,YAAa,WACbC,aAAc,CAAC,CAAErX,IAAK,iBAAkBsM,MAAO,qBCRnD,aAKE,WAAYxL,GACVO,KAAK+O,eAAiBtP,EACtBO,KAAKib,kBAAoB,IAAI,EAC7Bjb,KAAKyZ,UAAY,IAAI,EAsSzB,OAnSE,YAAApK,SAAA,SAAS/M,EAAsB4L,GAA/B,WAEE,GAAIoC,EAAuBpC,EAAWF,WAAYK,EAAUrO,KAAK+O,eAAemM,gCAC9E,MAAM,IAAI/W,MACR,6DACEnE,KAAK+O,eAAemM,8BACpB,UAKN,OAAK5Y,GAAWA,EAAOuP,QAAWvP,EAAOuP,OAAOlT,KAAQ2D,EAAOqX,OAAUrX,EAAOqX,MAAMhb,IAI/EqB,KAAKmb,kCAAkC7Y,EAAQ4L,GAAYxD,MAAK,SAACyE,GAEtE,OADA7M,EAAO8Y,8BAAgCjM,EAASvO,KAAKya,YAC9ChC,EAAgB/W,EAAQ6M,EAAU,EAAKmM,iCALvCpR,QAAQC,QAAQ8C,EAAgB3K,EAAO4K,SASlD,YAAAqO,gBAAA,SAAgBrN,GACd,IAAMvP,EAAMwP,EAAWD,GAEnBsN,EAAexb,KAAKib,kBAAkBhd,IAAIU,GAC9C,GAAI6c,EACF,OAAOA,EAGT,IAAMxN,EAAaC,EAAcC,GA2BjC,OAvBAsN,EAAexb,KAAKyb,qBAAqB,GAAIzN,EAAYE,EAAWH,GAHzD,EACI,IjBzDa,IiB2D8ErD,MACxG,SAACyE,GACC,IAAI4D,EAAa,IAAE2I,YACjB,IAAEzb,IAAIkP,GAAU,SAACwM,GACf,OAAOA,EAAQnG,UAInB,OAAO,IAAEoG,QACP,IAAEjF,QAAQ5D,GAAY9S,KAAI,SAACyU,GACzB,MAAO,CACL/V,IAAK+V,EAAMlT,GACXyJ,MAAOyJ,EAAMzJ,MACb4Q,cAAenH,EAAMmH,kBAGzB,CAAC,SAACC,GAAgB,OAAAA,EAAY7Q,MAAZ,gBAClB,CAAC,WAKPjL,KAAKib,kBAAkBzM,IAAI7P,EAAK6c,EAAc,KACvCA,GAGT,YAAAC,qBAAA,SACEM,EACA/N,EACAD,EACAiO,EACAC,EACAC,GANF,WAQE,GAAIF,EAAOE,EACT,OAAOH,EAGT,IAAII,EAAkB,cAAgBnO,EAAa,OAASD,EAAK,SAAWiO,EAAO,aAAeC,EAElG,OAAOnQ,EAAW9L,KAAK+O,eAAgB,4CAA8CoN,GAAiBzR,MACpG,SAACyE,GAEC,OADA4M,EAAQra,KAAKyN,EAASvO,MAClBob,EAAOC,EAAW9M,EAASvO,KAAKwb,WAClCJ,IACO,EAAKP,qBAAqBM,EAAS/N,EAAYD,EAAIiO,EAAMC,EAAUC,IAEnEH,MAMf,YAAAM,mBAAA,SAAmBnO,GAAnB,WACMoO,EAAkBtc,KAAKyZ,UAAUxb,IAAI,mBACzC,OAAIqe,GAIGhF,EAAWtX,KAAK+O,gBAAgBrE,MAAK,SAAC6R,GAY3C,OAVED,EADEC,GAAW,IACK,EAAKC,WAAWtO,GAAYxD,MAAK,SAAC+R,GAClD,SAAKC,mBAAmBD,EAAQ7b,KAAK8U,SAGrB,EAAKiH,mCAAmCjS,MAAK,SAAC0P,GAC9D,SAAKsC,mBAAmBtC,EAAaxZ,SAIzC,EAAK6Y,UAAUjL,IAAI,kBAAmB8N,GAC/BA,MAIX,YAAAE,WAAA,SAAWtO,GACT,IAAMnC,EAAW,+EAAiFmC,EAAWT,KAC7G,OAAO3B,EAAW9L,KAAK+O,eAAgBhD,IAGzC,YAAA4Q,iCAAA,WACE,OAAO7Q,EAAW9L,KAAK+O,eAAgB,6CAGzC,YAAA2N,mBAAA,SAAmBD,GACjB,OAAOA,EAAQxc,KAAI,SAACyU,GAAe,MAAC,CAClC/V,IAAK+V,EAAM/W,KACXsN,MAAOyJ,EAAM/W,KACbyH,KAAMsP,EAAMtP,KACZwX,iBAAkBlI,EAAMkI,iBACxBC,sBAAuBnI,EAAMmI,2BAIjC,YAAAC,6BAAA,WACE,OAAO,GAGT,YAAA3B,kCAAA,SAAkC7Y,EAAsB4L,GAAxD,WACQF,EAAaC,EAAcC,GAC7B0M,EAAoB,GAExB,OAAO1Q,QAAQC,QAAQnK,KAAKqc,mBAAmBnO,IAAaxD,MAAK,SAAC4R,GAC5Dha,EAAOmT,OAAO9W,KAChBic,EAAWlZ,KAAK,CACd/D,KAAM,mBACNsb,SAAU,SACV5a,MAAOiE,EAAOmT,OAAOxK,MACrBwK,OAAQnT,EAAOya,wBAA0Bza,EAAOya,wBAA0B,gBAI9E,IAAErX,QAAQpD,EAAOuY,SAAS,SAACxT,GACzB,GAAIA,EAAOyT,QAAS,CAClB,IAAI/B,EAAiBD,EAAgBzR,GAC/B,EAAM,IAAE6M,KAAKoI,EAAiB,CAAC,MAAOjV,EAAO2R,IAAIra,OACnD,EAAIke,uBAAyB,EAAID,oBACnC7D,EAAS,OAAa,EAAKiE,aAAa3V,EAAOoO,OAAQ,IAEzDmF,EAAWlZ,KAAKqX,OAIpB,IAAMlH,EAAc,CAClBA,OAAQvP,EAAOuP,OAAOlT,IACtB6U,YAAalR,EAAOkR,aAAelR,EAAOkR,YAAY7U,IAAM2D,EAAOkR,YAAY7U,IAAM,OAGlF2D,EAAO8Q,eACV9Q,EAAO8Q,aAAe1C,EAA2B1C,IAEnD6D,EAAM,YAAkBvP,EAAO8Q,aAAazU,IAE5C,IAAMgb,EAAa,CACjBoB,WAAYzY,EAAOqX,MAAMhb,KAErBqa,EAAW,IAAE9E,KAAKoI,EAAiB,CAAC,MAAOha,EAAOqX,MAAMhb,OAC1Dqa,EAAI6D,uBAAyB7D,EAAI4D,oBACnCjD,EAAK,iBAAuBrX,EAAO2a,cAEX,mBAAtB3a,EAAOqX,MAAMvU,MAA6B9C,EAAO0Y,2BACnDrB,EAAK,yBAA+BrX,EAAO0Y,0BAG7C,IAAMpa,EAAY,CAChB+Y,MAAOA,EACPrE,UAAW,CACTvH,GAAIG,EAAWH,GACfC,WAAYA,GAEdoE,QAAS,CAACP,GACVF,oBAAqB,CACnBvM,KAAM,aACN8X,gBAAiB,MACjBC,SAAUvC,IAId,OAAOvO,EACL,EAAK0C,eACL,sEACAnO,GACA,EACA,OAKN,YAAAoc,aAAA,SAAaI,EAAwBpE,GACnC,MAAuB,gBAAnBoE,GAAoCpE,EAAI6D,sBACnC,cAEc,WAAnBO,GAA+BpE,EAAI4D,iBAC9B,SAEF5D,EAAI6D,sBAAwB,cAAgB,UAGrD,YAAAQ,wBAAA,SAAwB/a,EAAsB4L,GAE5C,IAAK5L,IAAWA,EAAOuP,SAAWvP,EAAOuP,OAAOlT,IAC9C,OAAOuL,QAAQC,QAAQ8C,EAAgB3K,EAAO4K,QAGhD,IAAMc,EAAaC,EAAcC,GAC3B2D,EAAc,CAClBA,OAAQvP,EAAOuP,OAAOlT,IACtB6U,YAAalR,EAAOkR,aAAelR,EAAOkR,YAAY7U,IAAM2D,EAAOkR,YAAY7U,IAAM,OAGlF2D,EAAO8Q,eACV9Q,EAAO8Q,aAAe1C,EAA2B1C,IAEnD6D,EAAM,YAAkBvP,EAAO8Q,aAAazU,IAE5C,IAAMiC,EAAY,CAChB0U,UAAW,CACTvH,GAAIG,EAAWH,GACfC,WAAYA,GAEdoE,QAAS,CAACP,IAQZ,OAL0B,OAAtBvP,EAAOmT,OAAO9W,MAChBiC,EAAI,cAAoB0B,EAAOmT,OAAO9W,IACtCiC,EAAI,yBAA+B0B,EAAOgb,0BAGrCjR,EACLrM,KAAK+O,eACL,uEACAnO,IAIJ,YAAA0a,6BAAA,SAA6BhZ,EAAsBpC,EAAWvB,EAAawI,GACzE,GAAI7E,EAAO2U,YAAa,CACtB,IAAIhM,EAAQ3I,EAAO2U,YAOnB,OANAhM,EAAQ,IAAEzC,QAAQyC,EAAO,SAAU/K,EAAKvC,MACxCsN,EAAQ,IAAEzC,QAAQyC,EAAO,eAAgB3I,EAAOmT,OAAOxK,OACvDA,EAAQ,IAAEzC,QAAQyC,EAAO,UAAW3I,EAAOuP,OAAO5G,OAClDA,EAAQ,IAAEzC,QAAQyC,EAAO,OAAQtM,GACjCsM,EAAQ,IAAEzC,QAAQyC,EAAO,SAAU,GAAK9D,EAAQ,GAChD8D,EAAQ,IAAEzC,QAAQyC,EAAO,aAAc3I,EAAO4U,WAIhD,OAAI5U,EAAOmT,OAAOxK,QAAUoC,EACnB/K,EAAO4U,UAAYhX,EAAKvC,KAAO,MAAQgB,EAAM,MAAQ2D,EAAO4U,UAAYhX,EAAKvC,KAAO,MAAQgB,EAG9F2D,EAAO4U,WAAa5U,EAAO6U,iBAC9BjX,EAAKvC,KAAO,KAAO2E,EAAOmT,OAAOxK,MAAjC/K,OAAuDvB,EAAM,MAAQ2D,EAAO4U,UAC5EhX,EAAKvC,KAAO,KAAO2E,EAAOmT,OAAOxK,MAAjC/K,OAAuDvB,GAG7D,YAAA4e,4BAAA,SAA4Bjb,EAAsBpC,EAAWvB,EAAawI,GACxE,GAAI7E,EAAO2U,YAAa,CACtB,IAAIhM,EAAQ3I,EAAO2U,YAOnB,OANAhM,EAAQ,IAAEzC,QAAQyC,EAAO,SAAU/K,EAAK4b,YAAY7Q,OACpDA,EAAQ,IAAEzC,QAAQyC,EAAO,eAAgB3I,EAAOmT,OAAOxK,OACvDA,EAAQ,IAAEzC,QAAQyC,EAAO,UAAW3I,EAAOuP,OAAO5G,OAClDA,EAAQ,IAAEzC,QAAQyC,EAAO,OAAQtM,GACjCsM,EAAQ,IAAEzC,QAAQyC,EAAO,SAAU,GAAK9D,EAAQ,GAChD8D,EAAQ,IAAEzC,QAAQyC,EAAO,aAAc3I,EAAO4U,WAIhD,OAAI5U,EAAOmT,OAAOxK,QAAUoC,EACnB/K,EAAO4U,UACVhX,EAAK4b,YAAY7Q,MAAQ,MAAQtM,EAAM,MAAQ2D,EAAO4U,UACtDhX,EAAK4b,YAAY7Q,MAAQ,MAAQtM,EAGhC2D,EAAO4U,WAAa5U,EAAO6U,iBAC9BjX,EAAK4b,YAAY7Q,MAAQ,KAAO3I,EAAOmT,OAAOxK,MAA9C/K,OAAoEvB,EAAM,MAAQ2D,EAAO4U,UACzFhX,EAAK4b,YAAY7Q,MAAQ,KAAO3I,EAAOmT,OAAOxK,MAA9C/K,OAAoEvB,GAE5E,EA9SA,GCJA,aAIE,WAAYc,GACVO,KAAK+O,eAAiBtP,EACtBO,KAAKwd,cAAgB,IAAI,EA8J7B,OA3JE,YAAAC,yBAAA,SAAyBnb,EAAsB4L,GAC7C,IAAIwP,EAAgB,GAChBpb,EAAOmT,QAAUnT,EAAOmT,OAAO9W,MACjC+e,EAAgBpb,EAAOmT,OAAO9W,KAGhC,IAAMA,EAAMwP,EAAWD,GAAcwP,EAAgBpb,EAAOgb,yBACxDK,EAAW3d,KAAKwd,cAAcvf,IAAIU,GACtC,GAAIgf,EACF,OAAOA,EAGT,IAAM3P,EAAaC,EAAcC,GAiCjC,OA7BAyP,EAAW3d,KAAK4d,iBACd,GACAF,EACA1P,EACAE,EAAWH,GACXzL,EAAOgb,yBARE,EACI,IlBlCa,IkB6C1B5S,MAAK,SAACyE,GACN,IAAI4D,EAAa,IAAE2I,YACjB,IAAEzb,IAAIkP,GAAU,SAACwM,GACf,OAAOA,EAAQnG,UAInB,OAAO,IAAEoG,QACP,IAAEjF,QAAQ5D,GAAY9S,KAAI,SAACyU,GACzB,MAAO,CACL/V,IAAK+V,EAAMlT,GACXyJ,MAAOyJ,EAAMzJ,UAGjB,CAAC,SAAC4S,GAAY,OAAAA,EAAQ5S,MAAR,gBACd,CAAC,WAILjL,KAAKwd,cAAchP,IAAI7P,EAAKgf,EAAU,KAC/BA,GAGT,YAAAC,iBAAA,SACE7B,EACA2B,EACA1P,EACAD,EACAuP,EACAtB,EACAC,EACAC,GARF,WAUE,GAAIF,EAAOE,EACT,OAAOH,EAGT,IAAII,EAAkB,cAAgBnO,EAAa,OAASD,EAAK,SAAWiO,EAAO,aAAeC,EACjE,QAA7BqB,GAAmE,YAA7BA,IACxCnB,GAAmB,6BAA+BmB,GAGpD,IAAIlR,EACF,gDACCsR,GAAgC,IACjC,aACAvB,EAEF,OAAOrQ,EAAW9L,KAAK+O,eAAgB3C,GAAK1B,MAAK,SAACyE,GAEhD,OADA4M,EAAQra,KAAKyN,EAASvO,MAClBob,EAAOC,EAAW9M,EAASvO,KAAKwb,WAClCJ,IACO,EAAK4B,iBACV7B,EACA2B,EACA1P,EACAD,EACAuP,EACAtB,EACAC,EACAC,IAGKH,MAKb,YAAA+B,oBAAA,SAAoBxb,EAAsB4L,GAExC,IAAK5L,IAAWA,EAAOuP,SAAWvP,EAAOuP,OAAOlT,IAC9C,OAAOuL,QAAQC,QAAQ8C,EAAgB3K,EAAO4K,QAGhD,IAAMc,EAAaC,EAAcC,GAE5B5L,EAAO8Q,eACV9Q,EAAO8Q,aAAe1C,EAA2B1C,IAGnD,IAAM6D,EAAS,CACbA,OAAQvP,EAAOuP,OAAOlT,IACtB6U,YAAalR,EAAOkR,aAAelR,EAAOkR,YAAY7U,IAAM2D,EAAOkR,YAAY7U,IAAM,MACrF0R,YAAa/N,EAAO8Q,aAAazU,KAG7BiC,EAAY,CAChB0U,UAAW,CACTvH,GAAIG,EAAWH,GACfC,WAAYA,GAEdoE,QAAS,CAACP,IAaZ,OAVIvP,EAAOmT,QAAUnT,EAAOmT,OAAO9W,MACjCiC,EAAI,cAAoB0B,EAAOmT,OAAO9W,IAEtCiC,EAAI,yBAA+B0B,EAAOgb,0BAGxChb,EAAOub,SAAWvb,EAAOub,QAAQlf,MACnCiC,EAAI,UAAgB0B,EAAOub,QAAQlf,KAG9B0N,EAAYrM,KAAK+O,eAAgB,mEAAoEnO,IAG9G,YAAAmd,wBAAA,SAAwBzb,EAAsBpC,EAAWvB,EAAawI,GACpE,GAAI7E,EAAO2U,YAAa,CACtB,IAAIhM,EAAQ3I,EAAO2U,YAQnB,OAPAhM,EAAQ,IAAEzC,QAAQyC,EAAO,SAAU/K,EAAK2d,QAAQ5S,OAChDA,EAAQ,IAAEzC,QAAQyC,EAAO,WAAY3I,EAAOub,QAAQ5S,OACpDA,EAAQ,IAAEzC,QAAQyC,EAAO,eAAgB3I,EAAOmT,OAAOxK,OACvDA,EAAQ,IAAEzC,QAAQyC,EAAO,UAAW3I,EAAOuP,OAAO5G,OAClDA,EAAQ,IAAEzC,QAAQyC,EAAO,OAAQtM,GACjCsM,EAAQ,IAAEzC,QAAQyC,EAAO,SAAU9D,EAAQ,EAAI,IAC/C8D,EAAQ,IAAEzC,QAAQyC,EAAO,aAAc3I,EAAO4U,WAIhD,OAA2B,OAAvB5U,EAAOub,QAAQlf,IACV2D,EAAO4U,UACVhX,EAAK2d,QAAQ5S,MAAQ,MAAQtM,EAAM,MAAQ2D,EAAO4U,UAClDhX,EAAK2d,QAAQ5S,MAAQ,MAAQtM,EAG5B2D,EAAO4U,WAAa5U,EAAO6U,iBAC9BjX,EAAK2d,QAAQ5S,MAAQ,KAAO3I,EAAOub,QAAQ5S,MAA3C/K,OAAiEvB,EAAM,MAAQ2D,EAAO4U,UACtFhX,EAAK2d,QAAQ5S,MAAQ,KAAO3I,EAAOub,QAAQ5S,MAA3C/K,OAAiEvB,GAEzE,EApKA,GCAA,aAIE,WAAYc,GACVO,KAAK+O,eAAiBtP,EACtBO,KAAKge,eAAiB,IAAI,EAyK9B,OAtKE,YAAAC,sBAAA,SAAsB3b,EAAsB4L,GAC1C,IAAIwP,EAAgB,GAChBpb,EAAOmT,QAAUnT,EAAOmT,OAAO9W,MACjC+e,EAAgBpb,EAAOmT,OAAO9W,KAGhC,IAAIuf,EAAY,GACZ5b,EAAOub,UACTK,EAAY5b,EAAOub,QAAQlf,KAG7B,IAAMA,EAAMwP,EAAWD,GAAcwP,EAAgBQ,EAAY5b,EAAOgb,yBACpEa,EAAYne,KAAKge,eAAe/f,IAAIU,GACxC,GAAIwf,EACF,OAAOA,EAGT,IAAMnQ,EAAaC,EAAcC,GAkCjC,OA9BAiQ,EAAYne,KAAKoe,kBACf,GACAV,EACAQ,EACAlQ,EACA1L,EAAOgb,yBACPpP,EAAWH,GATF,EACI,InBvCa,ImBmD1BrD,MAAK,SAACyE,GACN,IAAI4D,EAAa,IAAE2I,YACjB,IAAEzb,IAAIkP,GAAU,SAACwM,GACf,OAAOA,EAAQnG,UAInB,OAAO,IAAEoG,QACP,IAAEjF,QAAQ5D,GAAY9S,KAAI,SAACyU,GACzB,MAAO,CACL/V,IAAK+V,EAAMlT,GACXyJ,MAAOyJ,EAAMzJ,UAGjB,CAAC,SAACc,GAAa,OAAAA,EAASd,MAAT,gBACf,CAAC,WAILjL,KAAKge,eAAexP,IAAI7P,EAAKwf,EAAW,KACjCA,GAGT,YAAAC,kBAAA,SACErC,EACA2B,EACAQ,EACAlQ,EACAsP,EACAvP,EACAiO,EACAC,EACAC,GATF,WAWE,GAAIF,EAAOE,EACT,OAAOH,EAGT,IAAII,EAAkB,cAAgBnO,EAAa,OAASD,EAAK,SAAWiO,EAAO,aAAeC,EACjE,QAA7BqB,GAAmE,YAA7BA,IACxCnB,GAAmB,6BAA+BmB,GAGpD,IAAIlR,EACF,gDACCsR,GAAgC,IACjC,iBACCQ,GAAwB,IACzB,cACA/B,EAEF,OAAOrQ,EAAW9L,KAAK+O,eAAgB3C,GAAK1B,MAAK,SAACyE,GAEhD,OADA4M,EAAQra,KAAKyN,EAASvO,MAClBob,EAAOC,EAAW9M,EAASvO,KAAKwb,WAClCJ,IACO,EAAKoC,kBACVrC,EACA2B,EACAQ,EACAlQ,EACAsP,EACAvP,EACAiO,EACAC,EACAC,IAGKH,MAKb,YAAAsC,qBAAA,SAAqB/b,EAAsB4L,GAEzC,IAAK5L,IAAWA,EAAOuP,SAAWvP,EAAOuP,OAAOlT,IAC9C,OAAOuL,QAAQC,QAAQ8C,EAAgB3K,EAAO4K,QAGhD,IAAMc,EAAaC,EAAcC,GAC3B2D,EAAc,CAClBA,OAAQvP,EAAOuP,OAAOlT,IACtB6U,YAAalR,EAAOkR,aAAelR,EAAOkR,YAAY7U,IAAM2D,EAAOkR,YAAY7U,IAAM,OAGlF2D,EAAO8Q,eACV9Q,EAAO8Q,aAAe1C,EAA2B1C,IAEnD6D,EAAM,YAAkBvP,EAAO8Q,aAAazU,IAE5C,IAAMiC,EAAY,CAChB0d,WAAYhc,EAAOyJ,SAASpN,IAC5B2W,UAAW,CACTvH,GAAIG,EAAWH,GACfC,WAAYA,GAEdoE,QAAS,CAACP,IAaZ,OAVIvP,EAAOmT,QAAUnT,EAAOmT,OAAO9W,MACjCiC,EAAI,cAAoB0B,EAAOmT,OAAO9W,IAEtCiC,EAAI,yBAA+B0B,EAAOgb,0BAGxChb,EAAOub,SAAWvb,EAAOub,QAAQlf,MACnCiC,EAAI,UAAgB0B,EAAOub,QAAQlf,KAG9B0N,EAAYrM,KAAK+O,eAAgB,oEAAqEnO,IAG/G,YAAA2d,yBAAA,SAAyBjc,EAAsBpC,EAAWvB,EAAawI,GACrE,GAAI7E,EAAO2U,YAAa,CACtB,IAAIhM,EAAQ3I,EAAO2U,YASnB,OARAhM,EAAQ,IAAEzC,QAAQyC,EAAO,SAAU/K,EAAK6L,SAASd,OACjDA,EAAQ,IAAEzC,QAAQyC,EAAO,YAAa3I,EAAOyJ,SAASd,OACtDA,EAAQ,IAAEzC,QAAQyC,EAAO,WAAY3I,EAAOub,QAAQ5S,OACpDA,EAAQ,IAAEzC,QAAQyC,EAAO,eAAgB3I,EAAOmT,OAAOxK,OACvDA,EAAQ,IAAEzC,QAAQyC,EAAO,UAAW3I,EAAOuP,OAAO5G,OAClDA,EAAQ,IAAEzC,QAAQyC,EAAO,OAAQtM,GACjCsM,EAAQ,IAAEzC,QAAQyC,EAAO,SAAU,GAAK9D,EAAQ,GAChD8D,EAAQ,IAAEzC,QAAQyC,EAAO,aAAc3I,EAAO4U,WAIhD,OAAI5U,EAAOyJ,SAASd,QAAUqC,EACrBhL,EAAO4U,UACVhX,EAAK6L,SAASd,MAAQ,MAAQtM,EAAM,MAAQ2D,EAAO4U,UACnDhX,EAAK6L,SAASd,MAAQ,MAAQtM,EAG7B2D,EAAO4U,WAAa5U,EAAO6U,iBAC9BjX,EAAK6L,SAASd,MAAQ,KAAO3I,EAAOyJ,SAASd,MAA7C/K,OAAmEvB,EAAM,MAAQ2D,EAAO4U,UACxFhX,EAAK6L,SAASd,MAAQ,KAAO3I,EAAOyJ,SAASd,MAA7C/K,OAAmEvB,GAE3E,EA/KA,GCRc,WAAW2D,GAEnBA,EAAO2T,YAA2C,iBAAtB3T,EAAO2T,aACrC3T,EAAO2T,WAAa,CAAEtX,IAAK2D,EAAO2T,WAAYhL,MAAO3I,EAAO2T,aAI1D3T,EAAO+E,QAA4B,KAAlB/E,EAAO+E,SACrB/E,EAAOsV,gBACVtV,EAAOsV,cAAgB,GACvBtV,EAAOsV,cAAclW,KAAK,CAAErD,MAAOiE,EAAO+E,WAK1C/E,EAAO8Q,eACL9Q,EAAO8Q,aAAa/U,MACtBiE,EAAO8Q,aAAe,CAAEzU,IAAK2D,EAAO8Q,aAAa/U,MAAO4M,MAAO3I,EAAO8Q,aAAanI,OAC1E3I,EAAO8Q,aAAa3C,SAC7BnO,EAAO8Q,aAAe,CAAEzU,IAAK2D,EAAO8Q,aAAa3C,OAAQxF,MAAO3I,EAAO8Q,aAAanI,SAK1D,MAA1B3I,EAAOsT,iBAETtT,EAAOsT,eAAiB,IACxBtT,EAAOub,QAAU,GACjBvb,EAAOub,QAAQlf,IAAM2D,EAAOmT,OAAO9W,IACnC2D,EAAOub,QAAQ5S,MAAQ3I,EAAOmT,OAAOxK,MACjC3I,EAAOkc,qBAAuBlc,EAAOkc,oBAAoB7f,KAC3D2D,EAAOmT,OAAO9W,IAAM2D,EAAOkc,oBAAoB7f,IAC/C2D,EAAOmT,OAAOxK,MAAQ3I,EAAOkc,oBAAoBvT,QAEjD3I,EAAOmT,OAAO9W,IAAM,KACpB2D,EAAOmT,OAAOxK,MAAQ,SAKI,MAA1B3I,EAAOsT,iBAETtT,EAAOsT,eAAiB,IACxBtT,EAAOyJ,SAAW,GAClBzJ,EAAOyJ,SAASpN,IAAM2D,EAAOmT,OAAO9W,IAChC2D,EAAOkc,qBAAuBlc,EAAOkc,oBAAoB7f,KAC3D2D,EAAOmT,OAAO9W,IAAM2D,EAAOkc,oBAAoB7f,IAC/C2D,EAAOmT,OAAOxK,MAAQ3I,EAAOkc,oBAAoBvT,QAEjD3I,EAAOmT,OAAO9W,IAAM,KACpB2D,EAAOmT,OAAOxK,MAAQ,SAKtB3I,EAAOkR,aAA6C,iBAAvBlR,EAAOkR,cACtClR,EAAOkR,YACFlR,EAAOkR,YAAc,CAAE7U,IAAK2D,EAAOkR,YAAavI,MAAO3I,EAAOkR,aAC9DlR,EAAOkR,YAAc,GAC1BlR,EAAOuV,oBACFvV,EAAOuV,oBAAsB,CAC5BlZ,IAAK2D,EAAOuV,oBAAoB5M,MAChCA,MAAO3I,EAAOuV,oBAAoB5M,OAEnC3I,EAAOuV,oBAAsB,IAEhCvV,EAAOsV,eAAiBtV,EAAOsV,cAAcrW,OAAS,GAAKe,EAAOsV,cAAc,GAAGvZ,QACrFiE,EAAOsV,cAAgB,IAAE3X,IAAIqC,EAAOsV,eAAe,SAAC6G,GAAO,OAAAA,EAAA,UAEzDnc,EAAOuY,SAAWvY,EAAOuY,QAAQtZ,OAAS,IAAMe,EAAOuY,QAAQ,GAAG7B,IAAIra,MAAQ2D,EAAOuY,QAAQ,GAAG7B,IAAI/N,OACtG,IAAEvF,QAAQpD,EAAOuY,SAAS,SAACxT,GACzBA,EAAO2R,IAAI/N,MAAQ5D,EAAO2R,IAAIra,OAG9B2D,EAAOqX,OAASrX,EAAOqX,MAAMhb,MAAQ2D,EAAOqX,MAAM1O,QACpD3I,EAAOqX,MAAM1O,MAAQ3I,EAAOqX,MAAMhb,KAEhC2D,EAAOsT,gBAAmD,iBAA1BtT,EAAOsT,iBACzCtT,EAAOsT,eAAiB,IAAE1B,KACxBwK,GACA,SAACC,GAAa,OAAAA,EAAShgB,MAAQoY,SAASzU,EAAOsT,eAAjC,QAKdtT,EAAO2a,cAAgB3a,EAAO2a,aAAate,MAC7C2D,EAAO2a,aAAe3a,EAAO2a,aAAate,KAExC2D,EAAOya,yBAA2Bza,EAAOya,wBAAwBpe,MACnE2D,EAAOya,wBAA0Bza,EAAOya,wBAAwBpe,KAE9D2D,EAAOuY,SAAWvY,EAAOuY,QAAQtZ,OAAS,GAC5Ce,EAAOuY,QAAQnV,SAAQ,SAAC2B,GAClBA,EAAOoO,QAAUpO,EAAOoO,OAAO9W,MACjC0I,EAAOoO,OAASpO,EAAOoO,OAAO9W,SCtDtC,cAcE,WAAYigB,GAAZ,MACE,YAAMA,IAAiB,K,OACvB,EAAKnf,QAAUmf,EAAiBC,SAChC,EAAKpf,QAAQ2M,IvBWX,SAAqBwS,GACzB,OAAIA,EAAiBC,SAAStS,SACrBqS,EAAiBxS,IAAM,WAEvBwS,EAAiBC,SAASzS,IuBfd0S,CAAWF,GAC9B,EAAKG,uBAAyB,GAC9B,EAAKC,iBAAmB,GACxB,EAAKC,uBAAyB,GAC9B,EAAKC,cAAgB,IAAI,EAAcN,EAAiBC,UACxD,EAAKM,yBAA2B,IAAI,EAAyBP,EAAiBC,UAC9E,EAAKO,kBAAoB,IAAI,EAAkBR,EAAiBC,UAChE,EAAKQ,sBAAwB,IAAI,EAAsBT,EAAiBC,UACxE,EAAKS,kBAAoB,IAAI,EAAkBV,EAAiBC,UAChE,EAAKU,mBAAqB,IAAI,EAAmBX,EAAiBC,UAClE,EAAKW,YAAc,IAAI,E,EAgW3B,OA3XgC,EAAAC,EAAA,GA8BxB,YAAA3K,MAAN,SAAYrV,G,qBAA0CyK,SAAO,W,wCAM3D,OALQwV,EAAUjgB,EAAL,MACbO,KAAKkO,WAAaX,EAASmS,GAC3B1f,KAAKgf,iBAAmBhO,EAAmBhR,KAAKkO,YAChDlO,KAAK+e,uBAAyBpO,EAAyB3Q,KAAKkO,WAAWF,YAEvE,GAAO9D,QAAQjI,IACbxC,EAAQkgB,QAAQ1f,KAAI,SAACqC,GACnB,IVlE2BsD,EAC7Bga,EUiEMC,EAAmBtS,EAASmS,GAGhC,GAAIpd,EAAOwd,KACT,MAAO,CAAElf,KAAM,GAAI0B,OAAQA,GAe7B,GAXA,EAAQA,GAEHA,EAAOsT,iBACVtT,EAAOsT,eAAiB,EAAiB,IAG3C,EAAKmK,yBAAyBzd,GACzB,EAAK2c,uBAAuB/K,MAAK,SAAC9W,GAAM,OAAAA,EAAEuB,MAAQ2D,EAAO8Q,aAAjB,SAC3C9Q,EAAO8Q,aAAe,EAAK4M,uBAAuB1d,IAGhDA,EAAO4U,UAAW,CACpB,IAAI+I,EAAS,EAAKC,yBAAyB5d,EAAO4U,WAC9C+I,EAAS,IACXJ,EAAmB,EAAKM,2BAA2BN,EAAkBI,IAIzE3d,EAAO4L,WAAa2R,EACpBvd,EAAOoR,YV7FoB9N,EU6FYtD,EV5FzCsd,EAAa,IAAEQ,KAAKxa,EAAKwR,GAC7BwI,EAAa,IAAES,UAAUT,GAAY,SAACvhB,GAMpC,OAJa,MAATA,GAAkC,WAAjB,EAAOA,IAAsB,QAASA,IACzDA,EAAQA,EAAMM,KAGTN,KAEFqC,KAAKC,UAAUif,IUoFhBC,EAAmB,EAAKS,yBAAyBT,EAAkBvd,GACnE,IAAMqc,EAAWrc,EAAOsT,eAAejX,IAEvC,OrBnGuB,IqBmGnBggB,EACK,EAAKO,cAAc7P,SAAS/M,EAAQud,GAAkBnV,MAAK,SAAC9J,GACjE,OAAO,EAAK2f,kCAAkCje,EAAQud,EAAkBjf,MrBpG9C,IqBsGnB+d,EACF,EAAKQ,yBAAyB9P,SAAS/M,EAAQud,GAAkBnV,MAAK,SAAC9J,GAC5E,OAAO,EAAK4f,YAAYle,EAAQ1B,MrBjHZ,IqBmHb+d,GrBlHW,IqBkHsBA,EACnC,EAAKQ,yBAAyB9P,SAAS/M,EAAQud,GAAkBnV,MAAK,SAAC9J,GAC5E,OAAO,EAAK2f,kCAAkCje,EAAQud,EAAkBjf,MrBlH7C,IqBoHpB+d,EACF,EAAKS,kBAAkB/P,SAAS/M,EAAQud,GAAkBnV,MAAK,SAAC9J,GACrE,OAAO,EAAK2f,kCAAkCje,EAAQud,EAAkBjf,MrBvHzC,IqByHxB+d,EACF,EAAKU,sBAAsBhQ,SAAS/M,EAAQud,GAAkBnV,MAAK,SAAC9J,GACzE,OAAO,EAAK2f,kCAAkCje,EAAQud,EAAkBjf,MrBzHhC,IqB2HjC+d,EACF,EAAK8B,qCAAqCne,EAAQud,GAAkBnV,MAAK,SAAC9J,GAC/E,OAAO,EAAK2f,kCAAkCje,EAAQud,EAAkBjf,MAIrEsJ,QAAQC,QAAQ8C,EAAgB3K,EAAO4K,YAEhDxC,MAAK,SAACgW,GACN,IAAI3a,EAAc,GAUlB,OATA,IAAE2M,KAAKgO,GAAY,SAACC,GAElB,IAAIC,EAAkB,IAAEjK,QAAQ,IAAE4C,QAAQoH,EAAc/f,OACxD,EAAKigB,uBAAuB,IAAEC,UAAUF,GAAaD,EAAcre,QACnE,EAAKye,0BAA0BH,EAAYD,EAAcre,QACzDse,EAAa,EAAKI,yBAAyBJ,EAAYD,EAAcre,QACrEyD,EAAOrE,KAAKkf,MAGP,CAAEhgB,KAAM,IAAE2Y,QAAQxT,eAI7B,YAAA0a,qCAAA,SAAqCne,EAAsB4L,GAA3D,WAEE,GAAIoC,EAAuBpC,EAAWF,WAAYK,EAAUrO,KAAKP,QAAQwhB,kCACvE,MAAM,IAAI9c,MACR,6DACEnE,KAAKP,QAAQwhB,gCACb,UAIN,OAAI3e,EAAOyJ,UAAYzJ,EAAOyJ,SAASpN,IAC9BqB,KAAKuf,mBAAmBlB,qBAAqB/b,EAAQ4L,GAAYxD,MAAK,SAACyE,GAC5E,OAAOkK,EAAgB/W,EAAQ6M,EAAU,EAAKoQ,mBAAmBhB,6BAE1Djc,EAAOub,SAAWvb,EAAOub,QAAQlf,IACnCqB,KAAKsf,kBAAkBxB,oBAAoBxb,EAAQ4L,GAAYxD,MAAK,SAACyE,GAC1E,OAAOkK,EAAgB/W,EAAQ6M,EAAU,EAAKmQ,kBAAkBvB,4BAEzDzb,EAAOmT,QAAUnT,EAAOmT,OAAO9W,IACjCqB,KAAKqf,sBAAsBhC,wBAAwB/a,EAAQ4L,GAAYxD,MAAK,SAACyE,GAIlF,OAHIA,EAASvO,OACX0B,EAAO8Y,8BAAgCjM,EAASvO,KAAKya,aAEhDhC,EAAgB/W,EAAQ6M,EAAU,EAAKkQ,sBAAsB9B,gCAIjErT,QAAQC,QAAQ,CAAEvJ,KAAM,CAAE4U,MAAO,OAG1C,YAAAuL,0BAAA,SAA0BngB,EAAW0B,GAArC,WACE,GAAIA,EAAO4U,UAAW,CACpB,IAAI,EAASlX,KAAKkgB,yBAAyB5d,EAAO4U,WAC9C,EAAS,GACXtW,EAAK8E,SAAQ,SAAC9E,GACZ,EAAKsgB,qBAAqBtgB,EAAM,QAMxC,YAAAigB,uBAAA,SAAuB9a,EAAazD,GAClC,GAAItC,KAAKmhB,sBAAsB7e,IAAWtC,KAAKohB,UAAUrb,GAAS,CAChE,IAAIsb,EAAY,CACdnT,WAAY5L,EAAO4L,WACnB6N,QAAShW,GAEX/F,KAAKwf,YAAYhR,IAAIlM,EAAOoR,WAAY2N,EAAW,OAIvD,YAAAF,sBAAA,SAAsB7e,GAAtB,WACE,GAAIA,EAAOsT,iBrBlMgB,IqBmMrBtT,EAAOsT,eAAejX,KrBlMM,IqBkMqB2D,EAAOsT,eAAejX,KACzE,OAAO,EAIX,IAAI4d,EAAUvc,KAAKwf,YAAYvhB,IAAI,WACnC,OAAKse,EAOEA,GAAW,IANTjF,EAAWtX,KAAKP,SAASiL,MAAK,SAAC6R,GAEpC,OADA,EAAKiD,YAAYhR,IAAI,UAAW+N,EAAS,KAClCA,GAAW,QAOxB,YAAA6E,UAAA,SAAUrb,GACR,OAAOA,GAAUA,EAAOxE,OAAS,GAGnC,YAAA2f,qBAAA,SAAqBtgB,EAAW0gB,GAC9B1gB,EAAKuM,WAAWzH,SAAQ,SAAC4O,GACvBA,EAAU,GAAKA,EAAU,GAAKgN,MAIlC,YAAAN,yBAAA,SAAyBpgB,EAAW0B,GAClC,IAAIif,EAAU,GAEd,GAAIjf,EAAOkf,gBAAiB,CAC1B,IAAM,EAAiB9J,EAAgB9W,EAAM0B,GAS7C,OARAif,EAAQ7f,KAAK,GACRY,EAAOmf,oBACV,IAAE/O,KAAK9R,GAAM,SAAC8gB,GACRA,EAAGpf,SAAW,EAAeA,QAC/Bif,EAAQ7f,KAAKggB,MAIZH,EAGT,OAAO3gB,GAGT,YAAA4f,YAAA,SAAYle,EAAsB1B,GAChC,MAAO,CACL0B,OAAQA,EACR1B,KAAMA,IAIV,YAAA2f,kCAAA,SAAkCje,EAAsB4L,EAAwBtN,GAS9E,OARIsN,EAAWT,OAASnL,EAAO4L,WAAWT,MAAQ7M,IAChDA,EAAOZ,KAAK2hB,aAAa/gB,EAAM0B,IAE1BoD,SAAQ,SAACpH,GACZA,EAAE6O,WAAa7O,EAAE6O,WAAW9F,QAAO,SAAC3J,GAAW,OAAAA,EAAE,IAAM4E,EAAO4L,WAAf,WAI5ClO,KAAKwgB,YAAYle,EAAQ1B,IAGlC,YAAA+gB,aAAA,SAAa/gB,EAAW0B,GACtB,IVrMuBsf,EAAmBC,EUqMtCC,EAAe9hB,KAAKwf,YAAYvhB,IAAIqE,EAAOoR,YAI/C,OAHIoO,GAAgBA,EAAa/F,UVtMV6F,EUuMHhhB,EVvMsBihB,EUuMhBC,EAAa/F,QVtMzC,IAAErJ,KAAKkP,GAAc,SAACG,GACpB,IAAIC,EAA0B,IAAEC,UAC9BJ,GACA,SAAChkB,GAAW,OAAAA,EAAEc,MAAQojB,EAAUpjB,KAAOd,EAAEyE,SAAWyf,EAAxC,UAEd,GAAIF,EAAWG,IAA4BD,EAAU5U,WAAY,CAE/D,IAAIA,EAAa4U,EAAU5U,WAAWtM,OAAOghB,EAAWG,GAAyB7U,YACjFA,EAAa,IAAE+U,aACb/U,EAAWqN,MAAK,SAACG,EAAQ1R,GAAW,OAAA0R,EAAE,GAAK1R,EAAP,OACpC,SAAC0R,GAAW,OAAAA,EAAA,MAEdkH,EAAWG,GAAyB7U,WAAa,IAAEgV,UAAUhV,EAAY,KACzE0U,EAAWG,GAAyB1f,OAASyf,EAAUzf,YAEvDuf,EAAWngB,KAAKqgB,MUuLhBnhB,EVnLGihB,GUqLEjhB,GAGT,YAAA0f,yBAAA,SAAyBpS,EAAwB5L,GAC/C,IVtN4B8f,EAAgBC,EUsNxCP,EAAe9hB,KAAKwf,YAAYvhB,IAAIqE,EAAOoR,YAC/C,GAAIoO,IVvNwBM,EUuNQlU,EVvNQmU,EUuNIP,EAAa5T,WVtNxDkU,EAAG3U,KAAO4U,EAAGtU,IAAMqU,EAAG3U,MAAQ4U,EAAG5U,MAAQ2U,EAAGrU,IAAMsU,EAAGtU,IUsNgB,CACxE,IAAIuU,EVxLJ,SAAmCrS,EAAasS,EAAqBnP,GAEzE,GAAyB,MAArBA,EAAazU,IACf,OAAO4jB,EAMT,IAAMhhB,EAAS0O,EAAO,GAAG9C,WAAW5L,OACpC,GAAIA,EAAS,EACX,OAAOghB,EAGT,IAAMC,EAAcjhB,EAAS,EAC7B,OAAO0O,EAAO,GAAG9C,WAAWqV,GAAa,GUyKvBC,CAAyBX,EAAa/F,QAAS+F,EAAa5T,WAAWT,KAAMnL,EAAO8Q,cAC9FsP,EAA4C,IAApChV,KAAKC,MAAMO,EAAWH,GAAK,KACvC,MAAO,CACLN,KAAM6U,EACNvU,GAAI2U,EACJ1U,WAAY0U,EAAQJ,GAGxB,OAAOpU,GAGT,YAAAyU,cAAA,WACE,OAAO3iB,KAAKkf,cAAcjQ,qBAG5B,YAAAsF,eAAA,WACE,OAAOvU,KAAKmf,yBAAyB5K,kBAGvC,YAAAqO,kBAAA,WACE,OAAO5iB,KAAKqf,sBAAsB9D,gBAAgBvb,KAAK6iB,kBAGzD,YAAAC,qBAAA,WACE,OAAO9iB,KAAKqf,sBAAsBhD,mBAAmBrc,KAAK6iB,kBAG5D,YAAAE,cAAA,SAAczgB,GACZ,OAAOtC,KAAKsf,kBAAkB7B,yBAAyBnb,EAAQtC,KAAK6iB,kBAGtE,YAAAG,eAAA,SAAe1gB,GACb,OAAOtC,KAAKuf,mBAAmBtB,sBAAsB3b,EAAQtC,KAAK6iB,kBAGpE,YAAAhO,oBAAA,SAAoBC,GAClB,OAAO9U,KAAKmf,yBAAyBtK,oBAAoBC,EAAO9U,KAAK6iB,kBAGvE,YAAAI,cAAA,WACE,OAAOjjB,KAAKof,kBAAkBtF,YAAY9Z,KAAK6iB,kBAGjD,YAAA7C,uBAAA,SAAuBlL,GACrB,IAAM6J,EAAW7J,EAAMc,eAAejX,IACtC,OrBnU4B,IqBmUxBggB,GrBlUsB,IqBkUWA,GrB1TH,IqB0TkCA,EAC3D5N,EAA+B/Q,KAAK6iB,iBAEpCnS,EAA2B1Q,KAAK6iB,gBAAgB7U,aAI3D,YAAAkS,yBAAA,SAAyBhJ,GACvB,IAAKA,EACH,OAAO,EAGT,IACE,OAAOlX,KAAKkjB,eAAehM,GAC3B,MAAOpU,GACP,OAAO,IAIX,YAAAogB,eAAA,SAAehM,GAGb,OAAIA,EAAUiM,SAAS,KAFJ,IAGVpM,SAASG,EAAUzE,MAAM,KAAK,GAAI,IAChCyE,EAAUiM,SAAS,KACmB,GAAxCpM,SAASG,EAAUzE,MAAM,KAAK,GAAI,IALxB,IAMRyE,EAAUiM,SAAS,KACmB,GAAxCpM,SAASG,EAAUzE,MAAM,KAAK,GAAI,IAAW,GAPnC,IAQRyE,EAAUiM,SAAS,KACmB,GAAxCpM,SAASG,EAAUzE,MAAM,KAAK,GAAI,IAAW,GAAK,GATxC,IAURyE,EAAUiM,SAAS,KACmB,GAAxCpM,SAASG,EAAUzE,MAAM,KAAK,GAAI,IAAW,GAAK,GAAK,EAX7C,IAaZ,GAGT,YAAA0N,2BAAA,SAA2BjS,EAAwBgJ,GACjD,MAAO,CACLzJ,KAAMS,EAAWT,KAAOyJ,EACxBnJ,GAAIG,EAAWH,GAAKmJ,EACpBlJ,WAAYE,EAAWF,aAI3B,YAAA+R,yBAAA,SAAyBzd,GACvB,IAAMqc,EAAWrc,EAAOsT,eAAejX,IAErCqB,KAAKif,uBrBlXqB,IqBiXxBN,GrBhXsB,IqBgXWA,GrBxWH,IqBwWkCA,EACpC3e,KAAKgf,iBAELhf,KAAK+e,wBAIvC,YAAA8D,cAAA,WACE,IAAK7iB,KAAKkO,aAAelO,KAAKkO,WAAWT,KAAM,CAC7C,IAAMmB,EAAsC,IAAhClB,KAAKC,MAAMC,KAAKgB,MAAQ,KAEpC5O,KAAKkO,WAAa,CAChBT,KAAMmB,EAFW,MAGjBb,GAAIa,EACJZ,WAJiB,OAQrB,OAAOhO,KAAKkO,YAGd,YAAAkV,eAAA,WACE,OAAOtX,EAAW9L,KAAKP,QAAS,wBAAwBiL,MACtD,WACE,MAAO,CACLiC,OAAQ,UACR4I,QAAS,6CACT8N,MAAO,cAGX,SAACxX,GACC,OAAqB,MAAjBA,EAAMc,OACD,CACLA,OAAQ,QACR4I,QAAS,6CACT8N,MAAO,UAGTtW,QAAQC,IAAInB,GACL,CACLc,OAAQ,QACR4I,QAAS,UAAY1J,EAAMc,OAAS,oCAAsCd,EAAMyX,WAChFD,MAAO,cAMnB,EA3XA,CAAgC,iB,wBCzCjB,cACb,IAAM9G,EAAU,IAAEte,IAAI8D,OAAQ,CAAC,kBAAmB,WAAY,YAAa,WAAY,SACjFwhB,EAAW,IAAE9Q,MAAM8J,EAAS,IAAK,GAAGtc,KAAI,SAACsL,GAC7C,OAAOwL,SAASxL,EAAG,OAErB,OAAOgR,EAAQ,IAAM,GAAMgH,EAAS,IAAM,GAAKA,EAAS,IAAM,GCShE,I,KAAA,YACE,WAAYC,GAAZ,MACE,YAAMA,IAAM,KAcd,EAAAC,uBAAyB,SAACC,EAA4D/kB,G,MAC9E,EAA+B,EAAK6kB,MAAlC/jB,EAAO,UAAEkkB,EAAe,kBAC1B9E,EAAW,EAAH,KACTpf,EAAQof,YAAQ,MAClBlgB,GAAM+kB,EAAUE,cAAcvlB,MAAK,IAGtCslB,EAAgB,EAAD,KAAMlkB,GAAO,CAAEof,SAAQ,KAElC,QAAUlgB,GAAO,aAAeA,GAClC,EAAKklB,wBAAwBpkB,IAIjC,EAAAqkB,eAAiB,SAACJ,EAAoD/kB,G,MAC9D,EAA+B,EAAK6kB,MAAlC/jB,EAAO,UAAEkkB,EAAe,kBAC5BtlB,GAAQ,EAERqlB,GAAaA,EAAUE,gBACzBvlB,GAASoB,EAAQof,SAASlgB,IAG5B,IAAMkgB,EAAW,EAAH,KACTpf,EAAQof,YAAQ,MAClBlgB,GAAMN,EAAK,IAGdslB,EAAgB,EAAD,KAAMlkB,GAAO,CAAEof,SAAQ,MAGxC,EAAAgF,wBAA0B,SAACE,GACzB,IAAEC,UAAS,WAAM,SAAKC,eAAL,KAA+B,MAMlD,EAAAA,eAAiB,SAACF,GACXA,IACHA,EAAW,EAAKP,MAAM/jB,SAGnBskB,EAASviB,KAId,EAAK0iB,SAAS,CAAEC,YAAa,OAC7B7M,EAAWyM,EAASlF,UAAUnU,MAAK,SAAC6R,GAClCA,EACI,EAAK2H,SAAS,CAAEE,yBAA0B7H,GAAW,MACrD,EAAK2H,SAAS,CAAEE,0BAA0B,SA/DhD,EAAKC,MAAQ,CAAED,0BAA0B,EAAOD,aAAa,GAG7D,EAAKF,iBAEG,IACApF,EADY,EAAK2E,MAAV,QACC,S,YAEU7jB,IAAtBkf,EAAStS,WACXsS,EAAStS,SAAW,M,EA+L1B,OA3MkC,OAsEhC,YAAA+X,OAAA,sBAEUzF,EADY7e,KAAKwjB,MAAV,QACC,SAEhB,OACE,yBAAKe,UAAU,YACb,kBAAC,UAAM,8BAEP,kBAAC,SAAK,CACJA,UAAW,WACXC,YAAU,EACVC,UAAQ,EACRxZ,MAAM,MACN8K,YAAY,yCAEZ,kBAAC,SAAK,CACJjS,IAAK,GACL4gB,MAAO,GACPrmB,MAAOwgB,EAASzS,IAChBuY,YAAa,gCACbC,SAAU,SAACC,GAAU,SAAKpB,uBAAuBoB,EAA5B,WAIzB,kBAAC,SAAK,CACJN,UAAW,WACXC,YAAU,EACVC,UAAQ,EACRxZ,MAAM,YACN8K,YAAY,qCAEZ,kBAAC,SAAK,CACJ3Q,KAAK,WACLtB,IAAK,GACL4gB,MAAO,GACPrmB,MAAOwgB,EAASpS,SAChBqY,OACE,kBAAC,WAAO,CACNtlB,QACE,2B,2DAEE,uBAAGmH,KAAK,uDAAqD,wDAKjEoe,MAAO,QAEP,kBAAC,QAAI,CAACpnB,KAAK,iBAGfinB,SAAU,SAACC,GAAU,SAAKpB,uBAAuBoB,EAA5B,gBAIzB,kBAAC,YAAQ,CACP/gB,IAAK,GACLmH,MAAO,YACP5M,MAAOwgB,EAAStS,SAChBqY,SAAU,SAACC,GAAU,SAAKf,eAAee,EAApB,aACrB9O,YAAa,kFAGf,kBAAC,YAAQ,CACPjS,IAAK,GACLmH,MAAO,2BACP5M,MAAOwgB,EAAS5J,YAChB2P,SAAU,SAACC,GAAU,SAAKf,eAAee,EAApB,gBACrB9O,YAAa,iGAGf,kBAAC,YAAQ,CACPjS,IAAK,GACLmH,MAAO,yCACP5M,MAAOwgB,EAASmG,kBAChBJ,SAAU,SAACC,GAAU,SAAKf,eAAee,EAApB,sBACrB9O,YACE,oRAMJ,6BACA,6BACA,+DACA,uBAAGwO,UAAW,YAAU,mJAKxB,kBAAC,SAAK,CAACA,UAAW,WAAYC,YAAU,EAACvZ,MAAM,0BAC7C,kBAAC,SAAK,CACJnH,IAAK,GACL4gB,MAAO,GACPrmB,MAAOwgB,EAASnN,0BAChBiT,YAAa,oCACbC,SAAU,SAACC,GAAU,SAAKpB,uBAAuBoB,EAA5B,iCAIzB,kBAAC,SAAK,CAACN,UAAW,WAAYC,YAAU,EAACvZ,MAAM,uBAC7C,kBAAC,SAAK,CACJnH,IAAK,GACL4gB,MAAO,GACPrmB,MAAOwgB,EAASoC,gCAChB0D,YAAa,oCACbC,SAAU,SAACC,GAAU,SAAKpB,uBAAuBoB,EAA5B,uCAIzB,kBAAC,SAAK,CAACN,UAAW,WAAYC,YAAU,EAACvZ,MAAM,6BAC7C,kBAAC,SAAK,CACJnH,IAAK,GACL4gB,MAAO,GACPrmB,MAAOwgB,EAAS3D,8BAChByJ,YAAa,oCACbC,SAAU,SAACC,GAAU,SAAKpB,uBAAuBoB,EAA5B,qCAIzB,kBAAC,SAAK,CAACN,UAAW,WAAYC,YAAU,EAACvZ,MAAM,mBAC7C,kBAAC,SAAK,CACJnH,IAAK,GACL4gB,MAAO,GACPrmB,MAAOwgB,EAASnF,oCAChBiL,YAAa,oCACbC,SAAU,SAACC,GAAU,SAAKpB,uBAAuBoB,EAA5B,6CAMjC,EA3MA,CAAkC,kB,MCTpB,SAAUI,GAAYzB,GAClC,IAAMvf,EAAa,CAAEihB,QAAS,QAW9B,OATI1B,EAAM2B,WACRlhB,EAAMmhB,QAAU,MAChBnhB,EAAMohB,cAAgB,QAGpB7B,EAAM8B,UACRrhB,EAAMygB,MAAQ,QAGT,yBAAKzgB,MAAOA,GAAQuf,EAAM+B,UCf3B,IAAAC,GAAW,eAAL,O,GAkBd,YACE,WAAYhC,G,OACV,YAAMA,IAAM,KAehB,OAjBwC,OAKtC,YAAAc,OAAA,WACE,IAAM,EAAwFtkB,KAAKwjB,MAA3FvY,EAAK,QAAEwa,EAAO,UAAEC,EAAY,eAAEP,EAAQ,WAAE,IAAAQ,kBAAU,IAAG,KAAE,EAAEtnB,EAAK,QAAKunB,EAAc,IAAnF,oEAEN,OACE,kBAACX,GAAW,CAACE,SAAUA,EAAUG,SAAS,GACxC,kBAAC,mBAAe,CAACf,UAAWmB,EAAe,gBAAkB,GAAIhB,MAAOiB,EAAYF,QAASA,GAC1Fxa,GAEH,kBAACua,GAAM,GAACK,QAASxnB,EAAO4M,MAAO,IAAQ2a,MAI/C,EAjBA,CAAwC,IAAME,WCP9C,eACE,WAAYtC,GAAZ,MACE,YAAMA,IAAM,K,OAGd,EAAAuC,kBAAoB,IAAE/B,SAAS,EAAKR,MAAMwC,WAAY,KAEtD,EAAAC,2BAA6B,SAACpB,GACtB,MAAuC,EAAKrB,MAA1C1O,EAAK,QAAE8P,EAAQ,WAAEsB,EAAe,kBACpCrB,GAASA,EAAMjB,gBACjB9O,EAAMqR,mBAAqBtB,EAAMjB,cAAciC,QAC3C/Q,EAAMqR,oBACRD,GAAgB,GAChBpR,EAAMjD,OAAS,IAEfqU,GAAgB,GAElBtB,EAAS9P,KAIb,EAAAsR,wBAA0B,SAAC1C,GACnB,MAAsB,EAAKF,MAAzB1O,EAAK,QAAE8P,EAAQ,WACvB9P,EAAM/C,gBAAkB2R,EAAUE,cAAcvlB,MAChDumB,EAAS9P,GAGT,EAAKiR,qB,EA+BT,OA1DqC,OA8BnC,YAAAzB,OAAA,WACU,IAAAxP,EAAU9U,KAAKwjB,MAAV,MAEb,OACE,yBAAKe,UAAW,WACd,kBAAC,GAAU,CACTmB,cAAY,EACZza,MAAO,2BACPwa,QACE,yMAIFpnB,MAAOyW,EAAMqR,mBACbvB,SAAU5kB,KAAKimB,2BACfd,UAAU,IAEZ,kBAAC,SAAK,CACJrhB,IAAK,GACL4gB,MAAO,EACPS,UAAWrQ,EAAMqR,mBACjB9nB,MAAOyW,EAAM/C,gBACb4S,YAAa,qCACbC,SAAU5kB,KAAKomB,4BAKzB,EA1DA,CAAqC,IAAMN,WChB5B,IACb,CACE7a,MAAO,OAET,CACEA,MAAO,QAET,CACEA,MAAO,OAET,CACEA,MAAO,QCKX,eACE,WAAYuY,GAAZ,MACE,YAAMA,IAAM,KAQd,EAAA6C,kBAAoB,SAACxB,GACb,MAAwB,EAAKrB,MAA3B1O,EAAK,QAAEkR,EAAU,aACrBnB,GAASA,EAAMjB,gBACjB9O,EAAM0M,gBAAkBqD,EAAMjB,cAAciC,QAC5CG,MAIJ,EAAAM,oBAAsB,SAACzB,GACf,MAAwB,EAAKrB,MAA3B1O,EAAK,QAAEkR,EAAU,aACrBnB,GAASA,EAAMjB,gBACjB9O,EAAM2M,mBAAqBoD,EAAMjB,cAAciC,QAC/CG,MAIJ,EAAAO,4BAA8B,SAAC1B,GACvB,MAAwB,EAAKrB,MAA3B1O,EAAK,QAAEkR,EAAU,aACzBlR,EAAM+C,oBAAsBgN,EAC5BmB,KA1BA,EAAK3B,MAAQ,CAAEmC,wBAAwB,EAAOC,aAAc,IACpD,IAAA3R,EAAU,EAAK0O,MAAV,M,OACR1O,EAAM+C,sBACT/C,EAAM+C,oBAAsB,GAAqB,I,EA6DvD,OAnEoC,OAgClC,YAAAyM,OAAA,WACU,IAAAxP,EAAU9U,KAAKwjB,MAAV,MAEb,OACE,yBAAKe,UAAW,WACd,kBAAC,GAAU,CACTmB,cAAY,EACZza,MAAO,yBACPwa,QAAS,mCACTpnB,MAAOyW,EAAM0M,gBACboD,SAAU5kB,KAAKqmB,oBAGjB,kBAAC,UAAM,CACLK,cAAe,SACfhC,MAAO,GACPiC,cAAc,EACdlnB,QAAS,GACTpB,MAAOyW,EAAM+C,oBACbsN,UAAWrQ,EAAM0M,gBACjBoD,SAAU5kB,KAAKumB,8BAGjB,kBAAC,GAAU,CACTb,cAAY,EACZP,UAAWrQ,EAAM0M,gBACjBmE,WAAY,GACZ1a,MAAO,uBACPwa,QAAS,2FACTpnB,MAAOyW,EAAM2M,mBACbmD,SAAU5kB,KAAKsmB,wBAKzB,EAnEA,CAAoC,IAAMR,W,GCQ1C,YACE,WAAYtC,G,OACV,YAAMA,IAAM,KAehB,OAjBuC,OAKrC,YAAAc,OAAA,WACE,IAAM,EAAkGtkB,KAAKwjB,MAArGvY,EAAK,QAAEwa,EAAO,UAAEC,EAAY,eAAEP,EAAQ,WAAE,IAAAQ,kBAAU,IAAG,KAAE,EAAE,IAAAiB,kBAAU,IAAG,KAAE,EAAKhB,EAAc,IAA7F,yEAEN,OACE,kBAACX,GAAW,CAACE,SAAUA,EAAUG,SAAUsB,GACzC,kBAAC,mBAAe,CAACrC,UAAWmB,EAAe,gBAAkB,GAAIhB,MAAOiB,EAAYF,QAASA,GAC1Fxa,GAEH,kBAAC,SAAK,GAACnH,IAAK,GAAI4gB,MAAOkC,EAAYzB,SAAUA,GAAcS,MAInE,EAjBA,CAAuC,IAAME,WCdvCe,GAA2B,CAC/B,yBACA,yBACA,+BACA,2BACA,+BACA,GACA,GACA,IAGIC,GAAuB,CAC3B,6B,kCAEE,4BACE,uDACA,4DACA,0DACA,sEACA,4DACA,qDACA,0DACA,2DACA,8DAGJ,6B,kCAEE,4BACE,uDACA,4DACA,0DACA,sEACA,4DACA,qDACA,0DACA,2DACA,8DAGJ,6B,wCAEE,4BACE,uDACA,kEACA,sEACA,4DACA,+EACA,8DAGJ,6B,oCAEE,4BACE,uDACA,8DACA,qDACA,sEACA,4DACA,+EACA,8DAGJ,6B,wCAEE,4BACE,uDACA,kEACA,0DACA,4DACA,sEACA,4DACA,+EACA,8DAGJ,GACA,GACA,I,GAcF,YACE,WAAYtD,GAAZ,MACE,YAAMA,IAAM,K,OAMd,EAAAuC,kBAAoB,IAAE/B,SAAS,EAAKR,MAAMwC,WAAY,KAEtD,EAAAe,qBAAuB,SAACrD,GAChB,MAAsB,EAAKF,MAAzB1O,EAAK,QAAE8P,EAAQ,WACvB9P,EAAMmC,YAAcyM,EAAUE,cAAcvlB,MAC5CumB,EAAS9P,GAGT,EAAKiR,qBAGP,EAAAiB,kBAAoB,SAACtD,GACb,MAAsB,EAAKF,MAAzB1O,EAAK,QAAE8P,EAAQ,WACvB9P,EAAMoC,UAAYwM,EAAUE,cAAcvlB,MAEtCyW,EAAMoC,UACRpC,EAAMqC,mBAAmBrC,EAAMoC,UAAU+P,MAAM,qBAE/CnS,EAAMqC,kBAAmB,EAG3ByN,EAAS9P,GAELA,EAAMqC,kBAER,EAAK4O,qBAcT,EAAAmB,6BAA+B,SAACrC,GAC9B,GAAIA,GAASA,EAAMjB,cAAe,CAC1B,MAAsB,EAAKJ,MAAzB1O,EAAK,QAAE8P,EAAQ,WACvB9P,EAAMqS,qBAAuBtC,EAAMjB,cAAciC,QACjDjB,EAAS9P,KAhDX,EAAKuP,MAAQ,CACX+C,wBAAyB,EAAKC,8B,EA+GpC,OAnH8C,OAqC5C,YAAAA,2BAAA,WACU,IAAAvS,EAAU9U,KAAKwjB,MAAV,MACb,OAAOqD,GAAyB/R,EAAMc,eAAejX,MAGvD,YAAA2oB,uBAAA,WACU,IAAAxS,EAAU9U,KAAKwjB,MAAV,MACb,OAAOsD,GAAqBhS,EAAMc,eAAejX,MAWnD,YAAA2lB,OAAA,sBACQ,EAAmDtkB,KAAKwjB,MAAtD1O,EAAK,QAAEkR,EAAU,aAAEpB,EAAQ,WAAEsB,EAAe,kBAC9CvH,EAAW7J,EAAMc,eAAejX,IAEtC,OACE,6BACE,yBAAK4lB,UAAW,WACd,kBAAC,GAAU,CACTtZ,MAAO,yBACPwa,QAAS,+BACTpnB,MAAOyW,EAAMqS,qBACbvC,SAAU,SAAC9hB,GAAM,SAAKokB,6BAAL,OAIrB,yBAAKK,QAASzS,EAAMqS,sBAClB,yBAAK5C,UAAW,UAAWgD,O9B/JN,I8B+Jc5I,G9B9JP,I8B8JuCA,GACjE,kBAAC,GAAS,CACR+G,cAAY,EACZkB,WAAY,EACZ3b,MAAO,gBACPwa,QAASzlB,KAAKsnB,yBACdjpB,MAAOyW,EAAMmC,YACb0N,YAAa3kB,KAAKqnB,6BAClBzC,SAAU,SAACC,GAAU,SAAKkC,qBAAL,OAIzB,yBAAKxC,UAAW,WACd,kBAAC,GAAS,CACRmB,cAAY,EACZkB,WAAY,EACZ3b,MAAO,aACPwa,QACE,0JAGFpnB,MAAOyW,EAAMoC,UACbsQ,SAAU1S,EAAMqC,iBAChBwN,YAAa,KACbC,SAAU,SAACC,GAAU,SAAKmC,kBAAL,OAIzB,yBAAKO,O9BlMe,I8BkMP5I,GACX,kBAAC,GAAe,CACd7J,MAAOA,EACPkR,WAAYA,EACZpB,SAAUA,EACVsB,gBAAiBA,KAIrB,yBAAKqB,O9B5MiB,I8B4MT5I,G9B3MO,I8B2M0BA,GAC5C,kBAAC,GAAc,CAAC7J,MAAOA,EAAOkR,WAAYA,EAAYpB,SAAUA,QAM5E,EAnHA,CAA8C,IAAMkB,WCtGrC,IAAC,cAAe,UCMzB2B,GAAW,CACfC,SAAU,WACVC,WAAY,cACZjD,MAAO,OACPkD,OAAQ,OACRC,YAAa,OAGTC,GAAiB,CACrBC,WAAY,0BACZC,UAAW,EACXC,SAAU,SACVC,OAAQ,EACRR,SAAU,SAGNS,GAAyB,CAC7BF,SAAU,SACVC,OAAQ,EACRR,SAAU,QACVM,UAAW,SACX5C,QAAS,GAGLgD,GAAoB,CACxBlD,QAAS,eAGLmD,GAAY,CAChBnD,QAAS,OACToD,WAAY,SACZC,eAAgB,UAGZC,GAAgB,CACpBC,QAAS,OAKLC,GACJ,yBAAKzkB,MAAOokB,GAAWT,OAHR,GAG0BlD,MAH1B,IAIb,0BACEhlB,UAAU,kBACVipB,KAAK,UACLjrB,EAAE,sOAKFkrB,GACJ,yBAAK3kB,MAAOokB,GAAWT,OAbR,GAa0BlD,MAb1B,IAcb,0BACEhlB,UAAU,kBACVipB,KAAK,UACLjrB,EAAE,+NAUM,SAAUmrB,GAAOrF,GAC7B,IAEMsF,EAAuB,CAC3BnB,WAHY,sBAGMoB,OAAOC,IACzBC,OAAQ,UACRC,UAAW,OACXC,aAAc,MACdvB,OAAQ,QAGJ,IAAsB,oBAAS,GAAM,GAApCwB,EAAM,KAAEC,EAAS,KAMxB,SAASC,EAAY7T,GACnB+N,EAAMoB,SAASnP,GACf4T,GAAU,GAGZ,OACE,yBAAKplB,MAAOwjB,IACV,yBACE8B,QAAS,WAXbF,GAAWD,IAYPI,OAAQ,WAAM,OAAAH,GAAA,IACdplB,MAAO6kB,EACPW,iBAAe,GAEf,kBAAC,WAAO,CAACjqB,QAASgkB,EAAMnlB,MAAO0mB,MAAO,OAAQ2E,UAAW,OAlG7C,gBAmGTlG,EAAMnlB,MAAwBqqB,GAAkBE,KAIrD,wBAAI3kB,MAAOmlB,EAASjB,GAAyBL,IAC3C,wBAAIyB,QAAS,WAAM,OAAAD,EAxGP,gBAwGiC3qB,IAxGjC,cAwGmDsF,MAAO6kB,GACpE,yBAAK7kB,MAAOmkB,IACTM,G,IAAiB,0BAAMzkB,MAAOukB,IA1GvB,iBA6GZ,wBAAIe,QAAS,WAAM,OAAAD,EAAA,WAAuB3qB,IA5GnC,SA4GgDsF,MAAO6kB,GAC5D,yBAAK7kB,MAAOmkB,IACTQ,G,IAAY,0BAAM3kB,MAAOukB,IA9GvB,cC6Bf,IAAImB,IAAe,EAEnB,eACE,WAAYnG,GAAZ,MACE,YAAMA,IAAM,K,OAqDd,EAAAoG,oBAAsB,SAAC9N,GACf,MAAkC,EAAK0H,MAArC1O,EAAK,QAAE8P,EAAQ,WAAEoB,EAAU,aACnClR,EAAMW,OAASqG,EACf8I,EAAS9P,GACTkR,KAGF,EAAA6D,cAAgB,SAAClQ,GACT,MAAkC,EAAK6J,MAArC1O,EAAK,QAAE8P,EAAQ,WAAEoB,EAAU,aACnClR,EAAM6E,MAAQA,EAEV7E,EAAM6E,OjC7F6B,IiC6FpB7E,EAAMc,eAAejX,MACtCmW,EAAMgV,uBAA8C,mBAArBhV,EAAM6E,MAAMvU,MAGxC0P,EAAMgV,yBACThV,EAAMkG,yBAA2B,IAGnC4J,EAAS9P,GACTkR,KAGF,EAAA+D,gCAAkC,SAAChN,GAC3B,MAAkC,EAAKyG,MAArC1O,EAAK,QAAE8P,EAAQ,WAAEoB,EAAU,aACnClR,EAAMiI,wBAA0BA,EAChC6H,EAAS9P,GACTkR,KAGF,EAAAgE,qBAAuB,SAAC/M,GAChB,MAAkC,EAAKuG,MAArC1O,EAAK,QAAE8P,EAAQ,WAAEoB,EAAU,aACnClR,EAAMmI,aAAeA,EACrB2H,EAAS9P,GACTkR,KAGF,EAAAD,kBAAoB,IAAE/B,SAAS,EAAKR,MAAMwC,WAAY,KAEtD,EAAAiE,iCAAmC,SAACvG,GAC5B,MAAsB,EAAKF,MAAzB1O,EAAK,QAAE8P,EAAQ,WACvB9P,EAAMkG,yBAA2B0I,EAAUE,cAAcvlB,MACzDumB,EAAS9P,GAGT,EAAKiR,qBAjGL,EAAK1B,MAAQ,CACX7I,aAAc,I,EAiJpB,OArJ6C,OAQ3C,YAAA0O,kBAAA,sBACQ,EAAkClqB,KAAKwjB,MAArC1O,EAAK,QAAEqV,EAAU,aAAEvF,EAAQ,WACnC+E,IAAe,EACfQ,EAAWvH,oBAAoBlY,MAAK,SAAC8Q,GAC9BmO,KACE,IAAEzV,KAAKsH,EAAc,CAAE7c,IAAK,QAC/B6c,EAAa4O,QAAQ,CAAEzrB,IAAK,KAAMsM,MAAOoC,IAG3C,EAAK6W,SAAS,CACZ1I,aAAcA,IAGX1G,EAAMW,SAAYX,EAAMW,OAAO9W,KAAQmW,EAAMW,OAAOxK,SACvD6J,EAAMW,OAAS+F,EAAa,IAGzB1G,EAAMmI,eACTnI,EAAMmI,aAAe,GAAiB,IAEnCnI,EAAMiI,0BACTjI,EAAMiI,wBAA0B,GAAiB,IAGnD6H,EAAS9P,OAIbqV,EAAWrH,uBAAuBpY,MAAK,SAAC4R,GACjCqN,KACH,EAAKnG,MAAM6G,aAAa,IAAEzV,OAAO0H,EAAiB,QAG7CxH,EAAM6E,OAAU7E,EAAM6E,MAAMhb,MAC/BmW,EAAM6E,MAAQ,IAAEzF,KAAKoI,EAAiB,CAAC,MAAO,kBAC9CsI,EAAS9P,QAKf9U,KAAKwjB,MAAM8G,cAAcH,EAAW9K,sBAAsBvC,iCAG5D,YAAAyN,qBAAA,WACEZ,IAAe,GAmDjB,YAAArF,OAAA,WACQ,MAAoBtkB,KAAKwjB,MAAvB1O,EAAK,QAAE0V,EAAM,SAErB,OACE,yBAAKjG,UAAW,WACd,kBAACU,GAAW,CAACK,SAAS,GACpB,kBAAC,mBAAe,CAACf,UAAW,gBAAiBG,MAAO,GAAIe,QAAS,4BAA0B,eAG3F,kBAACoD,GAAM,CAACxqB,MAAOyW,EAAMiI,wBAAyB6H,SAAU5kB,KAAK+pB,kCAC7D,kBAAC,UAAM,CACLrD,cAAe,SACfhC,MAAO,EACPiC,cAAc,EACdtoB,MAAOyW,EAAMW,OACbhW,QAASO,KAAKqkB,MAAM7I,aACpBoJ,SAAU5kB,KAAK4pB,uBAInB,kBAAC3E,GAAW,CAACK,SAAS,GACpB,kBAAC,mBAAe,CAACf,UAAW,gBAAiBG,MAAO,EAAGe,QAAS,iBAAe,YAG/E,kBAACoD,GAAM,CAACxqB,MAAOyW,EAAMmI,aAAc2H,SAAU5kB,KAAKgqB,uBAClD,kBAAC,UAAM,CACLtD,cAAe,SACfhC,MAAO,EACPiC,cAAc,EACdlnB,QAAS+qB,EACTnsB,MAAOyW,EAAM6E,MACbiL,SAAU5kB,KAAK6pB,iBAInB,yBAAK5lB,MAAQ6Q,EAAMgV,uBAA+C,GAAtB,CAAE5E,QAAS,SACrD,kBAAC,SAAK,CACJphB,IAAK,GACLsB,KAAM,OACN/G,MAAOyW,EAAMkG,yBACb4J,SAAU5kB,KAAKiqB,sCAM3B,EArJA,CAA6C,IAAMnE,WC3B7C,I,MAAW,CACf4B,SAAU,WACVC,WAAY,cACZjD,MAAO,OACPkD,OAAQ,OACRC,YAAa,QAKT4C,GACJ,yBAAKlG,UAAW,YAAaqD,OAHd,GAGgClD,MAHhC,IAIb,0BACEhlB,UAAU,kBACVipB,KAAK,UACLjrB,EAAE,8uBAKFgtB,GACJ,yBAAKnG,UAAW,YAAaqD,OAbd,GAagClD,MAbhC,IAcb,0BACEhlB,UAAU,kBACVipB,KAAK,UACLjrB,EAAE,47BAWM,SAAU,GAAyB8lB,GAC/C,IAAMuB,EAAQ,sBAERK,EAAU5B,EAAM2B,SAAW,GAAM,EAEjC2D,EAAuB,CAC3BnB,WAAY5C,EAAMgE,OAAOC,IACzBC,OAAQ,UACRC,UAAW,OACXC,aAAc,MACdvB,OAAQ,OACRxC,QAASA,GAGL,IAAsB,oBAAS,GAAM,GAApCgE,EAAM,KAAEC,EAAS,KAQxB,SAASC,EAAY7T,GACnB+N,EAAMoB,SAASnP,GACf4T,GAAU,GAGZ,OACE,yBAAKplB,MAAO,IACV,yBACEslB,QAAS,WAbR/F,EAAM2B,UACTkE,GAAWD,IAaTI,OAAQ,WAAM,OAAAH,GAAA,IACdplB,MAAO6kB,EACPW,iBAAe,GAEf,kBAAC,WAAO,CAACjqB,QAASgkB,EAAMnlB,MAAQmlB,EAAMnlB,MAzElC,MAyE+C0mB,MAAO,OAAQ2E,UAAW,OA1ErE,YA2ELlG,EAAMnlB,MAAoBosB,GAAcC,KAI7C,wBAAInG,UAAW6E,EAAS,uBAAyB,iBAC/C,wBAAIG,QAAS,WAAM,OAAAD,EAhFX,YAgFiC3qB,IAhFjC,UAgF+CsF,MAAO6kB,GAC5D,yBAAKvE,UAAW,qBACbkG,G,IAAa,0BAAMlG,UAAW,iBAlF3B,aAqFR,wBAAIgF,QAAS,WAAM,OAAAD,EApFf,QAoFiC3qB,IApFjC,MAoF2CsF,MAAO6kB,GACpD,yBAAKvE,UAAW,qBACbmG,G,IAAS,0BAAMnG,UAAW,iBAtF3B,WCuBZ,IAAI,IAAe,EAEnB,eACE,WAAYf,GAAZ,MACE,YAAMA,IAAM,K,OAoHd,EAAAoG,oBAAsB,SAAC9N,GACf,MAAkC,EAAK0H,MAArC1O,EAAK,QAAE8P,EAAQ,WAAEoB,EAAU,aACnClR,EAAMW,OAASqG,EACmB,KAA9BA,EAAYD,cAEd/G,EAAMwI,yBAA2BxB,EAAYD,cAEN,QAAnC/G,EAAMwI,0BAAyE,YAAnCxI,EAAMwI,2BAEpDxI,EAAMwI,yBAA2B,WAIrCsH,EAAS9P,GACT,EAAK6V,eACL,EAAKC,gBACL5E,KAGF,EAAA6E,gBAAkB,SAAChN,GACX,MAAkC,EAAK2F,MAArC1O,EAAK,QAAE8P,EAAQ,WAAEoB,EAAU,aACnClR,EAAM+I,QAAUA,EAChB+G,EAAS9P,GACT,EAAK8V,gBACL5E,KAGF,EAAA8E,iBAAmB,SAAC/e,GACZ,MAAkC,EAAKyX,MAArC1O,EAAK,QAAE8P,EAAQ,WAAEoB,EAAU,aACnClR,EAAM/I,SAAWA,EACjB6Y,EAAS9P,GACTkR,KAGF,EAAAD,kBAAoB,IAAE/B,SAAS,EAAKR,MAAMwC,WAAY,KAEtD,EAAAiE,iCAAmC,SAACvG,GAC5B,MAAsB,EAAKF,MAAzB1O,EAAK,QAAE8P,EAAQ,WACvB9P,EAAMkG,yBAA2B0I,EAAUE,cAAcvlB,MACzDumB,EAAS9P,GAGT,EAAKiR,qBAGP,EAAAgF,iCAAmC,SAACC,GAC5B,MAAkC,EAAKxH,MAArC1O,EAAK,QAAE8P,EAAQ,WAAEoB,EAAU,aACnClR,EAAMwI,yBAA2B0N,EACjCpG,EAAS9P,GACT,EAAK6V,eACL,EAAKC,gBACL5E,KAtKA,EAAK3B,MAAQ,CACX7I,aAAc,GACdmC,SAAU,GACVQ,UAAW,GACX9f,MAAO,CACLA,MAAO,EACP4sB,OAAQ,6B,EAuNhB,OAhOuD,OAcrD,YAAAf,kBAAA,WACE,IAAe,EACflqB,KAAKkrB,mBACLlrB,KAAK2qB,eACL3qB,KAAK4qB,gBAEG,IAAAT,EAAenqB,KAAKwjB,MAAV,WAClBxjB,KAAKwjB,MAAM8G,cAAcH,EAAW9K,sBAAsBvC,iCAG5D,YAAAyN,qBAAA,WACE,IAAe,GAGjB,YAAAW,iBAAA,sBACQ,EAAkClrB,KAAKwjB,MAArC1O,EAAK,QAAE8P,EAAQ,WAAY,aACxBhC,oBAAoBlY,MAAK,SAAC8Q,GACnC,IAAK,GAAc,CAKjB,GAJA,EAAK0I,SAAS,CACZ1I,aAAcA,KAGX,IAAEtH,KAAK,EAAKmQ,MAAM7I,aAAc,CAAE7c,IAAK,OAAS,CACnD,IAAIwsB,EAAO,EAAK9G,MAAM7I,aACtB2P,EAAKf,QAAQ,CAAEzrB,IAAK,KAAMsM,MAAOoC,IACjC,EAAK6W,SAAS,CACZ1I,aAAc2P,IAMhBrW,EAAMW,QACNX,EAAMW,OAAO9W,MACZ,IAAEuV,KAAK,EAAKmQ,MAAM7I,cAAc,SAAC4P,GAAQ,OAAAA,EAAIzsB,MAAQmW,EAAMW,OAAlB,OAE1CX,EAAMW,OAAS,EAAK4O,MAAM7I,aAAa,GAC5B1G,EAAMW,QAAWX,EAAMW,OAAO9W,MAAQ6c,IACjD1G,EAAMW,OAAS,EAAK4O,MAAM7I,aAAa,IAGzCoJ,EAAS9P,QAKf,YAAA6V,aAAA,sBACQ,EAAkC3qB,KAAKwjB,MAArC1O,EAAK,QAAE8P,EAAQ,WAAY,aACxB7B,cAAcjO,GAAOpK,MAAK,SAACiT,GACpC,IAAK,GAAc,CAKjB,GAJA,EAAKuG,SAAS,CACZvG,SAAUA,KAGP,IAAEzJ,KAAK,EAAKmQ,MAAM1G,SAAU,CAAEhf,IAAK,OAAS,CAC/C,IAAIQ,EAAI,EAAKklB,MAAM1G,SACnBxe,EAAEirB,QAAQ,CAAEzrB,IAAK,KAAMsM,MnCjFL,4BmCkFlB,EAAKiZ,SAAS,CACZvG,SAAUxe,IAIV2V,EAAM+I,SAAW/I,EAAM+I,QAAQlf,KAC5B,IAAEuV,KAAK,EAAKmQ,MAAM1G,UAAU,SAACyN,GAAQ,OAAAA,EAAIzsB,MAAQmW,EAAM+I,QAAlB,SAI1C/I,EAAM+I,QAAU,EAAKwG,MAAM1G,SAAS,IAGtCiH,EAAS9P,QAKf,YAAA8V,cAAA,sBACQ,EAAkC5qB,KAAKwjB,MAArC1O,EAAK,QAAE8P,EAAQ,WAAY,aACxB5B,eAAelO,GAAOpK,MAAK,SAACyT,GACrC,IAAK,GAAc,CAKjB,GAJA,EAAK+F,SAAS,CACZ/F,UAAWA,KAGR,IAAEjK,KAAK,EAAKmQ,MAAMlG,UAAW,CAAExf,IAAK,OAAS,CAChD,IAAImE,EAAI,EAAKuhB,MAAMlG,UACnBrb,EAAEsnB,QAAQ,CAAEzrB,IAAK,KAAMsM,MAAOqC,IAC9B,EAAK4W,SAAS,CACZ/F,UAAWrb,IAIXgS,EAAM/I,UAAY+I,EAAM/I,SAASpN,KAC9B,IAAEuV,KAAK,EAAKmQ,MAAMlG,WAAW,SAACiN,GAAQ,OAAAA,EAAIzsB,MAAQmW,EAAM/I,SAAlB,SAI3C+I,EAAM/I,SAAW,CAAEpN,IAAK,KAAMsM,MAAOqC,IAGvCsX,EAAS9P,QA2Df,YAAAwP,OAAA,W,MACUxP,EAAU9U,KAAKwjB,MAAV,MAEb,OACE,yBAAKe,UAAW,WACd,kBAAC,mBAAe,CAACA,UAAW,gBAAiBG,MAAO,GAAIe,QAAS,4BAA0B,eAG3F,kBAAC,GAAwB,CACvBpnB,MAAOyW,EAAMwI,yBACb6H,WAAuB,QAAb,EAACrQ,EAAMW,cAAM,eAAE9W,KACzBimB,SAAU5kB,KAAK+qB,mCAEjB,kBAAC,UAAM,CACLrE,cAAe,SACfhC,MAAO,EACPiC,cAAc,EACdtoB,MAAOyW,EAAMW,OACbhW,QAASO,KAAKqkB,MAAM7I,aACpBoJ,SAAU5kB,KAAK4pB,sBAGjB,kBAAC,mBAAe,CAACrF,UAAW,gBAAiBG,MAAO,EAAGe,QAAS,wBAAsB,WAGtF,kBAAC,UAAM,CACLiB,cAAe,SACfhC,MAAO,EACPiC,cAAc,EACdtoB,MAAOyW,EAAM+I,QACbpe,QAASO,KAAKqkB,MAAM1G,SACpBiH,SAAU5kB,KAAK6qB,kBAGjB,kBAAC,mBAAe,CAACtG,UAAW,gBAAiBG,MAAO,EAAGe,QAAS,yBAAuB,YAGvF,kBAAC,UAAM,CACLiB,cAAe,SACfhC,MAAO,EACPiC,cAAc,EACdtoB,MAAOyW,EAAM/I,SACbtM,QAASO,KAAKqkB,MAAMlG,UACpByG,SAAU5kB,KAAK8qB,mBAGjB,yBAAK7mB,MAAQ6Q,EAAMgV,uBAA+C,GAAtB,CAAE5E,QAAS,SACrD,kBAAC,SAAK,CAACphB,IAAK,GAAIzF,MAAOyW,EAAMkG,yBAA0B4J,SAAU5kB,KAAKiqB,sCAKhF,EAhOA,CAAuD,IAAMnE,W,GCP7D,YACE,WAAYtC,G,OACV,YAAMA,IAAM,KAehB,OAjB0C,OAKxC,YAAAc,OAAA,WACE,IAAM,EAAkGtkB,KAAKwjB,MAArGvY,EAAK,QAAEwa,EAAO,UAAEC,EAAY,eAAEP,EAAQ,WAAE,IAAAQ,kBAAU,IAAG,KAAE,EAAE,IAAAiB,kBAAU,IAAG,KAAE,EAAKhB,EAAc,IAA7F,yEAEN,OACE,kBAACX,GAAW,CAACE,SAAUA,EAAUG,SAAUsB,GACzC,kBAAC,mBAAe,CAACrC,UAAWmB,EAAe,gBAAkB,GAAIhB,MAAOiB,EAAYF,QAASA,GAC1Fxa,GAEH,kBAAC,YAAQ,GAACnH,IAAK,GAAIunB,KAAM,EAAG3G,MAAOkC,EAAYzB,SAAUA,GAAcS,MAI/E,EAjBA,CAA0C,IAAME,WCDhD,eACE,WAAYtC,GAAZ,MACE,YAAMA,IAAM,K,OAGd,EAAA8H,eAAiB,SAAC5H,GACV,MAAsB,EAAKF,MAAzB1O,EAAK,QAAE8P,EAAQ,WACvB9P,EAAMnD,oBAAsB+R,EAAUE,cAAcvlB,MACpDumB,EAAS9P,GAGT,EAAKiR,qBAGP,EAAAwF,YAAc,SAAC5Z,GACb,GAAIA,EACF,IAEE,OADAjR,KAAKkS,MAAMjB,IACJ,EACP,MAAO9F,GACP,OAAO,EAKX,OAAO,GAGT,EAAAka,kBAAoB,IAAE/B,SAAS,EAAKR,MAAMwC,WAAY,K,EAuBxD,OAnD6B,OA8B3B,YAAA1B,OAAA,WACU,IAAAxP,EAAU9U,KAAKwjB,MAAV,MAEb,OACE,6BACE,yBAAKe,UAAW,WACd,kBAAC,GAAY,CACXmB,cAAY,EACZkB,WAAY,EACZ3b,MAAO,SACPwa,QACE,uMAEFpnB,MAAOyW,EAAMnD,oBACb6V,SAAUxnB,KAAKurB,YAAYzW,EAAMnD,qBACjCiT,SAAU5kB,KAAKsrB,oBAM3B,EAnDA,CAA6B,IAAMxF,WCvBpB,IAEb,CAAEnnB,IAAK,SAAUsM,MAAO,SAAU7F,KAAM,UACxC,CAAEzG,IAAK,YAAasM,MAAO,iBAAkB7F,KAAM,UACnD,CAAEzG,IAAK,WAAYsM,MAAO,WAAY7F,KAAM,UAC5C,CAAEzG,IAAK,cAAesM,MAAO,mBAAoB7F,KAAM,UACvD,CAAEzG,IAAK,YAAasM,MAAO,aAAc7F,KAAM,UAC/C,CAAEzG,IAAK,WAAYsM,MAAO,iBAAkB7F,KAAM,UAClD,CAAEzG,IAAK,cAAesM,MAAO,cAAe7F,KAAM,UAClD,CAAEzG,IAAK,YAAasM,MAAO,YAAa7F,KAAM,UAC9C,CAAEzG,IAAK,kBAAmBsM,MAAO,sBAAuB7F,KAAM,UAC9D,CAAEzG,IAAK,gBAAiBsM,MAAO,oBAAqB7F,KAAM,UAE1D,CAAEzG,IAAK,SAAUsM,MAAO,IAAK7F,KAAM,UACnC,CAAEzG,IAAK,YAAasM,MAAO,KAAM7F,KAAM,UACvC,CAAEzG,IAAK,YAAasM,MAAO,IAAK7F,KAAM,UACtC,CAAEzG,IAAK,eAAgBsM,MAAO,IAAK7F,KAAM,UACzC,CAAEzG,IAAK,WAAYsM,MAAO,WAAY7F,KAAM,UAC5C,CAAEzG,IAAK,YAAasM,MAAO,eAAgB7F,KAAM,UACjD,CAAEzG,IAAK,qBAAsBsM,MAAO,qBAAsB7F,KAAM,UAChE,CAAEzG,IAAK,wBAAyBsM,MAAO,wBAAyB7F,KAAM,UAEtE,CAAEzG,IAAK,SAAUsM,MAAO,KAAM7F,KAAM,WAEpC,CAAEzG,IAAK,SAAUsM,MAAO,SAAU7F,KAAM,kBACxC,CAAEzG,IAAK,YAAasM,MAAO,iBAAkB7F,KAAM,kBACnD,CAAEzG,IAAK,WAAYsM,MAAO,WAAY7F,KAAM,kBAC5C,CAAEzG,IAAK,cAAesM,MAAO,mBAAoB7F,KAAM,kBACvD,CAAEzG,IAAK,YAAasM,MAAO,aAAc7F,KAAM,kBAC/C,CAAEzG,IAAK,WAAYsM,MAAO,iBAAkB7F,KAAM,kBAClD,CAAEzG,IAAK,cAAesM,MAAO,cAAe7F,KAAM,kBAClD,CAAEzG,IAAK,YAAasM,MAAO,YAAa7F,KAAM,kBAC9C,CAAEzG,IAAK,WAAYsM,MAAO,WAAY7F,KAAM,kBAC5C,CAAEzG,IAAK,YAAasM,MAAO,eAAgB7F,KAAM,kBAEjD,CAAEzG,IAAK,SAAUsM,MAAO,SAAU7F,KAAM,cACxC,CAAEzG,IAAK,YAAasM,MAAO,iBAAkB7F,KAAM,cACnD,CAAEzG,IAAK,WAAYsM,MAAO,WAAY7F,KAAM,cAC5C,CAAEzG,IAAK,cAAesM,MAAO,mBAAoB7F,KAAM,cACvD,CAAEzG,IAAK,YAAasM,MAAO,aAAc7F,KAAM,cAC/C,CAAEzG,IAAK,WAAYsM,MAAO,iBAAkB7F,KAAM,eCfpD,eAOE,WAAYoe,GAAZ,MACE,YAAMA,IAAM,K,OAPd,EAAAgI,gBAAkB,SAClB,EAAAC,oBAAsB,aACtB,EAAAC,gBAAkB,SAClB,EAAAC,iBAAmB,UACnB,EAAAC,mBAAqB,iBAMrB,EAAAC,aAAe,WACP,MAAsB,EAAKrI,MAAzB1O,EAAK,QAAE8P,EAAQ,WACvB9P,EAAM+F,QAAQnZ,KAAK,CACjBsX,IAAKlE,EAAM6E,MACXlE,OAAQ,GAAiB,GACzBwD,SAAU,EAAK6S,sBAAsBhX,EAAM6E,MAAMvU,MAAM,GACvDgU,cAAc,EACdD,YAAa,EACbD,YAAa,GACb4B,SAAS,IAGX8J,EAAS9P,IAGX,EAAAiX,gBAAkB,SAAC5kB,GACX,MAAkC,EAAKqc,MAArC1O,EAAK,QAAE8P,EAAQ,WAAEoB,EAAU,aACnClR,EAAM+F,QAAQ7V,OAAOmC,EAAO,GAE5Byd,EAAS9P,GACTkR,KAmBF,EAAAgE,qBAAuB,SAAC/M,EAAsB9V,GAC1B,EAAKqc,MAAV,MACP3I,QAAQ1T,GAAOsO,OAASwH,EAE9B,EAAK+O,qBAAqB7kB,IAG5B,EAAA8kB,iBAAmB,SAAChT,EAA2B9R,GAC3B,EAAKqc,MAAV,MACP3I,QAAQ1T,GAAO8R,SAAWA,EAEhC,EAAK+S,qBAAqB7kB,IAe5B,EAAA4e,kBAAoB,IAAE/B,SAAS,EAAKR,MAAMwC,WAAY,KAEtD,EAAAkG,6BAA+B,SAAC7tB,EAAoC8I,GAChD,EAAKqc,MAAV,MACP3I,QAAQ1T,GAAO+R,YAAc7a,EAAMulB,cAAcvlB,MAEvD,EAAK2tB,qBAAqB7kB,GAAO,IAGnC,EAAAglB,6BAA+B,SAAC9tB,EAAoC8I,GAChD,EAAKqc,MAAV,MACP3I,QAAQ1T,GAAOgS,YAAc9a,EAAMulB,cAAcwI,cAEvD,EAAKJ,qBAAqB7kB,GAAO,I,EA4JrC,OArP6B,OAkC3B,YAAA2kB,sBAAA,SAAsB1mB,GACpB,OAAO,IAAEiC,OAAOglB,IAAW,SAACxuB,GAAM,OAAAA,EAAEuH,OAAF,MAGpC,YAAAykB,cAAA,SAAclQ,EAAwBxS,GAC5B,IAAA2N,EAAU9U,KAAKwjB,MAAV,MACb1O,EAAM+F,QAAQ1T,GAAO6R,IAAMW,EAE3B,IAAIvO,EAAMpL,KAAK8rB,sBAAsBnS,EAAMvU,MACtC,IAAEyH,SAASzB,EAAK0J,EAAM+F,QAAQ1T,GAAO8R,YACxCnE,EAAM+F,QAAQ1T,GAAO8R,SAAW7N,EAAI,IAGtCpL,KAAKgsB,qBAAqB7kB,IAiB5B,YAAAmlB,mBAAA,SAAmBjlB,GACjB,OACEA,EAAO2R,IAAI5T,OAASpF,KAAK4rB,qBACvBvkB,EAAO4R,SAASta,IAAIkO,SAAS,WAC5BxF,EAAO2R,IAAI5T,OAASpF,KAAKwrB,iBAAmBnkB,EAAO2R,IAAI5T,OAASpF,KAAKyrB,sBAI5E,YAAAc,mBAAA,SAAmBllB,GACjB,OAAOA,EAAO2R,IAAI5T,OAASpF,KAAK0rB,kBAAoBrkB,EAAO4R,SAASta,IAAIkO,SAAS,UAmBnF,YAAA2f,8BAAA,SAA8BnuB,EAAwB8I,GAClCnH,KAAKwjB,MAAV,MACP3I,QAAQ1T,GAAOiS,aAAe/a,EAAMM,IAE1CqB,KAAKgsB,qBAAqB7kB,IAG5B,YAAA6kB,qBAAA,SAAqB7kB,EAAeslB,QAAA,IAAAA,OAAA,GAC5B,MAAkCzsB,KAAKwjB,MAArC1O,EAAK,QAAE8P,EAAQ,WAAEoB,EAAU,aAC/BlR,EAAM+F,QAAQ1T,GAAO6R,KAErBlE,EAAM+F,QAAQ1T,GAAO8R,SAASta,IAAIkO,SAAS,UAC1C7M,KAAKwrB,kBAAoB1W,EAAM+F,QAAQ1T,GAAO6R,IAAI5T,MACjDpF,KAAKyrB,sBAAwB3W,EAAM+F,QAAQ1T,GAAO6R,IAAI5T,KAQvDpF,KAAKwrB,kBAAoB1W,EAAM+F,QAAQ1T,GAAO6R,IAAI5T,MACjDpF,KAAKyrB,sBAAwB3W,EAAM+F,QAAQ1T,GAAO6R,IAAI5T,OACxD0P,EAAM+F,QAAQ1T,GAAO+R,YAIrBpE,EAAM+F,QAAQ1T,GAAO8R,SAASta,IAAIkO,SAAS,UAC3C7M,KAAK4rB,qBAAuB9W,EAAM+F,QAAQ1T,GAAO6R,IAAI5T,MACrD0P,EAAM+F,QAAQ1T,GAAO+R,aAIrBlZ,KAAK4rB,qBAAuB9W,EAAM+F,QAAQ1T,GAAO6R,IAAI5T,MACrD0P,EAAM+F,QAAQ1T,GAAO+R,aACrBpE,EAAM+F,QAAQ1T,GAAO+R,YAAYrM,SAAS,KAJ1CiI,EAAM+F,QAAQ1T,GAAO2T,SAAU,EAOtB9a,KAAK0rB,kBAAoB5W,EAAM+F,QAAQ1T,GAAO6R,IAAI5T,MAASsnB,MAAM5X,EAAM+F,QAAQ1T,GAAOgS,aAG/FnZ,KAAK2rB,mBAAqB7W,EAAM+F,QAAQ1T,GAAO6R,IAAI5T,WACbzF,IAAtCmV,EAAM+F,QAAQ1T,GAAOiS,eAErBtE,EAAM+F,QAAQ1T,GAAO2T,SAAU,GAL/BhG,EAAM+F,QAAQ1T,GAAO2T,SAAU,EAd/BhG,EAAM+F,QAAQ1T,GAAO2T,SAAU,GAV/BhG,EAAM+F,QAAQ1T,GAAO2T,SAAU,EAE/BhG,EAAM+F,QAAQ1T,GAAO+R,YAAc,GACnCpE,EAAM+F,QAAQ1T,GAAOgS,YAAc,EACnCrE,EAAM+F,QAAQ1T,GAAOiS,cAAe,GA4BtCtE,EAAM+F,QAAQ1T,GAAO2T,SAAU,EAGjC8J,EAAS9P,GACL2X,EAEFzsB,KAAK+lB,oBAELC,KAIJ,YAAA1B,OAAA,e,EAAA,OACQ,EAAoBtkB,KAAKwjB,MAAvB1O,EAAK,QAAE0V,EAAM,SAEjBmC,EAA0B,QAAhB,EAAG7X,EAAM+F,eAAO,eAAE5a,KAAI,SAAC2sB,EAAczlB,GACjD,OACE,yBAAKod,UAAW,WACd,kBAAC,mBAAe,CAACA,UAAW,gBAAiBG,MAAO,GAAIe,QAAS,kBAC9Dte,EAAQ,EACO,YvChLe,IuCiLhC2N,EAAMc,eAAejX,KACpB,kBAACkqB,GAAM,CACLxqB,MAAOyW,EAAM+F,QAAQ1T,GAAOsO,OAC5BmP,SAAU,SAAC3H,GAAyB,SAAK+M,qBAAqB/M,EAA1B,MAGxC,kBAAC,UAAM,CACLyJ,cAAe,SACfhC,MAAO,GACPiC,cAAc,EACdtoB,MAAOyW,EAAM+F,QAAQ1T,GAAO6R,IAC5BvZ,QAAS+qB,EACT5F,SAAU,SAACjL,GAAU,SAAKkQ,cAAclQ,EAAnB,MAEvB,kBAAC,UAAM,CACL+M,cAAe,SACfhC,MAAO,GACPiC,cAAc,EACdtoB,MAAOyW,EAAM+F,QAAQ1T,GAAO8R,SAC5BxZ,QAAS,EAAKqsB,sBAAsBhX,EAAM+F,QAAQ1T,GAAO6R,IAAI5T,MAC7Dwf,SAAU,SAAC3L,GAAa,SAAKgT,iBAAiBhT,EAAtB,MAGzB,EAAKqT,mBAAmBxX,EAAM+F,QAAQ1T,KACrC,kBAAC,SAAK,CACJrD,IAAK,GACL4gB,MAAO,GACPrmB,MAAOyW,EAAM+F,QAAQ1T,GAAO+R,YAC5ByL,YAA+C,mBAAlC7P,EAAM+F,QAAQ1T,GAAO6R,IAAI5T,KAA4B,YvC7LlD,iBuC8LhBwf,SAAU,SAACC,GAAU,SAAKqH,6BAA6BrH,EAAlC,MAIxB,EAAK0H,mBAAmBzX,EAAM+F,QAAQ1T,KACrC,kBAAC,SAAK,CACJrD,IAAK,GACLsB,KAAM,SACNsf,MAAO,GACPrmB,MAAOyW,EAAM+F,QAAQ1T,GAAOgS,YAC5BwL,YvCxMgB,iBuCyMhBC,SAAU,SAACC,GAAU,SAAKsH,6BAA6BtH,EAAlC,MAIU,YAAlC/P,EAAM+F,QAAQ1T,GAAO6R,IAAI5T,MACxB,kBAAC,UAAM,CACLshB,cAAe,SACfhC,MAAO,GACPiC,cAAc,EACd/B,SAAU,SAAC9hB,GAAM,SAAK0pB,8BAA8B1pB,EAAnC,IACjBzE,MAAO,CAAEM,IAAK,GAAKmW,EAAM+F,QAAQ1T,GAAOiS,aAAcnO,MAAO,GAAK6J,EAAM+F,QAAQ1T,GAAOiS,cACvF3Z,QAAS,CACP,CAAEd,IAAK,QAASsM,MAAO,SACvB,CAAEtM,IAAK,OAAQsM,MAAO,WAK5B,kBAAC,UAAM,CAAC4hB,QAAS,YAAatD,QAAS,WAAM,SAAKwC,gBAAL,KAA2B,SAO9E,OACE,6BACGY,EAED,yBAAKpI,UAAW,WACd,kBAAC,mBAAe,CAACG,MAAO,GAAIe,QAAS,iCAA+B,cAGpE,kBAAC,UAAM,CAACoH,QAAS,YAAatD,QAASvpB,KAAK6rB,cAAY,KAGxD,yBAAKtE,QAASzS,EAAMsG,+BAClB,kBAAC,mBAAe,CAACsJ,MAAO,GAAIe,QAAS,uCAAqC,iCAQtF,EArPA,CAA6B,IAAMK,W,GCGnC,YACE,WAAYtC,G,OACV,YAAMA,IAAM,KAgChB,OAlCwC,OAKtC,YAAAc,OAAA,WACE,IAAM,EAUFtkB,KAAKwjB,MATPvY,EAAK,QACLwa,EAAO,UACP,IAAAqH,kBAAU,IAAG,GAAI,EACjB3H,EAAQ,WACRO,EAAY,eACZ,IAAAf,mBAAW,IAAG,MAAG,EACjB,IAAAgB,kBAAU,IAAG,KAAE,EACf,IAAAiB,kBAAU,IAAG,KAAE,EACZhB,EAAc,IATb,oGAYN,OACE,kBAACX,GAAW,CAACE,SAAUA,EAAUG,SAAUsB,GACzC,kBAAC,mBAAe,CAACrC,UAAWmB,EAAe,gBAAkB,GAAIhB,MAAOiB,EAAYF,QAASA,GAC1Fxa,GAEH,kBAAC,UAAM,GACLyb,cAAe,SACfvB,SAAUA,EACVT,MAAOkC,EACPD,aAAcmG,EACdnI,YAAaA,GACTiB,MAKd,EAlCA,CAAwC,IAAME,WCL9C,eACE,WAAYtC,GAAZ,MACE,YAAMA,IAAM,K,OAUd,EAAAuJ,cAAgB,SAACrJ,GACT,MAAwC,EAAKF,MAA3C1O,EAAK,QAAE8P,EAAQ,WAAEoI,EAAgB,mBACrCtJ,EAAUE,eAAiBF,EAAUE,cAAcvlB,MACrDyW,EAAME,YAAc0O,EAAUE,cAAcvlB,OAE5C2uB,EAAiB,IACjBlY,EAAME,YAAc,GACpBF,EAAMmB,WAAa,CAAEtX,IAAK,KAAMsM,MAAO,MAGzC2Z,EAAS9P,GAGT,EAAKmY,wBAGP,EAAAC,aAAe,SAACxJ,GACR,MAAkC,EAAKF,MAArC1O,EAAK,QAAEqV,EAAU,aAAEvF,EAAQ,WACnC9P,EAAMmB,WAAayN,EACnBkB,EAAS9P,GAETqV,EAAWhL,yBACRxJ,kBAAkBb,EAAMmB,WAAYnB,EAAMc,eAAejX,KACzD+L,MAAK,SAACqR,GACL,EAAKyH,MAAM8G,cAAcvO,OAI/B,EAAAkR,qBAAuB,IAAEjJ,SAAS,EAAKR,MAAM0C,gBAAiB,K,EAqChE,OA7E+B,OAK7B,YAAAgE,kBAAA,WACQ,MAA6BlqB,KAAKwjB,MAAhC1O,EAAK,QAAEoR,EAAe,kBAC1BpR,EAAME,aACRkR,KAkCJ,YAAA5B,OAAA,WACQ,MAAwBtkB,KAAKwjB,MAA3B1O,EAAK,QAAEqY,EAAU,aAEzB,OACE,yBAAK5I,UAAW,WACd,kBAAC,GAAS,CACRmB,cAAY,EACZkB,WAAY,EACZ3b,MAAO,QACPwa,QACE,6B,mFAEE,uBAAG9e,KAAK,+DAA6D,gEAKzEtI,MAAOyW,EAAME,YACb2P,YzC3DoB,iByC4DpBC,SAAU5kB,KAAK+sB,gBAGjB,kBAAC,GAAU,CACTrH,cAAY,EACZC,WAAY,EACZ1a,MAAO,OACPwa,QAAS,yDACT2H,iBAAkB,4BAClB/uB,MAAOyW,EAAMmB,WACbxW,QAAS0tB,EACTvI,SAAU5kB,KAAKktB,iBAKzB,EA7EA,CAA+B,IAAMpH,WCHjC,IAAe,EAEnB,eACE,WAAYtC,G,OACV,YAAMA,IAAM,KAsDhB,OAxDoC,OAKlC,YAAA0G,kBAAA,sBACQ,EAAkClqB,KAAKwjB,MAArC1O,EAAK,QAAE8P,EAAQ,WAAEuF,EAAU,aACnC,IAAe,EAEXrV,EAAME,aAAeF,EAAMmB,YAAcnB,EAAMmB,WAAWtX,IAC5DwrB,EAAWhL,yBACRxJ,kBAAkBb,EAAMmB,WAAYnB,EAAMc,eAAejX,KACzD+L,MAAK,SAACqR,GACA,IACH,EAAKyH,MAAM8G,cAAcvO,MAI/BjH,EAAMjD,OAAS,CACblT,IAAK,KACLsM,MAAO,KAIX2Z,EAAS9P,IAGX,YAAAyV,qBAAA,WACE,IAAe,GAGjB,YAAAjG,OAAA,WACQ,MASFtkB,KAAKwjB,MARP1O,EAAK,QACLkR,EAAU,aACVpB,EAAQ,WACR0F,EAAa,gBACbpE,EAAe,kBACfiE,EAAU,aACVgD,EAAU,aACVH,EAAgB,mBAGlB,OACE,kBAAC,GAAS,CACRlY,MAAOA,EACP8P,SAAUA,EACVuI,WAAYA,EACZnH,WAAYA,EACZmE,WAAYA,EACZG,cAAeA,EACfpE,gBAAiBA,EACjB8G,iBAAkBA,KAI1B,EAxDA,CAAoC,IAAMlH,W,GCM1C,YACE,WAAYtC,GAAZ,MACE,YAAMA,IAAM,K,OAqBd,EAAA6J,eAAiB,SAACxb,GACV,MAAkC,EAAK2R,MAArC1O,EAAK,QAAEkR,EAAU,aAAEpB,EAAQ,WACnC9P,EAAMjD,OAASA,EAEXiD,EAAMjD,QAAUiD,EAAMjD,OAAOlT,MAAQ,IAAEkO,SAASiI,EAAMjD,OAAOmE,aAAclB,EAAMtB,eACnFsB,EAAMtB,YAAcsB,EAAMjD,OAAOmE,aAAa,IAG5ClB,EAAMnB,wBAA0B,EAAK2Z,0BACvCxY,EAAMnB,uBAAwB,GAGhCmB,EAAM3C,WAAa,GACnB2C,EAAMhD,gBAAiB,EAEvB8S,EAAS9P,GACTkR,KAaF,EAAAuH,qBAAuB,SAACna,GAChB,MAAkC,EAAKoQ,MAArC1O,EAAK,QAAEkR,EAAU,aAAEpB,EAAQ,WACnC9P,EAAM1B,aAAeA,EACrBwR,EAAS9P,GACTkR,KAGF,EAAAwH,oBAAsB,SAACha,GACf,MAAkC,EAAKgQ,MAArC1O,EAAK,QAAEkR,EAAU,aAAEpB,EAAQ,WACnC9P,EAAMtB,YAAcA,EACpBoR,EAAS9P,GACTkR,KAGF,EAAAyH,qBAAuB,SAAC5I,GAChB,MAAkC,EAAKrB,MAArC1O,EAAK,QAAE8P,EAAQ,WAAEoB,EAAU,aAC/BnB,GAASA,EAAMjB,gBACjB9O,EAAMnB,sBAAwBkR,EAAMjB,cAAciC,QAClDjB,EAAS9P,GACTkR,MAIJ,EAAA0H,uBAAyB,SAAC7I,GAClB,MAAkC,EAAKrB,MAArC1O,EAAK,QAAE8P,EAAQ,WAAEoB,EAAU,aAC/BnB,GAASA,EAAMjB,gBACjB9O,EAAMhD,eAAiB+S,EAAMjB,cAAciC,QACvC/Q,EAAMhD,iBACRgD,EAAMjD,OAAS,CAAElT,IAAK,KAAMsM,MAAO,cAAc,EAAKuY,MAAMmK,iBAAiBpsB,OAAM,YACnFuT,EAAM3C,WAAa,EAAKqR,MAAMmK,kBAEhC/I,EAAS9P,GACTkR,MAjFF,EAAK3B,MAAQ,CACXuJ,sBAAuB,GACvBC,qBAAsB,I,EAwK5B,OA7KoC,OASlC,YAAA3D,kBAAA,WACQ,MAAkClqB,KAAKwjB,MAArC1O,EAAK,QAAEqV,EAAU,aAAEvF,EAAQ,WAGhC9P,EAAM1B,cACN0B,EAAM1B,aAAazU,KACnBwrB,EAAWlL,uBAAuB/K,MAAK,SAAC9W,GAAM,OAAAA,EAAEuB,MAAQmW,EAAM1B,aAAhB,SAE/C0B,EAAM1B,aAAe+W,EAAWnK,uBAAuBlL,IAGzD8P,EAAS9P,IAsBX,YAAAwY,sBAAA,WACU,IAAAxY,EAAU9U,KAAKwjB,MAAV,MACb,OACE1O,EAAMmB,YACmB,SAAzBnB,EAAMmB,WAAWtX,KACjBmW,EAAMjD,QACN,IAAEqC,KAAKD,GAAa,SAACzW,GAAM,OAAAA,EAAEmB,MAAQmW,EAAMjD,OAAhB,QAwC/B,YAAAic,mBAAA,WAEE,OADkB9tB,KAAKwjB,MAAV,MACA5N,eAAejX,K3C9GW,G2CiHzC,YAAAovB,qBAAA,WACU,IAAAjZ,EAAU9U,KAAKwjB,MAAV,MACb,OAAO1O,EAAMjD,QAAUiD,EAAMjD,OAAOmE,cAAgBlB,EAAMjD,OAAOmE,aAAazU,OAAS,GAGzF,YAAA+iB,OAAA,WACQ,MAAwBtkB,KAAKwjB,MAA3B1O,EAAK,QAAEqV,EAAU,aAEzB,OACE,yBAAK5F,UAAW,WACd,kBAAC,GAAU,CACTmB,cAAY,EACZP,SAAUrQ,EAAMqR,mBAChBS,WAAY,EACZ3b,MAAO,SACPwa,QAAS,sCACTpnB,MAAOyW,EAAMjD,OACbub,iBAAkB,mBAClB3tB,QAASO,KAAKwjB,MAAMmK,iBACpB/I,SAAU5kB,KAAKqtB,iB3CtIO,I2CyIvBvY,EAAMc,eAAejX,KACpB,kBAAC,GAAU,CACT+mB,cAAY,EACZP,UAAWnlB,KAAKstB,wBAChB3H,WAAY,EACZ1a,MAAO,iBACPwa,QACE,8HAGFpnB,MAAOyW,EAAMnB,sBACbiR,SAAU5kB,KAAKytB,uB3CnJG,I2CuJrB3Y,EAAMc,eAAejX,KACpB,kBAAC,GAAU,CACT+mB,cAAY,EACZP,UAAWrQ,EAAMkZ,kBACjBrI,WAAY,EACZ1a,MAAO,mBACPwa,QACE,2HAGFpnB,MAAOyW,EAAMhD,eACb8S,SAAU5kB,KAAK0tB,yBAIlB1tB,KAAK8tB,sBACJ,kBAAC,GAAU,CACTpI,cAAY,EACZP,UAAWnlB,KAAK+tB,uBAChBpI,WAAY,EACZiB,WAAY,GACZ3b,MAAO,cACPwa,QAAS,+BACTpnB,MAAOyW,EAAMtB,YACb/T,QAASqV,EAAMjD,OAAOmE,aACtB4O,SAAU5kB,KAAKwtB,sBAInB,kBAAC,GAAU,CACT9H,cAAY,EACZP,SAAUgF,EAAWlL,uBAAuB1d,QAAU,EACtDokB,WAAY,EACZiB,WAAY,GACZ3b,MAAO,SACPwa,QAAS,2BACTpnB,MAAOyW,EAAM1B,aACb3T,QAAS0qB,EAAWlL,uBACpB2F,SAAU5kB,KAAKutB,yBAKzB,EA7KA,CAAoC,IAAMzH,WCN1C,eACE,WAAYtC,GAAZ,MACE,YAAMA,IAAM,K,OAYd,EAAA8H,eAAiB,SAAC5H,EAA0Cvc,GAC1D,IAAMyQ,EAA0B,EAAKyM,MAAMzM,cAC3CA,EAAczQ,GAASuc,EAAUE,cAAcvlB,MAC/C,EAAK6lB,SAAS,CAAEtM,cAAeA,IAE/B,EAAK4L,MAAM8H,eAAe1T,IAG5B,EAAAqW,gBAAkB,WAChB,IAAIrW,EAAgB,EAAKyM,MAAMzM,cAC/BA,EAAclW,KAAK,IACnB,EAAKwiB,SAAS,CAAEtM,cAAeA,IAEzB,MAAsB,EAAK4L,MAAzB1O,EAAK,QAAE8P,EAAQ,WACvB9P,EAAM8C,cAAgBA,EACtBgN,EAAS9P,IAGX,EAAAoZ,mBAAqB,SAAC/mB,GACpB,IAAIyQ,EAA0B,EAAKyM,MAAMzM,cACzCA,EAAc5S,OAAOmC,EAAO,GAC5B,EAAK+c,SAAS,CAAEtM,cAAeA,IAE/B,EAAK4L,MAAM8H,eAAe1T,IAjC1B,EAAKyM,MAAQ,CACXzM,cAAe,I,EAsErB,OA3EkC,OAShC,YAAAsS,kBAAA,WACU,IAAApV,EAAU9U,KAAKwjB,MAAV,MACbxjB,KAAKkkB,SAAS,CAAEtM,cAAe9C,EAAM8C,iBA6BvC,YAAA0M,OAAA,sBAEMqI,EAAa3sB,KAAKqkB,MAAMzM,cAAc3X,KAAI,SAAC4a,EAAS1T,GAetD,OAbE,yBAAKod,UAAW,WACd,kBAAC,GAAS,CACRtZ,MAAO9D,EAAQ,EAAI,yBACnB9I,MAAO,EAAKgmB,MAAMzM,cAAczQ,GAChCwd,Y5C9CkB,iB4C+ClBC,SAAU,SAACC,GAAU,SAAKyG,eAAezG,EAApB,IACrBY,QAAS,6BAEX,kBAAC,UAAM,CAACoH,QAAS,YAAatD,QAAS,WAAM,SAAK2E,mBAAL,KAA8B,SAQjF,OACE,6BACGvB,EAED,yBAAKpI,UAAW,WACd,kBAAC,mBAAe,CAACG,MAAO,GAAIe,QAAS,2CAAyC,4BAG9E,kBAAC,UAAM,CAACoH,QAAS,YAAatD,QAASvpB,KAAKiuB,iBAAe,QAOrE,EA3EA,CAAkC,IAAMnI,WCtBzB,IACb,CACEnnB,IAAK,MACLsM,MAAO,OAET,CACEtM,IAAK,yBACLsM,MAAO,0BAET,CACEtM,IAAK,aACLsM,MAAO,eCiBP,IAAe,EAEnB,eACE,WAAYuY,GAAZ,MACE,YAAMA,IAAM,K,OAiBd,EAAAuC,kBAAoB,IAAE/B,SAAS,EAAKR,MAAMwC,WAAY,KAEtD,EAAAmI,YAAc,SAACC,GACP,MAAwB,EAAK5K,MAA3B1O,EAAK,QAAEkR,EAAU,aACzBlR,EAAMxF,UAAY8e,EAClBpI,KAGF,EAAAqI,iBAAmB,SAAC7e,GACV,IAAAsF,EAAU,EAAK0O,MAAV,MACb1O,EAAMtF,SAAWA,EAASoU,cAAcvlB,MAEpC,EAAKyc,QAAQhG,EAAMtF,WAErB,EAAKuW,qBAIT,EAAAuI,oBAAsB,SAAC/e,GACf,MAAwB,EAAKiU,MAA3B1O,EAAK,QAAEkR,EAAU,aACzBlR,EAAMvF,YAAcA,EACpByW,KArCA,EAAK3B,MAAQ,CACXkK,WAAY,GACZC,YAAY,G,EAqHlB,OA1HoC,OASlC,YAAAtE,kBAAA,WACE,IAAe,EACflqB,KAAKyuB,iBACLzuB,KAAK8a,QAAQ9a,KAAKwjB,MAAM1O,MAAMtF,WAGhC,YAAA+a,qBAAA,WACE,IAAe,GA2BjB,YAAAzP,QAAA,SAAQ4T,GACN,IAAMC,GAASD,IAASA,GAAO,IAAMA,GA/DzB,MAmEZ,OAHA1uB,KAAKkkB,SAAS,CACZsK,WAAYG,IAEPA,GAGT,YAAAC,sBAAA,SACEC,EACAC,EACAC,GAEA,O9CxE2B,I8CwEpBF,EAAU/Z,MAAMc,eAAejX,KAGxC,YAAA8vB,eAAA,sBACU3Z,EAAU9U,KAAKwjB,MAAV,MACbxjB,KAAKwjB,MAAM2G,WAAWxH,gBAAgBjY,MAAK,SAAC6jB,GACrC,KACH,EAAKrK,SAAS,CAAEqK,WAAYA,KAEvBzZ,EAAMxF,WAAaif,EAAWhtB,QAAU,IAC3CuT,EAAMxF,UAAYif,EAAW,SAMrC,YAAAjK,OAAA,WACU,IAAAxP,EAAU9U,KAAKwjB,MAAV,MAEb,OACE,yBAAKe,UAAW,WACd,kBAAC,GAAU,CACTmB,cAAY,EACZkB,WAAY,EACZ3b,MAAO,iBACPwa,QAAS,iEACT2H,iBAAkB,0BAClB/uB,MAAOyW,EAAMxF,UACb7P,QAASO,KAAKqkB,MAAMkK,WACpB3J,SAAU5kB,KAAKmuB,cAGjB,kBAAC,GAAS,CACRzI,cAAY,EACZC,WAAY,EACZiB,WAAY,EACZ3b,MAAO,MACPwa,QAAS,sDACTpnB,MAAOyW,EAAMtF,SACbgY,SAAUxnB,KAAKqkB,MAAMmK,WACrB7J,YAAa,OACbC,SAAU5kB,KAAKquB,mBAGjB,kBAAC,GAAU,CACT3I,cAAY,EACZC,WAAY,EACZiB,WAAY,EACZ3b,MAAO,aACPwa,QACE,6B,wCAEE,4BACE,kEACA,0FACA,6FAINpnB,MAAOyW,EAAMvF,YACb9P,QAAS,GACTmlB,SAAU5kB,KAAKsuB,wBAKzB,EA1HA,CAAoC,IAAMxI,WC9B3B,IACb,CAAEnnB,IAAK,WAAYsM,MAAO,cAC1B,CAAEtM,IAAK,cAAesM,MAAO,oBAC7B,CAAEtM,IAAK,eAAgBsM,MAAO,aAC9B,CAAEtM,IAAK,cAAesM,MAAO,iBAC7B,CAAEtM,IAAK,QAASsM,MAAO,UACvB,CAAEtM,IAAK,SAAUsM,MAAO,kBCqBtB,IAAe,EAEnB,eACE,WAAYuY,GAAZ,MACE,YAAMA,IAAM,K,OAyDd,EAAAwL,gBAAkB,SAAC/U,GACX,MAAkC,EAAKuJ,MAArC1O,EAAK,QAAE8P,EAAQ,WAAEoB,EAAU,aACnClR,EAAMW,OAASwE,EACf2K,EAAS9P,GACTkR,KAGF,EAAAiJ,mBAAqB,SAAC7pB,GACd,MAA2C,EAAKoe,MAA9C1O,EAAK,QAAE8P,EAAQ,WAAEsK,EAAmB,sBAC5Cpa,EAAMmB,WAAa7Q,EACnBwf,EAAS9P,GACToa,EAAoBpa,EAAMmB,WAAWtX,MAGvC,EAAAkrB,cAAgB,SAAClQ,GACT,MAAkC,EAAK6J,MAArC1O,EAAK,QAAE8P,EAAQ,WAAEoB,EAAU,aACnClR,EAAM6E,MAAQA,EAEV7E,EAAM6E,OhDjGyB,IgDiGhB7E,EAAMc,eAAejX,MACtCmW,EAAMgV,uBAA8C,mBAArBhV,EAAM6E,MAAMvU,MAExC0P,EAAMgV,yBACThV,EAAMkG,yBAA2B,IAGnC4J,EAAS9P,GACTkR,KAGF,EAAAD,kBAAoB,IAAE/B,SAAS,EAAKR,MAAMwC,WAAY,KAEtD,EAAAiE,iCAAmC,SAACvG,GAC5B,MAAsB,EAAKF,MAAzB1O,EAAK,QAAE8P,EAAQ,WACvB9P,EAAMkG,yBAA2B0I,EAAUE,cAAcvlB,MACzDumB,EAAS9P,GAGT,EAAKiR,qBA7FL,EAAK1B,MAAQ,CACXtK,SAAU,I,EAyIhB,OA7IoC,OAQlC,YAAAmQ,kBAAA,sBACQ,EAAkClqB,KAAKwjB,MAArC1O,EAAK,QAAEqV,EAAU,aAAEvF,EAAQ,WACnC,IAAe,EACfuF,EAAWlH,gBAAgBvY,MAAK,SAACqP,GAC1B,KACE,IAAE7F,KAAK6F,EAAU,CAAEpb,IAAK,QAC3Bob,EAASqQ,QAAQ,CAAEzrB,IAAK,KAAMsM,MhDxBZ,4BgD2BpB,EAAKiZ,SAAS,CACZnK,SAAUA,IAGNjF,EAAMW,QAAWX,EAAMW,OAAO9W,MAAQob,EAEjCjF,EAAMW,SAAW,IAAEvB,KAAK6F,EAAU,CAAC,MAAOjF,EAAMW,OAAO9W,QAChEmW,EAAMW,OAASsE,EAAS,IAFxBjF,EAAMW,OAASsE,EAAS,GAK1B6K,EAAS9P,OAIbqV,EAAW/K,kBAAkBlF,iBAAiBxP,MAAK,SAACyP,GAC7C,KACH,EAAKqJ,MAAM6G,aAAa,IAAEzV,OAAOuF,EAAa,QAGzCrF,EAAM6E,OAAU7E,EAAM6E,MAAMhb,MAC/BmW,EAAM6E,MAAQ,IAAEzF,KAAKiG,EAAa,CAAC,MAAO,qBAC1CyK,EAAS9P,QAKVA,EAAMmB,YAAenB,EAAMmB,WAAWtX,MACzCmW,EAAMmB,WAAakZ,GAAa,GAChCvK,EAAS9P,IAGXqV,EAAW/K,kBAAkB/E,2BAA2B3P,MAAK,SAAC0kB,GACvD,IACH,EAAK5L,MAAM8G,cAAc,IAAEjjB,OAAO+nB,GAAgB,SAAC5xB,GAAM,OAAAA,EAAEid,YAAY5N,SAASiI,EAAMmB,WAA7B,aAK/D,YAAAsU,qBAAA,WACE,IAAe,GA2CjB,YAAAjG,OAAA,WACQ,MAAoBtkB,KAAKwjB,MAAvB1O,EAAK,QAAE0V,EAAM,SAErB,OACE,yBAAKjG,UAAW,WACd,kBAAC,GAAU,CACTmB,cAAY,EACZkB,WAAY,EACZ3b,MAAO,UACPwa,QAAS,uBACT2H,iBAAkB,oBAClB/uB,MAAOyW,EAAMW,OACbhW,QAASO,KAAKqkB,MAAMtK,SACpB6K,SAAU5kB,KAAKgvB,kBAGjB,kBAAC,GAAU,CACTtJ,cAAY,EACZC,WAAY,EACZ1a,MAAO,OACPwa,QAAS,wBACTpnB,MAAOyW,EAAMmB,WACbxW,QAAS0vB,GACTvK,SAAU5kB,KAAKivB,qBAGjB,kBAAC,GAAU,CACTvJ,cAAY,EACZC,WAAY,EACZ1a,MAAO,WACPwa,QAAS,gBACTpnB,MAAOyW,EAAM6E,MACbla,QAAS+qB,EACT5F,SAAU5kB,KAAK6pB,gBAGjB,yBAAK5lB,MAAQ6Q,EAAMgV,uBAA+C,GAAtB,CAAE5E,QAAS,SACrD,kBAAC,SAAK,CAACphB,IAAK,GAAIzF,MAAOyW,EAAMkG,yBAA0B4J,SAAU5kB,KAAKiqB,sCAKhF,EA7IA,CAAoC,IAAMnE,WCgB1C,eAKE,WAAYtC,GAAZ,MACE,YAAMA,IAAM,KA2Cd,EAAA6L,iBAAmB,SAACC,GACd,EAAKxa,MAAMc,iBAAmB0Z,IAGhC,EAAKC,iBACL,EAAKza,MAAMc,eAAiB0Z,EAC5B,EAAKxa,MAAM1B,aAAe,EAAKoQ,MAAM2G,WAAWnK,uBAAuB,EAAKlL,OAE5E,EAAK0a,iBAIT,EAAAA,aAAe,WACb,EAAKhM,MAAMoB,SAAS,EAAK9P,OACzB,EAAK0O,MAAMwC,cAmBb,EAAAsE,cAAgB,SAAClY,GAMf,GALA,EAAK8R,SAAS,CACZyJ,iBAAkB,IAAE/Y,OAAOxC,EAAS,OACpCD,WAAY,IAAEyC,OAAOxC,EAAS,SAG3B,EAAK0C,MAAMjD,QAAU,EAAKiD,MAAMjD,OAAOlT,KAAQ,EAAKmW,MAAMhD,eAAgB,CAC7E,IAAMD,EAAS,IAAEqC,KAAK9B,GAAS,SAAC5U,GAAM,OAAAA,EAAEmB,MAAQ,EAAKmW,MAAMjD,OAArB,OAC5B,EAAKiD,MAAMjD,OAArBA,GAA6D,CAAElT,IAAK,MjDhI5C,IiDmItB,EAAKmW,MAAMc,eAAejX,IAC5B,EAAK8wB,gBAAgB,EAAK3a,MAAM8C,eACtB,EAAK9C,MAAMjD,QAAW,EAAKiD,MAAMjD,OAAOlT,KAClD,EAAK+wB,qBAAqBtd,EAAQ7Q,QAGpC,EAAKiuB,gBAiBP,EAAAG,oBAAsB,SAACC,EAAgCC,QAAhC,IAAAD,OAAA,QAAgC,IAAAC,OAAA,GAC/C,MAAkC,EAAKrM,MAArC1O,EAAK,QAAEqV,EAAU,aAAEvF,EAAQ,WACnCuF,EAAW5V,iBAAiB7J,MAAK,SAAC8J,GAChC,IAAI2Y,EAAa3Y,EACbqb,IAAkB/a,EAAMqR,qBAC1BgH,EAAa,EAAK2C,kBAAkBtb,EAAaob,IAGnD,EAAK1L,SAAS,CAAEiJ,WAAYA,IAEvBrY,EAAMmB,YAAenB,EAAMmB,WAAWtX,KAAQ,IAAEuV,KAAKiZ,GAAY,SAAC3vB,GAAM,OAAAA,EAAEmB,MAAQmW,EAAMmB,WAAhB,SAC3EnB,EAAMmB,WAAa,CAAEtX,IAAK,KAAMsM,MAAO,kBAAoBkiB,EAAW5rB,OAAS,MAGjFqjB,EAAS9P,OAIb,EAAAgb,kBAAoB,SAACtb,EAAgCob,GACnD,OAAIA,EACK,IAAEhb,OACP,IAAEvN,OAAOmN,GAAa,SAACyB,GAAe,SAAK2Z,wBAAL,MACtC,SAIG,IAAEhb,OAAOJ,EAAa,UAG/B,EAAAob,wBAA0B,SAAC3Z,GAGzB,OjD3L4B,IiDyLV,EAAKuN,MAAV,MAGL5N,eAAejX,KACF,WAAnBsX,EAAWtX,KACQ,eAAnBsX,EAAWtX,KACQ,uBAAnBsX,EAAWtX,KACQ,mCAAnBsX,EAAWtX,OAEJ,EAAKsT,UAAUiC,MAAK,SAAC9O,GAAc,OAAAA,IAAS6Q,EAAT,QAAgD,MAApBA,EAAWhL,QAMrF,EAAA+hB,iBAAmB,SAAC+C,GAClB,EAAK7L,SAAS,CACZiJ,WAAY4C,KAIhB,EAAA1F,aAAe,SAACG,GACd,EAAKtG,SAAS,CACZsG,OAAQA,KAIZ,EAAAiF,gBAAkB,SAAC7X,GACjB,IAAIoY,EAAyC,GAI3CA,EAHGpY,GAA0C,IAAzBA,EAAcrW,OAGZ,EAAK0uB,wBAAwBrY,GAF7B,EAAKyM,MAAMlS,WAInC,EAAK2C,MAAMkZ,kBAAoB,EAAKkC,uBAAuBF,GACtD,EAAKlb,MAAMkZ,oBACd,EAAKlZ,MAAMhD,gBAAiB,GAE9B,EAAKgD,MAAM8C,cAAgBA,EACtB,EAAK9C,MAAMjD,QAAW,EAAKiD,MAAMjD,OAAOlT,KAC3C,EAAK+wB,qBAAqBM,EAAoBzuB,QAGhD,EAAK2iB,UAAS,SAACG,GAAU,cAAMA,GAAK,CAAEsJ,iBAAb,OAEzB,EAAKnK,MAAMoB,SAAS,EAAK9P,OACzB,EAAKqb,yBAzLL,IAAMC,EAAsC,CAC1Cxa,eAAgB,EAAiB,GACjCuB,kBAAkB,EAClBS,cAAe,I,OAGjB,EAAK9C,MAAQhX,OAAO2L,OAAO2mB,EAAc5M,EAAM1O,OAE/C,EAAQ,EAAKA,OAEb,EAAKuP,MAAQ,CACXmG,OAAQ,GACRrY,WAAY,GACZgb,WAAY,GACZQ,iBAAkB,GAClB0C,mBAAoB7M,EAAM9D,MAAQnS,EAASiW,EAAM9D,OAAO1R,WAAa,OAGvE,EAAKkhB,oBAAsB,EAAKA,oBAAoBtwB,KAAK,GACzD,EAAKsnB,gBAAkB,EAAKA,gBAAgBtnB,KAAK,GACjD,EAAKomB,kBAAoBxB,EAAM2G,WAAW1qB,QAAQulB,kBAElDxB,EAAMoB,SAAS,EAAK9P,O,EAmbxB,OAhdiC,OAgC/B,YAAAwb,mBAAA,SAAmBC,EAA4BC,EAAiCvd,GAAhF,WACQ,EAAkCjT,KAAKwjB,MAArCoB,EAAQ,WAAElF,EAAK,QAAEyK,EAAU,aAC/BzK,GAAS1f,KAAKqkB,MAAMgM,qBAAuB9iB,EAASmS,GAAO1R,aAC7DhO,KAAKkkB,SAAQ,OACRlkB,KAAKqkB,OAAK,CACbgM,mBAAoB9iB,EAASmS,GAAO1R,cAEtCmc,EAAWpK,yBAAyB/f,KAAK8U,OACpCqV,EAAWlL,uBAAuB/K,MAAK,SAAC9W,GAAM,OAAAA,EAAEuB,MAAQ,EAAKmW,MAAM1B,aAArB,SACjDpT,KAAK8U,MAAM1B,aAAe+W,EAAWnK,uBAAuBhgB,KAAK8U,OACjE8P,EAAS5kB,KAAK8U,UAwBpB,YAAA4a,qBAAA,SAAqBe,GjDxGO,IiDyGtBzwB,KAAK8U,MAAMc,eAAejX,IAC5BqB,KAAK8U,MAAMjD,OAAS,CAClBlT,IAAK,KACLsM,MAAO,kBAAoBwlB,EAAmB,IAAMzwB,KAAKqkB,MAAMlS,WAAW5Q,OAAS,KAGrFvB,KAAK8U,MAAMjD,OAAS,CAClBlT,IAAK,KACLsM,MAAO,kBAAoBwlB,EAAmB,KAIlDzwB,KAAKwjB,MAAMoB,SAAS5kB,KAAK8U,QAuB3B,YAAAoR,gBAAA,SAAgBwK,GAAhB,gBAAgB,IAAAA,OAAA,GACR,MAAoC1wB,KAAKwjB,MAAvC1O,EAAK,QAAEqV,EAAU,aAAEnE,EAAU,aAEjClR,EAAME,YACRmV,EAAWtV,oBAAoBC,GAAOpK,MAAK,SAACyE,GAC1C,EAAK8C,UAAY9C,EAASvO,KAC1B,EAAK+uB,qBAAoB,EAAMe,GAC/B1K,OAGFhmB,KAAKkkB,SAAS,CAAEiJ,WAAY,MAmFhC,YAAA8C,wBAAA,SAAwBpV,GACtB,IAAI8V,EAAuB3wB,KAAKqkB,MAAMlS,WAUtC,OATA,IAAEzM,QAAQmV,GAAS,SAACxT,GACH,KAAXA,IACFspB,EAAkB,IAAE/b,OAClB,IAAEvN,OAAOspB,GAAiB,SAAC9e,GAAW,OAAAA,EAAOlT,IAAI4Z,cAAc1L,SAASxF,EAAlC,kBACtC,WAKCspB,GAGT,YAAAzB,oBAAA,SAAoB9pB,GAClB,IAAIurB,EAAqC3wB,KAAKqkB,MAAMlS,WAAW9K,QAAO,SAACwK,GACrE,OAAOA,EAAO4I,YAAY5N,SAASzH,MAGrCpF,KAAKkkB,SAAS,CACZyJ,iBAAkBgD,IAGf3wB,KAAK8U,MAAMjD,QAAW7R,KAAK8U,MAAMjD,OAAOlT,KAAQqB,KAAK8U,MAAMjD,OAAO4I,YAAY5N,SAASzH,IAC1FpF,KAAK0vB,qBAAqBiB,EAAgBpvB,QAG5CvB,KAAKwvB,gBAGP,YAAAU,uBAAA,SAAuB9d,GACrB,OjDxQ0B,IiDwQnBpS,KAAK8U,MAAMc,eAAejX,KAA0ByT,EAAQ7Q,OAAS,GAAK6Q,EAAQ7Q,QAAU,GAGrG,YAAA4uB,sBAAA,WAEInwB,KAAK8U,MAAMjD,QACX7R,KAAK8U,MAAMjD,OAAOlT,MACjB,IAAEkO,SACD,IAAE5M,IAAID,KAAKqkB,MAAMsJ,kBAAkB,SAACnwB,GAAM,OAAAA,EAAA,OAC1CwC,KAAK8U,MAAMjD,OAAOlT,MAGpBqB,KAAK4wB,uBAGP5wB,KAAKwvB,gBAGP,YAAAD,eAAA,WACU,IAAAza,EAAU9U,KAAKwjB,MAAV,MACT1O,EAAMc,eAAejX,IjD5RC,IiD6RxBmW,EAAME,YAAc,IAGtBhV,KAAKkkB,SAAS,CACZyJ,iBAAkB,GAClBxb,WAAY,GACZqY,OAAQ,KAGVxqB,KAAK6wB,2BACL7wB,KAAK8wB,uBACL9wB,KAAK4wB,wBAGP,YAAAC,yBAAA,WACU,IAAA/b,EAAU9U,KAAKwjB,MAAV,MACb1O,EAAMmB,WAAa,CACjBtX,IAAK,KACLsM,MAAO,KAET6J,EAAM8C,cAAgB,IAGxB,YAAAkZ,qBAAA,WACU,IAAAhc,EAAU9U,KAAKwjB,MAAV,MACb1O,EAAMW,OAAS,GACfX,EAAM6E,MAAQ,GACd7E,EAAMgV,wBAAyB,EAC/BhV,EAAMkG,yBAA2B,GACjClG,EAAM0M,iBAAkB,EACxB1M,EAAM+C,oBAAsB,GAAqB,GACjD/C,EAAM2M,oBAAqB,EAC3B3M,EAAM+F,QAAU,GAChB/F,EAAMsG,+BAAgC,EACtCtG,EAAMhD,gBAAiB,EACvBgD,EAAMkZ,mBAAoB,EAC1BlZ,EAAMnB,uBAAwB,EAC9BmB,EAAMiI,wBAA0B,GAChCjI,EAAMmI,aAAe,GACrBnI,EAAMnD,oBAAsB,GAC5B3R,KAAK+wB,gBACL/wB,KAAKgxB,iBACLhxB,KAAKixB,YAGP,YAAAL,qBAAA,WACU,IAAA9b,EAAU9U,KAAKwjB,MAAV,MACb1O,EAAMjD,OAAS,GACfiD,EAAMoC,UAAY,GAClBpC,EAAMqC,kBAAmB,EACzBrC,EAAMsG,+BAAgC,EACtCtG,EAAMhD,gBAAiB,EACvBgD,EAAMmC,YAAc,GACpBnC,EAAM/C,gBAAkB,GACxB+C,EAAMqR,oBAAqB,GAG7B,YAAA4K,cAAA,WACE/wB,KAAKwjB,MAAM1O,MAAM+I,QAAU,IAG7B,YAAAmT,eAAA,WACEhxB,KAAKwjB,MAAM1O,MAAM/I,SAAW,IAG9B,YAAAklB,SAAA,WACU,IAAAnc,EAAU9U,KAAKwjB,MAAV,MACb1O,EAAMtF,SAAW,GACjBsF,EAAMxF,UAAY,IAGpB,YAAAgV,OAAA,WACQ,IAAExP,EAA4B9U,KAAvB,MAAEqvB,EAAqBrvB,KAAL,iBACzBkxB,EAAalxB,KAAKglB,kBACpB,EACA,EAAiB3d,QAAO,SAACsX,GAAa,OjDhWR,IiDgWQA,EAAShgB,OAEnD,OACE,yBAAK4lB,UAAW,iBACd,yBAAKA,UAAW,WACd,kBAAC,GAAU,CACTmB,cAAY,EACZkB,WAAY,EACZ3b,MAAO,WACPwa,QAAS,4BACTpnB,MAAOyW,EAAMc,eACbnW,QAASyxB,EACTtM,SAAUyK,KjDrXU,IiDyXvBva,EAAMc,eAAejX,KACpB,kBAAC,GAAc,CACbmW,MAAOA,EACPqY,WAAYntB,KAAKqkB,MAAM8I,WACvBhD,WAAYnqB,KAAKwjB,MAAM2G,WACvBnE,WAAYhmB,KAAKwjB,MAAMwC,WACvBpB,SAAU5kB,KAAKwjB,MAAMoB,SACrB0F,cAAetqB,KAAKsqB,cACpBpE,gBAAiBlmB,KAAKkmB,gBACtB8G,iBAAkBhtB,KAAKgtB,mBjDjYL,IiDqYrBlY,EAAMc,eAAejX,KACpB,kBAAC,GAAc,CACbmW,MAAOA,EACPqY,WAAYntB,KAAKqkB,MAAM8I,WACvBhD,WAAYnqB,KAAKwjB,MAAM2G,WACvBnE,WAAYhmB,KAAKwjB,MAAMwC,WACvBpB,SAAU5kB,KAAKwjB,MAAMoB,SACrB0F,cAAetqB,KAAKsqB,cACpBpE,gBAAiBlmB,KAAKkmB,gBACtB8G,iBAAkBhtB,KAAKgtB,mBjDtYG,IiD0Y7BlY,EAAMc,eAAejX,KACpB,kBAAC,GAAO,CACNmW,MAAOA,EACPqY,WAAYntB,KAAKqkB,MAAM8I,WACvBhD,WAAYnqB,KAAKwjB,MAAM2G,WACvBnE,WAAYhmB,KAAKwjB,MAAMwC,WACvBpB,SAAU5kB,KAAKwjB,MAAMoB,SACrB0F,cAAetqB,KAAKsqB,cACpB0C,iBAAkBhtB,KAAKgtB,mBjDzZQ,IiD6ZlClY,EAAMc,eAAejX,KACpB,kBAAC,GAAuB,CACtBmW,MAAOA,EACPkR,WAAYhmB,KAAKwjB,MAAMwC,WACvBpB,SAAU5kB,KAAKwjB,MAAMoB,SACrB0F,cAAetqB,KAAKsqB,cACpBE,OAAQxqB,KAAKqkB,MAAMmG,OACnBH,aAAcrqB,KAAKqqB,aACnBF,WAAYnqB,KAAKwjB,MAAM2G,ajDpaI,IiDwa9BrV,EAAMc,eAAejX,KACpB,kBAAC,GAAc,CACbmW,MAAOA,EACPkR,WAAYhmB,KAAKwjB,MAAMwC,WACvBpB,SAAU5kB,KAAKwjB,MAAMoB,SACrB0F,cAAetqB,KAAKsqB,cACpBE,OAAQxqB,KAAKqkB,MAAMmG,OACnBH,aAAcrqB,KAAKqqB,aACnB6E,oBAAqBlvB,KAAKkvB,oBAC1B/E,WAAYnqB,KAAKwjB,MAAM2G,ajDhbiB,IiDob3CrV,EAAMc,eAAejX,KACpB,kBAAC,GAAiC,CAChCmW,MAAOA,EACPkR,WAAYhmB,KAAKwjB,MAAMwC,WACvBpB,SAAU5kB,KAAKwjB,MAAMoB,SACrB0F,cAAetqB,KAAKsqB,cACpBH,WAAYnqB,KAAKwjB,MAAM2G,ajDtbJ,IiD0btBrV,EAAMc,eAAejX,KACpB,kBAAC,GAAc,CACbmW,MAAOA,EACPkR,WAAYhmB,KAAKwjB,MAAMwC,WACvBpB,SAAU5kB,KAAKwjB,MAAMoB,SACrBuF,WAAYnqB,KAAKwjB,MAAM2G,ajD/bJ,IiDmctBrV,EAAMc,eAAejX,KjDlcQ,IiDkcmBmW,EAAMc,eAAejX,KACpE,kBAAC,GAAM,CACLmW,MAAOA,EACP8P,SAAU5kB,KAAKwjB,MAAMoB,SACrBoB,WAAYhmB,KAAKwjB,MAAMwC,WACvBsE,cAAetqB,KAAKsqB,cACpBqD,iBAAkB3tB,KAAKqkB,MAAMsJ,iBAC7BxD,WAAYnqB,KAAKwjB,MAAM2G,ajDjdL,IiDqdrBrV,EAAMc,eAAejX,KACpB,kBAAC,GAAY,CACXmW,MAAOA,EACP8P,SAAU5kB,KAAKwjB,MAAMoB,SACrBoB,WAAYhmB,KAAKwjB,MAAMwC,WACvBsF,eAAgBtrB,KAAKyvB,gBACrB9B,iBAAkB3tB,KAAKqkB,MAAMsJ,iBAC7BxD,WAAYnqB,KAAKwjB,MAAM2G,cjD3dQ,IiD+djCrV,EAAMc,eAAejX,KjD9dQ,IiD+d7BmW,EAAMc,eAAejX,MACrB,kBAAC,GAAO,CACNmW,MAAOA,EACP8P,SAAU5kB,KAAKwjB,MAAMoB,SACrBoB,WAAYhmB,KAAKwjB,MAAMwC,WACvBmE,WAAYnqB,KAAKwjB,MAAM2G,WACvBK,OAAQxqB,KAAKqkB,MAAMmG,SAIvB,kBAAC,GAAgB,CACf1V,MAAOA,EACPkR,WAAYhmB,KAAKwjB,MAAMwC,WACvBpB,SAAU5kB,KAAKwjB,MAAMoB,SACrBsB,gBAAiBlmB,KAAKkmB,kBAGxB,kBAAC,SAAK,CAACiL,KAAM,QAASC,MAAO,WAIrC,EAhdA,CAAiC,iBC5CjC,wCAMO,IAAM,GAAS,IAAI,mBAA2D,GAClFC,gBAAgB,IAChBC,eAAe","file":"module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","\nvar content = require(\"!!../../node_modules/css-loader/dist/cjs.js??ref--8-1!../../node_modules/postcss-loader/src/index.js??ref--8-2!../../node_modules/sass-loader/lib/loader.js!./plugin.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/dist/cjs.js??ref--8-1!../../node_modules/postcss-loader/src/index.js??ref--8-2!../../node_modules/sass-loader/lib/loader.js!./plugin.css\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/dist/cjs.js??ref--8-1!../../node_modules/postcss-loader/src/index.js??ref--8-2!../../node_modules/sass-loader/lib/loader.js!./plugin.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target, parent) {\n  if (parent){\n    return parent.querySelector(target);\n  }\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target, parent) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\tif(options.attrs.nonce === undefined) {\n\t\tvar nonce = getNonce();\n\t\tif (nonce) {\n\t\t\toptions.attrs.nonce = nonce;\n\t\t}\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction getNonce() {\n\tif (typeof __webpack_nonce__ === 'undefined') {\n\t\treturn null;\n\t}\n\n\treturn __webpack_nonce__;\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = typeof options.transform === 'function'\n\t\t ? options.transform(obj.css) \n\t\t : options.transform.default(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__7__;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(true);\n// Module\nexports.push([module.id, \".entityDropdown {\\n  min-width: 80px; }\\n\\n.settings {\\n  max-width: 600px; }\\n\", \"\",{\"version\":3,\"sources\":[\"plugin.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,eAAe,EAAE;;AAEnB;EACE,gBAAgB,EAAE\",\"file\":\"plugin.css\",\"sourcesContent\":[\".entityDropdown {\\n  min-width: 80px; }\\n\\n.settings {\\n  max-width: 600px; }\\n\"]}]);\n// Exports\nmodule.exports = exports;\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","\nvar content = require(\"!!../node_modules/css-loader/dist/cjs.js??ref--8-1!../node_modules/postcss-loader/src/index.js??ref--8-2!../node_modules/sass-loader/lib/loader.js!./instana-grafana.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/css-loader/dist/cjs.js??ref--8-1!../node_modules/postcss-loader/src/index.js??ref--8-2!../node_modules/sass-loader/lib/loader.js!./instana-grafana.css\", function() {\n\t\tvar newContent = require(\"!!../node_modules/css-loader/dist/cjs.js??ref--8-1!../node_modules/postcss-loader/src/index.js??ref--8-2!../node_modules/sass-loader/lib/loader.js!./instana-grafana.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(true);\n// Module\nexports.push([module.id, \"path[d=\\\"M18.71,7.21a1,1,0,0,0-1.42,0L9.84,14.67,6.71,11.53A1,1,0,1,0,5.29,13l3.84,3.84a1,1,0,0,0,1.42,0l8.16-8.16A1,1,0,0,0,18.71,7.21Z\\\"] {\\n  display: none; }\\n\", \"\",{\"version\":3,\"sources\":[\"instana-grafana.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,aAAa,EAAE\",\"file\":\"instana-grafana.css\",\"sourcesContent\":[\"path[d=\\\"M18.71,7.21a1,1,0,0,0-1.42,0L9.84,14.67,6.71,11.53A1,1,0,1,0,5.29,13l3.84,3.84a1,1,0,0,0,1.42,0l8.16-8.16A1,1,0,0,0,18.71,7.21Z\\\"] {\\n  display: none; }\\n\"]}]);\n// Exports\nmodule.exports = exports;\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ref--8-1!../../../node_modules/postcss-loader/src/index.js??ref--8-2!../../../node_modules/sass-loader/lib/loader.js!./ApplicationBoundaryScope.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js??ref--8-1!../../../node_modules/postcss-loader/src/index.js??ref--8-2!../../../node_modules/sass-loader/lib/loader.js!./ApplicationBoundaryScope.css\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ref--8-1!../../../node_modules/postcss-loader/src/index.js??ref--8-2!../../../node_modules/sass-loader/lib/loader.js!./ApplicationBoundaryScope.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(true);\n// Module\nexports.push([module.id, \".dropdown {\\n  position: relative;\\n  background: transparent;\\n  width: '32px';\\n  height: '32px';\\n  margin-right: '4px'; }\\n\\n.dropdown-list {\\n  transition: max-height .2s ease-out;\\n  max-height: 0;\\n  overflow: hidden;\\n  z-index: 2;\\n  position: absolute; }\\n\\n.dropdown-list-active {\\n  overflow: hidden;\\n  z-index: 2;\\n  /* we set a zIndex to ensure that the overlay is above other elements and does not move any DOM elements. */\\n  max-height: 1000px;\\n  opacity: 1;\\n  position: absolute; }\\n\\n.iconTextContainer {\\n  display: inline-flex; }\\n\\n.iconStyle {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center; }\\n\\n.iconTextStyle {\\n  padding: 7px; }\\n\", \"\",{\"version\":3,\"sources\":[\"ApplicationBoundaryScope.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,kBAAkB;EAClB,uBAAuB;EACvB,aAAa;EACb,cAAc;EACd,mBAAmB,EAAE;;AAEvB;EACE,mCAAmC;EACnC,aAAa;EACb,gBAAgB;EAChB,UAAU;EACV,kBAAkB,EAAE;;AAEtB;EACE,gBAAgB;EAChB,UAAU;EACV,2GAA2G;EAC3G,kBAAkB;EAClB,UAAU;EACV,kBAAkB,EAAE;;AAEtB;EACE,oBAAoB,EAAE;;AAExB;EACE,aAAa;EACb,mBAAmB;EACnB,uBAAuB,EAAE;;AAE3B;EACE,YAAY,EAAE\",\"file\":\"ApplicationBoundaryScope.css\",\"sourcesContent\":[\".dropdown {\\n  position: relative;\\n  background: transparent;\\n  width: '32px';\\n  height: '32px';\\n  margin-right: '4px'; }\\n\\n.dropdown-list {\\n  transition: max-height .2s ease-out;\\n  max-height: 0;\\n  overflow: hidden;\\n  z-index: 2;\\n  position: absolute; }\\n\\n.dropdown-list-active {\\n  overflow: hidden;\\n  z-index: 2;\\n  /* we set a zIndex to ensure that the overlay is above other elements and does not move any DOM elements. */\\n  max-height: 1000px;\\n  opacity: 1;\\n  position: absolute; }\\n\\n.iconTextContainer {\\n  display: inline-flex; }\\n\\n.iconStyle {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center; }\\n\\n.iconTextStyle {\\n  padding: 7px; }\\n\"]}]);\n// Exports\nmodule.exports = exports;\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { getBackendSrv } from '@grafana/runtime';\nimport { BackendSrvRequest } from '@grafana/runtime/services/backendSrv';\nimport { InstanaOptions } from '../types/instana_options';\nimport { DataSourceInstanceSettings } from '@grafana/data';\n\nexport const getRequest = (options: InstanaOptions, endpoint: string, swallowError = false, maxRetries = 1) => {\n  const request = {\n    method: 'GET',\n    url: options.url + endpoint,\n  };\n\n  return doRequest(options, request, swallowError, maxRetries);\n};\n\nexport const postRequest = (\n  options: InstanaOptions,\n  endpoint: string,\n  data: {},\n  swallowError = false,\n  maxRetries = 0\n) => {\n  const request = {\n    method: 'POST',\n    url: options.url + endpoint,\n    data: data,\n  };\n\n  return doRequest(options, request, swallowError, maxRetries);\n};\n\nfunction doRequest(\n  options: InstanaOptions,\n  request: BackendSrvRequest,\n  swallowError: boolean,\n  maxRetries: number\n): any {\n  if (!options.useProxy) {\n    request['headers'] = {\n      Authorization: 'apiToken ' + options.apiToken,\n    };\n  }\n  return getBackendSrv()\n    .datasourceRequest(request)\n    .catch((error) => {\n      if (error.status === 429) {\n        // if the error was caused by a concurrent execution limit, we will retry\n        if (\n          maxRetries > 0 &&\n          error.data?.errors &&\n          error.data.errors[0] &&\n          error.data.errors[0].includes('concurrent')\n        ) {\n          const backoff = maxRetries >= 4 ? 10000 : (4 - maxRetries) * 20000; // something between 10 and 60 seconds\n          return new Promise((resolve) => setTimeout(resolve, backoff)).then(() => {\n            return doRequest(options, request, swallowError, maxRetries - 1);\n          });\n        }\n        throw new Error('API limit is reached.');\n        return;\n      }\n\n      if (swallowError && (error.status >= 400 || error.status < 500)) {\n        console.log(error);\n        return;\n      }\n      if (maxRetries > 0 && error.status >= 500) {\n        return doRequest(options, request, swallowError, maxRetries - 1);\n      }\n      throw error;\n    });\n}\n\nexport function instanaUrl(instanceSettings: DataSourceInstanceSettings<InstanaOptions>): string {\n  if (instanceSettings.jsonData.useProxy) {\n    return instanceSettings.url + '/instana'; // to match proxy route in plugin.json\n  } else {\n    return instanceSettings.jsonData.url;\n  }\n}\n","import { TimeSeries, TimeSeriesPoints } from '@grafana/data';\n\nexport function emptyResultData(refId: string): TimeSeries {\n  return {\n    target: refId,\n    datapoints: [],\n  };\n}\n\nexport function buildTimeSeries(label: string, refId: string, datapoints: TimeSeriesPoints): TimeSeries {\n  return {\n    target: label,\n    refId: refId,\n    datapoints: datapoints,\n  };\n}\n","/* CONFIG */\nexport const PAGINATION_LIMIT = 15; // pagesize=200 => 3000 results in dropdown (~30sec.)\nexport const CACHE_MAX_AGE = 60000;\nexport const SEPARATOR = '|';\n\n/* CATEGORIES */\nexport const BUILT_IN_METRICS = 0;\nexport const CUSTOM_METRICS = 1;\nexport const ANALYZE_APPLICATION_METRICS = 2;\nexport const ANALYZE_WEBSITE_METRICS = 3;\nexport const APPLICATION_SERVICE_ENDPOINT_METRICS = 4; // replaces previous ->\n// APPLICATION_METRICS = '4';\n// SERVICE_METRICS = '5';\n// ENDPOINT_METRICS = '6';\nexport const SLO_INFORMATION = 7;\nexport const INFRASTRUCTURE_EXPLORE = 8;\n\n/* DROPDOWN DEFAULTS */\nexport const ALL_APPLICATIONS = '-- No Application Filter --';\nexport const ALL_WEBSITES = '-- No Website Filter --';\nexport const ALL_SERVICES = '-- No Service Filter --';\nexport const ALL_ENDPOINTS = '-- No Endpoint Filter --';\n\n/* PLACEHOLDER */\nexport const PLEASE_SPECIFY = 'Please specify';\n","import { TimeRange } from '@grafana/data/types/time';\nimport TimeFilter from '../types/time_filter';\nimport { SEPARATOR } from '../GlobalVariables';\n\nexport function readTime(time: TimeRange): TimeFilter {\n  const from = Math.floor(new Date(time!.from.valueOf()).getTime() / 1000) * 1000;\n  const to = Math.floor(new Date(time!.to.valueOf()).getTime() / 1000) * 1000;\n  return {\n    from: from,\n    to: to,\n    windowSize: to - from,\n  };\n}\n\nexport function getWindowSize(timeFilter: TimeFilter): number {\n  return timeFilter.from ? timeFilter.to - timeFilter.from : timeFilter.windowSize;\n}\n\nexport function getTimeKey(timeFilter: TimeFilter): string {\n  // time might be part of a cache key as this can cause different results\n  return msToMin(timeFilter.from) + SEPARATOR + msToMin(timeFilter.to);\n}\n\nfunction msToMin(time: number): number {\n  return Math.floor(time / 60000);\n}\n\nexport function hoursToMs(hours: any): number {\n  if (hours > 0) {\n    return hours * 60 * 60 * 1000;\n  }\n  return 0;\n}\n","export default class Cache<T> {\n  store: any;\n\n  constructor() {\n    this.store = {};\n  }\n\n  put(key: string, value: T, ttl = 70000): void {\n    if (key === undefined || value === undefined) {\n      return;\n    }\n\n    this.del(key);\n    this.store[key] = {\n      value,\n      expiry: Date.now() + ttl,\n      timeout: setTimeout(() => {\n        this.del(key);\n      }, ttl),\n    };\n  }\n\n  get(key: string): T {\n    var item = this.store[key];\n    if (item && !(item.expiry && item.expiry > Date.now())) {\n      this.del(key);\n      item = undefined;\n    }\n    return item && item.value;\n  }\n\n  del(key: string): void {\n    if (this.store.hasOwnProperty(key)) {\n      clearTimeout(this.store[key].timeout);\n      delete this.store[key];\n    }\n  }\n}\n","import { SelectableValue, TimeSeries, TimeSeriesPoints } from '@grafana/data';\nimport { buildTimeSeries, emptyResultData } from '../util/target_util';\nimport { InstanaOptions } from '../types/instana_options';\nimport { InstanaQuery } from '../types/instana_query';\nimport { getRequest } from '../util/request_handler';\nimport { getWindowSize } from '../util/time_util';\nimport TimeFilter from '../types/time_filter';\nimport Cache from '../cache';\nimport _ from 'lodash';\n\nexport class DataSourceSlo {\n  sliReportsCache: Cache<Promise<SelectableValue[]>>;\n  instanaOptions: InstanaOptions;\n\n  constructor(options: InstanaOptions) {\n    this.instanaOptions = options;\n    this.sliReportsCache = new Cache<Promise<SelectableValue[]>>();\n  }\n\n  getConfiguredSLIs(): Promise<SelectableValue[]> {\n    let sliReports = this.sliReportsCache.get('sliReports');\n    if (sliReports) {\n      return sliReports;\n    }\n\n    sliReports = getRequest(this.instanaOptions, '/api/settings/sli').then((response: any) =>\n      _.map(response.data, (r) => {\n        return {\n          key: r.id,\n          label: r.sliName,\n        };\n      })\n    );\n\n    this.sliReportsCache.put('sliReports', sliReports);\n    return sliReports;\n  }\n\n  runQuery(target: InstanaQuery, timeFilter: TimeFilter) {\n    //avoid involid calls\n    if (\n      !target ||\n      !target.sloReport ||\n      !target.sloReport.key ||\n      !target.sloSpecific ||\n      !target.sloSpecific.key ||\n      !target.sloValue\n    ) {\n      return Promise.resolve(emptyResultData(target.refId));\n    }\n\n    let endpoint =\n      '/api/sli/report/' +\n      target.sloReport.key +\n      '?from=' +\n      timeFilter.from +\n      '&to=' +\n      timeFilter.to +\n      '&slo=' +\n      target.sloValue;\n    return getRequest(this.instanaOptions, endpoint).then((response: any) => {\n      return this.extractSpecificValueFromSLI(target, response.data, timeFilter);\n    });\n  }\n\n  extractSpecificValueFromSLI(target: InstanaQuery, sliResult: any, timeFilter: TimeFilter) {\n    if (target.sloSpecific.key === 'SLI') {\n      return [\n        buildTimeSeries(target.sloSpecific.label!, target.refId, this.buildResultArray(sliResult.sli, timeFilter.to)),\n      ];\n    } else if (target.sloSpecific.key === 'Remaining Error Budget') {\n      return [\n        buildTimeSeries(\n          target.sloSpecific.label!,\n          target.refId,\n          this.buildResultArray(sliResult.errorBudgetRemaining, timeFilter.to)\n        ),\n      ];\n    } else if (target.sloSpecific.key === 'Timeseries') {\n      return this.buildViolationDistributionTimeSeries(target, sliResult.violationDistribution, timeFilter);\n    }\n\n    return [emptyResultData(target.refId)];\n  }\n\n  buildResultArray(result: number, timestamp: number): TimeSeriesPoints {\n    return [[result, timestamp]];\n  }\n\n  buildViolationDistributionTimeSeries(target: InstanaQuery, series: any, timeFilter: TimeFilter): TimeSeries[] {\n    const greens: any[] = [];\n    const reds: any[] = [];\n    const greys: any[] = [];\n\n    let granularity = getWindowSize(timeFilter) / Object.keys(series).length;\n    _.forEach(series, (value: number, index: number) => {\n      if (value === 1) {\n        greens.push([1, timeFilter.from + index * granularity]);\n      } else if (value === 0) {\n        greys.push([1, timeFilter.from + index * granularity]);\n      } else if (value === -1) {\n        reds.push([1, timeFilter.from + index * granularity]);\n      }\n    });\n\n    const result: TimeSeries[] = [];\n    result.push(buildTimeSeries('No violation', target.refId, greens));\n    result.push(buildTimeSeries('Violation', target.refId, reds));\n    result.push(buildTimeSeries('No data', target.refId, greys));\n\n    return result;\n  }\n}\n","/**\n * Do not remove the commented stuff.\n */\nexport default [\n  {\n    label: 'Infrastructure built-in metrics',\n    key: 0,\n  },\n  {\n    label: 'Infrastructure custom metrics',\n    key: 1,\n  },\n  {\n    label: 'Infrastructure explore (beta)',\n    key: 8,\n  },\n  {\n    // replaces Application metrics(4) & Service metrics(5) & Endpoint metrics(6)\n    label: 'Application/service/endpoint metrics',\n    key: 4,\n  },\n  {\n    label: 'Analyze application calls',\n    key: 2,\n  },\n  {\n    label: 'Analyze website',\n    key: 3,\n  },\n  {\n    label: 'SLO information',\n    key: 7,\n  },\n];\n","/**\n * Util method to validate query intervals which are too big.\n *\n * @param windowSize in ms\n * @param queryIntervalLimit in ms\n */\nexport function isInvalidQueryInterval(windowSize: number, queryIntervalLimit?: number): boolean {\n  if (queryIntervalLimit) {\n    if (queryIntervalLimit > 0) {\n      return Math.floor(windowSize / 1000) * 1000 > queryIntervalLimit;\n    }\n    return false;\n  }\n\n  return false;\n}\n","export default [\n  {\n    value: 1, // 1s\n    label: '1s',\n  },\n  {\n    value: 5, // 5s\n    label: '5s',\n  },\n  {\n    value: 10, // 10s\n    label: '10s',\n  },\n  {\n    value: 60, // 1m\n    label: '1min',\n  },\n  {\n    value: 60 * 5, // 5m\n    label: '5min',\n  },\n  {\n    value: 60 * 10, // 10m\n    label: '10min',\n  },\n  {\n    value: 60 * 60, // 1h\n    label: '1h',\n  },\n  {\n    value: 60 * 60 * 5, // 5h\n    label: '5h',\n  },\n  {\n    value: 60 * 60 * 10, // 10h\n    label: '10h',\n  },\n  {\n    value: 60 * 60 * 24, // 1d\n    label: '1d',\n  },\n  {\n    value: 60 * 60 * 24 * 5, // 5d\n    label: '5d',\n  },\n  {\n    value: 60 * 60 * 24 * 10, // 10d\n    label: '10d',\n  },\n];\n","export default [\n  {\n    availableFor: 1000 * 60 * 60 * 24, // 1d\n    rollup: 1000, // 1s\n    label: '1s',\n  },\n  {\n    availableFor: 1000 * 60 * 60 * 24, // 1d\n    rollup: 1000 * 5, // 5s\n    label: '5s',\n  },\n  {\n    availableFor: 1000 * 60 * 60 * 24 * 31, // 1 month\n    rollup: 1000 * 60, // 1m\n    label: '1min',\n  },\n  {\n    availableFor: 1000 * 60 * 60 * 24 * 31 * 3, // 3 months\n    rollup: 1000 * 60 * 5, // 5m\n    label: '5min',\n  },\n  {\n    availableFor: 1000 * 60 * 60 * 24 * 31 * 12, // 1 year aka forever\n    rollup: 1000 * 60 * 60, // 1h\n    label: '1h',\n  },\n];\n","import granularities from '../lists/granularities';\nimport TimeFilter from '../types/time_filter';\nimport Selectable from '../types/selectable';\nimport { getWindowSize } from './time_util';\nimport rollups from '../lists/rollups';\n\nconst MAX_DATAPOINTS_ANALYZE = 600;\nconst MAX_DATAPOINTS_INFRASTRUCTURE = 800;\nconst UI_DATAPOINTS_ANALYZE = 80;\n\nfunction currentTime() {\n  return Date.now();\n}\n\nexport function getDefaultChartGranularity(windowSize: number): Selectable {\n  return getPossibleGranularities(windowSize, UI_DATAPOINTS_ANALYZE)[0];\n}\n\nexport function getPossibleGranularities(windowSize: number, maxValues = MAX_DATAPOINTS_ANALYZE): Selectable[] {\n  let possibleGranularities = granularities.filter(\n    (granularity) => windowSize / 1000 / granularity.value <= maxValues && granularity.value * 1000 <= windowSize\n  );\n\n  // window sizes of this length and up have a granularity of at least 1h\n  if (windowSize > 48000001) {\n    possibleGranularities = possibleGranularities.filter((granularity) => granularity.value >= 3600);\n  }\n\n  if (windowSize >= 1800000) {\n    possibleGranularities = possibleGranularities.filter((granularity) => granularity.value >= 60);\n  }\n\n  if (possibleGranularities.length > 0) {\n    return possibleGranularities.map((granularity) => ({\n      key: granularity.value.toString(),\n      label: granularity.label,\n    }));\n  }\n\n  return [\n    {\n      key: granularities[granularities.length - 1].value.toString(),\n      label: granularities[granularities.length - 1].label,\n    },\n  ];\n}\n\nexport function getDefaultMetricRollupDuration(timeFilter: TimeFilter): Selectable {\n  return getPossibleRollups(timeFilter)[0];\n}\n\nexport function getPossibleRollups(timeFilter: TimeFilter): Selectable[] {\n  // Ignoring time differences for now since small time differences\n  // can be accepted. This time is only used to calculate the rollup.\n  const now = currentTime();\n  const windowSize = getWindowSize(timeFilter);\n\n  let possibleRollups = rollups\n    .filter((rollupDefinition) => timeFilter.from >= now - rollupDefinition.availableFor)\n    .filter((rollUp) => windowSize >= rollUp.rollup && windowSize / rollUp.rollup <= MAX_DATAPOINTS_INFRASTRUCTURE);\n\n  if (possibleRollups.length > 0) {\n    return possibleRollups.map((rollup) => ({\n      key: rollup.rollup.toString(),\n      label: rollup.label,\n    }));\n  }\n\n  return [\n    {\n      key: rollups[rollups.length - 1].rollup.toString(),\n      label: rollups[rollups.length - 1].label,\n    },\n  ];\n}\n","export default [\n  {\n    key: 'cpu.used', // metric.key\n    value: 'cpu.count', // value of the metric found in GET /snapshots/{snapshotId}\n    label: 'cpu.max', // label that shall be shown as target in graph\n  },\n  {\n    key: 'memory.used',\n    value: 'memory.total',\n    label: 'memory.max',\n  },\n  {\n    key: 'openFiles.used',\n    value: 'openFiles.max',\n    label: 'openFiles.max',\n  },\n];\n","import { SelectableValue } from '@grafana/data';\nimport { InstanaOptions } from '../types/instana_options';\nimport { InstanaQuery } from '../types/instana_query';\nimport { getRequest, postRequest } from '../util/request_handler';\nimport TimeFilter from '../types/time_filter';\nimport Cache from '../cache';\nimport { CUSTOM_METRICS, SEPARATOR } from '../GlobalVariables';\nimport _ from 'lodash';\nimport { getTimeKey, hoursToMs } from '../util/time_util';\nimport { isInvalidQueryInterval } from '../util/queryInterval_check';\nimport { emptyResultData } from '../util/target_util';\nimport { getDefaultMetricRollupDuration } from '../util/rollup_granularity_util';\nimport max_metrics from '../lists/max_metrics';\n\nexport class DataSourceInfrastructure {\n  instanaOptions: InstanaOptions;\n  snapshotCache: Cache<Promise<SelectableValue[]>>;\n  snapshotInfoCache: Cache<Promise<SelectableValue[]>>;\n  catalogCache: Cache<Promise<SelectableValue[]>>;\n  typeCache: Cache<Promise<SelectableValue[]>>;\n  timeToLiveSnapshotInfoCache = 4000000; // set to 1,11 hour\n\n  constructor(options: InstanaOptions) {\n    this.instanaOptions = options;\n    this.snapshotCache = new Cache<Promise<SelectableValue[]>>();\n    this.snapshotInfoCache = new Cache<Promise<SelectableValue[]>>();\n    this.catalogCache = new Cache<Promise<SelectableValue[]>>();\n    this.typeCache = new Cache<Promise<SelectableValue[]>>();\n  }\n\n  runQuery(target: InstanaQuery, timeFilter: TimeFilter) {\n    // do not try to execute to big queries\n    if (isInvalidQueryInterval(timeFilter.windowSize, hoursToMs(this.instanaOptions.queryinterval_limit_infra))) {\n      throw new Error(\n        'Limit for maximum selectable windowsize exceeded, max is: ' +\n          this.instanaOptions.queryinterval_limit_infra +\n          ' hours'\n      );\n    }\n\n    if (target.tagFilterExpression) {\n      return this.fetchExploreEntities(target, timeFilter);\n    }\n\n    // do not try to retrieve data without selected metric\n    if ((!target.metric || !target.metric.key) && !target.showAllMetrics && !target.freeTextMetrics) {\n      return Promise.resolve(emptyResultData(target.refId));\n    }\n\n    // for every target, fetch snapshots in the selected timeframe that satisfy the lucene query.\n    return this.fetchSnapshotsForTarget(target, timeFilter).then((snapshots) => {\n      if (target.showAllMetrics) {\n        // only available for custom metrics\n        return this.fetchMultipleMetricsForSnapshots(target, snapshots, timeFilter, target.allMetrics);\n      } else if (target.freeTextMetrics) {\n        // only available for custom metrics\n        const metrics = this.extractMetricsFromText(target.freeTextMetrics);\n        return this.fetchMultipleMetricsForSnapshots(target, snapshots, timeFilter, metrics);\n      } else {\n        return this.fetchMetricsForSnapshots(target, snapshots, timeFilter, target.metric);\n      }\n    });\n  }\n\n  extractMetricsFromText(freeText: string): string[] {\n    const metricsString = freeText.replace(/\\s/g, '').split(',');\n    let metrics: string[] = [];\n    _.each(metricsString, (metricString) => metrics.push(JSON.parse('{ \"key\": \"' + metricString + '\"}')));\n\n    if (metrics.length > 4) {\n      metrics = metrics.slice(0, 4); // API supports up to 4 metrics at once\n    }\n\n    return metrics;\n  }\n\n  fetchMultipleMetricsForSnapshots(target: InstanaQuery, snapshots: any, timeFilter: TimeFilter, metrics: any) {\n    const resultPromises: any = [];\n    _.forEach(metrics, (metric) => {\n      resultPromises.push(this.fetchMetricsForSnapshots(target, snapshots, timeFilter, metric));\n    });\n\n    return Promise.all(resultPromises).then((allResults) => {\n      const allMetrics: any = [];\n      allResults.forEach((result: any) => result.forEach((s: any) => allMetrics.push(s)));\n      return allMetrics;\n    });\n  }\n\n  fetchMetricsForSnapshots(target: InstanaQuery, snapshots: any, timeFilter: TimeFilter, metric: any) {\n    let maxValues: any = [];\n    let res = _.map(snapshots, (snapshot, index) => {\n      // ...fetch the metric data for every snapshot in the results.\n      return this.fetchMetricsForSnapshot(snapshot.snapshotId, timeFilter, target.timeInterval.key, metric).then(\n        (response: any) => {\n          let timeseries = this.readTimeSeries(response.data.values, target.aggregation, timeFilter);\n          let result = {\n            target: this.buildLabel(snapshot.response, snapshot.host, target, index, metric),\n            datapoints: _.map(timeseries, (value) => [value.value, value.timestamp]),\n            refId: target.refId,\n            key: target.stableHash,\n          };\n\n          if (target.displayMaxMetricValue) {\n            const maxValue = this.getMaxMetricValue(target.metric, snapshot);\n            maxValues.push(this.buildMaxMetricTarget(target, timeseries, maxValue, result.target));\n            result.datapoints = this.convertRelativeToAbsolute(result.datapoints, maxValue);\n          }\n\n          return result;\n        }\n      );\n    });\n\n    return Promise.all(res).then((allResults) => {\n      if (target.displayMaxMetricValue) {\n        allResults = _.concat(res, maxValues);\n      }\n      return Promise.all(allResults);\n    });\n  }\n\n  getMaxMetricValue(metric: any, snapshot: any): number {\n    const maxMetrics: any = max_metrics;\n    return snapshot.response.data.data[_.find(maxMetrics, (m: any) => m.key === metric.key).value];\n  }\n\n  buildMaxMetricTarget(target: any, timeseries: any, maxValue: any, resultLabel: any) {\n    let datapoints = _.map(timeseries, (series) => {\n      return [maxValue, series.timestamp];\n    });\n\n    let maxLabel = this.convertMetricNameToMaxLabel(target.metric);\n\n    return {\n      target: resultLabel + ' ' + maxLabel,\n      datapoints: datapoints,\n      refId: target.refId,\n      key: target.stableHash + maxLabel,\n    };\n  }\n\n  convertMetricNameToMaxLabel(metric: any): string {\n    const maxMetrics: any = max_metrics;\n    return _.find(maxMetrics, (m) => m.key === metric.key).label;\n  }\n\n  convertRelativeToAbsolute(datapoints: any, maxValue: any) {\n    return _.map(datapoints, (datapoint) => {\n      if (datapoint[0]) {\n        return [datapoint[0] * maxValue, datapoint[1]];\n      }\n      return [null, datapoint[1]];\n    });\n  }\n\n  getEntityTypes(): Promise<SelectableValue[]> {\n    let entityTypes = this.typeCache.get('entityTypes');\n    if (entityTypes) {\n      return entityTypes;\n    }\n\n    entityTypes = getRequest(this.instanaOptions, '/api/infrastructure-monitoring/catalog/plugins').then(\n      (typesResponse: any) => {\n        const result = typesResponse.data.map((entry: any) => ({\n          key: entry.plugin,\n          label: entry.label,\n        }));\n\n        result.push({\n          key: 'regionEntity',\n          label: 'Region',\n        });\n\n        return _.sortBy(result, 'label');\n      }\n    );\n\n    this.typeCache.put('entityTypes', entityTypes);\n\n    return entityTypes;\n  }\n\n  fetchTypesForTarget(query: InstanaQuery, timeFilter: TimeFilter): any {\n    const fetchSnapshotTypesUrl =\n      `/api/snapshots/types` +\n      `?q=${encodeURIComponent(query.entityQuery)}` +\n      `&from=${timeFilter.from}` +\n      `&to=${timeFilter.to}` +\n      (this.instanaOptions.showOffline ? `` : `&time=${timeFilter.to}`);\n    return getRequest(this.instanaOptions, fetchSnapshotTypesUrl);\n  }\n\n  fetchExploreEntities(target: InstanaQuery, timeFilter: TimeFilter) {\n    const data = JSON.parse(target.tagFilterExpression);\n\n    const payload = {\n      tagFilterExpression: data.tagFilterExpression,\n      pagination: {\n        retrievalSize: 200,\n      },\n      groupBy: data.groupBy,\n      type: data.type,\n      metrics: data.metrics,\n      timeFrame: {\n        to: timeFilter.to,\n        windowSize: timeFilter.windowSize,\n      },\n    };\n\n    return postRequest(this.instanaOptions, '/api/infrastructure-monitoring/explore/groups', payload).then(\n      (res: any) => {\n        let result: any = [];\n\n        if (!res.data.data && res.data.errors.length >= 1) {\n          throw new Error(res.data.errors[0].message || res.data.errors[0]);\n        }\n\n        res.data.data.items.forEach((entity: any) => {\n          for (var metric in entity.metrics) {\n            result.push({\n              target: entity.tags[data.groupBy] + ' - ' + metric,\n              datapoints: entity.metrics[metric]\n                ? entity.metrics[metric].map((datapoint: any) => [datapoint[1], datapoint[0]])\n                : [],\n              refId: target.refId,\n              key: target.stableHash,\n            });\n          }\n        });\n\n        return result;\n      }\n    );\n  }\n\n  getMetricsCatalog(plugin: SelectableValue, metricCategory: number): Promise<SelectableValue[]> {\n    const key = plugin.key + '|' + metricCategory;\n\n    let metrics = this.catalogCache.get(key);\n    if (metrics) {\n      return metrics;\n    }\n\n    const filter = metricCategory === CUSTOM_METRICS ? 'custom' : 'builtin';\n    metrics = getRequest(\n      this.instanaOptions,\n      `/api/infrastructure-monitoring/catalog/metrics/${plugin.key}?filter=${filter}`\n    ).then((catalogResponse: any) =>\n      catalogResponse.data.map((entry: any) => ({\n        key: entry.metricId,\n        label: entry.label,\n        description: entry.metricId,\n        aggregations: [\n          { key: 'MEAN', label: 'MEAN' },\n          { key: 'SUM', label: 'SUM' },\n        ],\n        entityType: entry.pluginId,\n      }))\n    );\n\n    this.catalogCache.put(key, metrics);\n\n    return metrics;\n  }\n\n  fetchSnapshotsForTarget(target: InstanaQuery, timeFilter: TimeFilter) {\n    const query = this.buildQuery(target);\n    const key = this.buildSnapshotCacheKey(query, timeFilter);\n\n    let snapshots = this.snapshotCache.get(key);\n    if (snapshots) {\n      return snapshots;\n    }\n\n    const fetchSnapshotContextsUrl =\n      `/api/snapshots/context` +\n      `?q=${query}` +\n      `&from=${timeFilter.from}` +\n      `&to=${timeFilter.to}` +\n      (this.instanaOptions.showOffline ? `` : `&time=${timeFilter.to}&size=100`);\n\n    snapshots = getRequest(this.instanaOptions, fetchSnapshotContextsUrl)\n      .then((contextsResponse: any) => {\n        return Promise.all(\n          contextsResponse.data.map(({ snapshotId, host }: any) => {\n            let snapshotInfo = this.snapshotInfoCache.get(snapshotId);\n            if (snapshotInfo) {\n              return snapshotInfo;\n            }\n\n            const fetchSnapshotUrl =\n              `/api/snapshots/${snapshotId}` +\n              (this.instanaOptions.showOffline\n                ? `?from=${timeFilter.from}&to=${timeFilter.to}`\n                : `?time=${timeFilter.to}`); // @see SnapshotApiResource#getSnapshot\n\n            snapshotInfo = getRequest(this.instanaOptions, fetchSnapshotUrl, true).then((snapshotResponse: any) => {\n              // check for undefined because the fetchSnapshotContexts is buggy\n              if (snapshotResponse !== undefined) {\n                return {\n                  snapshotId,\n                  host,\n                  response: this.reduceSnapshot(snapshotResponse),\n                };\n              }\n\n              return null;\n            });\n\n            this.snapshotInfoCache.put(snapshotId, snapshotInfo, this.timeToLiveSnapshotInfoCache);\n            return snapshotInfo;\n          })\n        );\n      })\n      .then((response: any) => {\n        // undefined items need to be removed, because the fetchSnapshotContexts is buggy in the backend, maybe can be removed in the future\n        return _.compact(response);\n      });\n\n    this.snapshotCache.put(key, snapshots);\n    return snapshots;\n  }\n\n  buildQuery(target: InstanaQuery): string {\n    // check for entity.pluginId or entity.selfType, because otherwise the backend has a problem with `AND entity.pluginId`\n    if (`${target.entityQuery}`.includes('entity.pluginId:') || `${target.entityQuery}`.includes('entity.selfType:')) {\n      return encodeURIComponent(`${target.entityQuery}`);\n    } else {\n      return encodeURIComponent(`${target.entityQuery} AND entity.pluginId:${target.entityType.key}`);\n    }\n  }\n\n  buildSnapshotCacheKey(query: string, timeFilter: TimeFilter): string {\n    return query + SEPARATOR + getTimeKey(timeFilter);\n  }\n\n  reduceSnapshot(snapshotResponse: any) {\n    // reduce data to used label formatting values\n    snapshotResponse.data = _.pick(snapshotResponse.data, ['id', 'label', 'plugin', 'data']);\n    return snapshotResponse;\n  }\n\n  readTimeSeries(values: any, aggregation: SelectableValue, timeFilter: TimeFilter) {\n    if (aggregation && aggregation.key === 'SUM') {\n      return this.correctMeanToSum(values, timeFilter);\n    }\n    return values;\n  }\n\n  correctMeanToSum(values: any, timeFilter: TimeFilter) {\n    const secondMultiplier = parseInt(getDefaultMetricRollupDuration(timeFilter).key, 10) / 1000;\n    return _.map(values, (value) => {\n      return {\n        value: value.value ? value.value * secondMultiplier : null,\n        timestamp: value.timestamp,\n      };\n    });\n  }\n\n  fetchMetricsForSnapshot(snapshotId: string, timeFilter: TimeFilter, rollup: number, metric: any) {\n    let url =\n      `/api/metrics?metric=${metric.key}` +\n      `&from=${timeFilter.from}` +\n      `&to=${timeFilter.to}` +\n      `&rollup=${rollup}` +\n      `&fillTimeSeries=true` +\n      `&snapshotId=${snapshotId}`;\n    return getRequest(this.instanaOptions, url);\n  }\n\n  getHostSuffix(host: string): string {\n    if (host) {\n      return ' (on host \"' + host + '\")';\n    }\n    return '';\n  }\n\n  buildLabel(snapshotResponse: any, host: any, target: InstanaQuery, index: any, metric: any): string {\n    if (target.labelFormat) {\n      let label = target.labelFormat;\n      label = _.replace(label, '$label', snapshotResponse.data.label);\n      label = _.replace(label, '$plugin', snapshotResponse.data.plugin); // not documented\n      label = _.replace(label, '$snapshot', snapshotResponse.data.id); // not documented\n      label = _.replace(label, '$host', host ? host : 'unknown');\n      label = _.replace(label, '$pid', _.get(snapshotResponse.data, ['data', 'pid'], ''));\n      label = _.replace(label, '$type', _.get(snapshotResponse.data, ['data', 'type'], ''));\n      label = _.replace(label, '$name', _.get(snapshotResponse.data, ['data', 'name'], ''));\n      label = _.replace(label, '$service', _.get(snapshotResponse.data, ['data', 'service_name'], ''));\n      if (target.freeTextMetrics) {\n        label = _.replace(label, '$metric', metric.key);\n      } else {\n        label = _.replace(label, '$metric', _.get(target, ['metric', 'key'], 'n/a'));\n      }\n      label = _.replace(label, '$index', index + 1);\n      label = _.replace(label, '$timeShift', target.timeShift);\n      return label;\n    }\n    return target.timeShift && target.timeShiftIsValid\n      ? snapshotResponse.data.label + this.getHostSuffix(host) + ' - ' + target.timeShift\n      : snapshotResponse.data.label + this.getHostSuffix(host);\n  }\n}\n","import _ from 'lodash';\n\nimport TimeFilter from '../types/time_filter';\n\nconst omitLabels = [\n  'refId',\n  'pluginId',\n  'showWarningCantShowAllResults',\n  'timeShiftIsValid',\n  'useFreeTextMetrics',\n  'showGroupBySecondLevel',\n  'canShowAllMetrics',\n  'timeFilter',\n  'stableHash',\n];\n\nexport function generateStableHash(obj: any): string {\n  let pseudoHash = _.omit(obj, omitLabels);\n  pseudoHash = _.mapValues(pseudoHash, (value: any) => {\n    // to reduce overhead of interface Selectable\n    if (value != null && typeof value === 'object' && 'key' in value) {\n      value = value.key;\n    }\n\n    return value;\n  });\n  return JSON.stringify(pseudoHash);\n}\n\n/* Check if two time filters are overlapping.\n\nReturn true when:\na)\n  from |-------------------| to (t2)\n              from |--------------------| to (t1)\nb)\n  from |-------------------| to (t2)\n  from |-------------------| to (t1)\nc)\n  from |-------------------| to (t2)\n              from |-------| to (t1)\n\nReturns false when:\nd)\n  from |-------------------| to (t2)\n                      from |-------| to (t1)\ne)\n  from |-------------------| to (t2)\n       from |--------| to (t1)\nf)\n     from |-------------------| to (t2)\nfrom |----------------------------------------| to (t1)\ng)\n                from |-------------------| to (t2)\n  from |--------------------| to (t1)\nh)\n                from |-------------------| to (t2)\n  from |-------------| to (t1)\ni)\n                from |-------------------| to (t2)\n  from |--------| to (t1)\nj)\n  from |-------------------| to (t2)\n                        from |----------| to (t1)\nk)\n  from |-------------------| to (t2)\n  from |----------| to (t1)\n*/\nexport function hasIntersection(t1: TimeFilter, t2: TimeFilter): boolean {\n  return t1.from < t2.to && t1.from >= t2.from && t1.to >= t2.to;\n}\n\n/*\n  Appends new found items to already existing data in cache.\n  Also removes old data accordingly (e.g. if 4 new datapoints were added,\n  the corresponding oldest four datapoints are removed).\n*/\nexport function appendData(newDeltaData: any, cachedData: any): any {\n  _.each(newDeltaData, (deltaData) => {\n    let matchingCachedDataIndex = _.findIndex(\n      cachedData,\n      (o: any) => o.key === deltaData.key && o.target === deltaData.target\n    );\n    if (cachedData[matchingCachedDataIndex] && deltaData.datapoints) {\n      // const size = matchingCachedData.datapoints.length;\n      let datapoints = deltaData.datapoints.concat(cachedData[matchingCachedDataIndex].datapoints);\n      datapoints = _.sortedUniqBy(\n        datapoints.sort((a: any, b: any) => a[1] - b[1]),\n        (a: any) => a[1]\n      );\n      cachedData[matchingCachedDataIndex].datapoints = _.takeRight(datapoints, 800);\n      cachedData[matchingCachedDataIndex].target = deltaData.target;\n    } else {\n      cachedData.push(deltaData);\n    }\n  });\n\n  return cachedData;\n}\n\nexport function getDeltaRequestTimestamp(series: any, fromDefault: number, timeInterval: any): number {\n  // we do not apply any delta for requests that contain a one second granularity (application requests)\n  if (timeInterval.key === '1') {\n    return fromDefault;\n  }\n\n  // the found series can have multiple results, it's ok just to use the first one\n  // because data is written in batches and we know that once there is a datapoint\n  // for a series, the other series' datapoints are up-to-date as well.\n  const length = series[0].datapoints.length;\n  if (length < 2) {\n    return fromDefault;\n  }\n\n  const penultimate = length - 2;\n  return series[0].datapoints[penultimate][1];\n}\n","import Cache from '../cache';\nimport { getRequest } from './request_handler';\nimport { InstanaOptions } from '../types/instana_options';\n\nconst versionCache: Cache<number> = new Cache<number>();\n\n/*\n  Get version of current Instana backend and cache it for 10 minutes.\n  This should be the ONLY way to retrieve any information about the Instana backend version.\n */\nexport default function getVersion(options: InstanaOptions) {\n  let cachedVersion = versionCache.get('version');\n  if (cachedVersion) {\n    return Promise.resolve(cachedVersion);\n  }\n\n  return getRequest(options, '/api/instana/version').then(\n    (result: any) => {\n      if (result.data && result.data.imageTag) {\n        const majorVersion = parseInt(result.data.imageTag.split('.', 2)[1], 10) || null;\n        if (majorVersion) {\n          versionCache.put(options.url, majorVersion, 600000);\n        }\n        return majorVersion;\n      }\n      return null;\n    },\n    (error: any) => {\n      return null;\n    }\n  );\n}\n","import _ from 'lodash';\nimport { InstanaQuery } from '../types/instana_query';\n\nexport function aggregateTarget(data: any, target: InstanaQuery) {\n  const targetLabel = buildAggregationLabel(target);\n  data = _.filter(data, (d) => d.target !== targetLabel); // filter out any previously calculated aggregations\n  let concatedTargetData = concatTargetData(data);\n\n  let dataGroupedByTimestamp = _.groupBy(concatedTargetData, function (d) {\n    return d[1];\n  });\n\n  let aggregatedData = aggregateDataOfTimestamp(dataGroupedByTimestamp, target.aggregationFunction.label!);\n  aggregatedData = _.sortBy(aggregatedData, [\n    function (datapoint) {\n      return datapoint[1];\n    },\n  ]);\n\n  return buildResult(aggregatedData, target.refId, targetLabel);\n}\n\nfunction concatTargetData(data: any) {\n  let result: any = [];\n  _.each(data, (entry) => {\n    result = _.concat(result, entry.datapoints);\n  });\n  return result;\n}\n\nfunction aggregateDataOfTimestamp(dataGroupedByTimestamp: any, aggregationLabel: string) {\n  let result: any = [];\n  _.each(dataGroupedByTimestamp, (timestampData, timestamp) => {\n    let valuesOfTimestamp = _.map(timestampData, (datapoint) => {\n      return datapoint[0];\n    });\n    let aggregatedValue = aggregate(aggregationLabel, valuesOfTimestamp);\n    result.push([aggregatedValue, parseInt(timestamp, 10)]);\n  });\n  return result;\n}\n\nfunction aggregate(aggregation: string, data: any) {\n  if (aggregation.toLowerCase() === 'sum') {\n    return _.sum(data);\n  } else if (aggregation.toLowerCase() === 'mean') {\n    return _.mean(data);\n  } else if (aggregation.toLowerCase() === 'min') {\n    return _.min(data);\n  } else if (aggregation.toLowerCase() === 'max') {\n    return _.max(data);\n  } else {\n    //apply not aggregation\n    return data;\n  }\n}\n\nfunction buildResult(aggregatedData: any, refId: string, target: string) {\n  return {\n    datapoints: aggregatedData,\n    refId: refId,\n    target: target,\n  };\n}\n\nfunction buildAggregationLabel(target: InstanaQuery): string {\n  if (target.showAllMetrics) {\n    if (target.allMetrics.length > 1) {\n      if (target.customFilters && target.customFilters.length > 0) {\n        let label = '';\n        _.each(target.customFilters, (filter, index) => {\n          label += filter;\n          if (index !== target.customFilters.length - 1) {\n            label += '.';\n          }\n        });\n        label = label + ' (' + target.aggregationFunction.label + ')';\n        return label;\n      } else {\n        return target.aggregationFunction.label!;\n      }\n    } else {\n      return target.allMetrics[0].key + ' (' + target.aggregationFunction.label + ')';\n    }\n  } else {\n    return target.metric.key + ' (' + target.aggregationFunction.label + ')';\n  }\n}\n","import TagFilter from '../types/tag_filter';\nimport _ from 'lodash';\nimport { InstanaQuery } from '../types/instana_query';\n\nexport function createTagFilter(filter: TagFilter) {\n  let tagFilter = {\n    name: filter.tag.key,\n    operator: filter.operator.key,\n    value: filter.stringValue,\n  };\n\n  if ('NUMBER' === filter.tag.type) {\n    if (filter.numberValue !== null) {\n      tagFilter.value = filter.numberValue.toString();\n    }\n  } else if ('BOOLEAN' === filter.tag.type) {\n    tagFilter.value = filter.booleanValue.toString();\n  }\n\n  return tagFilter;\n}\n\nexport function readItemMetrics(target: InstanaQuery, response: any, getLabel: any) {\n  if (!response.data) {\n    return response;\n  }\n\n  // as we map two times we need to flatten the result\n  return _.flatten(\n    response.data.items.map((item: any, index: number) => {\n      return _.map(item.metrics, (value, key) => {\n        return {\n          target: getLabel(target, item, key, index),\n          datapoints: _.map(value, (metric) => [metric[1], metric[0]]),\n          refId: target.refId,\n          key: target.stableHash,\n        };\n      });\n    })\n  );\n}\n","import { SelectableValue } from '@grafana/data';\nimport { InstanaOptions } from '../types/instana_options';\nimport Cache from '../cache';\nimport _ from 'lodash';\nimport TimeFilter from '../types/time_filter';\nimport { getTimeKey, getWindowSize, hoursToMs } from '../util/time_util';\nimport BeaconGroupBody from '../types/beacon_group_body';\nimport { getRequest, postRequest } from '../util/request_handler';\nimport { getDefaultChartGranularity } from '../util/rollup_granularity_util';\nimport { InstanaQuery } from '../types/instana_query';\nimport { createTagFilter, readItemMetrics } from '../util/analyze_util';\nimport { emptyResultData } from '../util/target_util';\nimport { isInvalidQueryInterval } from '../util/queryInterval_check';\n\nexport class DataSourceWebsite {\n  instanaOptions: InstanaOptions;\n  websitesCache: Cache<Promise<SelectableValue[]>>;\n  miscCache: Cache<any>;\n\n  constructor(options: InstanaOptions) {\n    this.instanaOptions = options;\n    this.websitesCache = new Cache<Promise<SelectableValue[]>>();\n    this.miscCache = new Cache<any>();\n  }\n\n  runQuery(target: InstanaQuery, timeFilter: TimeFilter) {\n    if (\n      isInvalidQueryInterval(timeFilter.windowSize, hoursToMs(this.instanaOptions.queryinterval_limit_website_metrics))\n    ) {\n      throw new Error(\n        'Limit for maximum selectable windowsize exceeded, max is: ' +\n          this.instanaOptions.queryinterval_limit_website_metrics +\n          ' hours'\n      );\n    }\n\n    // avoid invalid calls\n    if (\n      !target ||\n      !target.metric ||\n      !target.metric.key ||\n      !target.group ||\n      !target.group.key ||\n      !target.entity ||\n      !target.entity.key\n    ) {\n      return Promise.resolve(emptyResultData(target.refId));\n    }\n\n    return this.fetchAnalyzeMetricsForWebsite(target, timeFilter).then((response: any) => {\n      return readItemMetrics(target, response, this.buildAnalyzeWebsiteLabel);\n    });\n  }\n\n  getWebsites(timeFilter: TimeFilter) {\n    const key = getTimeKey(timeFilter);\n    let websites = this.websitesCache.get(key);\n    if (websites) {\n      return websites;\n    }\n\n    websites = getRequest(this.instanaOptions, '/api/website-monitoring/config').then((websitesResponse: any) =>\n      websitesResponse.data.map((website: any) => ({\n        key: website.name, // use name as key because a website name can only be configured once\n        label: website.name,\n      }))\n    );\n    this.websitesCache.put(key, websites, 600000);\n\n    return websites;\n  }\n\n  getWebsiteTags() {\n    let websiteTags = this.miscCache.get('websiteTags');\n    if (websiteTags) {\n      return websiteTags;\n    }\n\n    websiteTags = getRequest(this.instanaOptions, '/api/website-monitoring/catalog/tags').then((tagsResponse: any) =>\n      tagsResponse.data.map((entry: any) => ({\n        key: entry.name,\n        label: entry.name,\n        type: entry.type,\n      }))\n    );\n    this.miscCache.put('websiteTags', websiteTags);\n\n    return websiteTags;\n  }\n\n  getWebsiteMetricsCatalog() {\n    let websiteCatalog = this.miscCache.get('websiteCatalog');\n    if (websiteCatalog) {\n      return websiteCatalog;\n    }\n\n    websiteCatalog = getRequest(this.instanaOptions, '/api/website-monitoring/catalog/metrics').then(\n      (catalogResponse: any) =>\n        catalogResponse.data.map((entry: any) => {\n          return {\n            key: entry.metricId,\n            label: entry.label,\n            aggregations: entry.aggregations ? this.transformAggregations(entry.aggregations.sort()) : [],\n            beaconTypes: entry.beaconTypes\n              ? this.transformBeaconTypes(entry.beaconTypes)\n              : ['pageLoad', 'resourceLoad', 'httpRequest', 'error', 'custom', 'pageChange'],\n          };\n        })\n    );\n    this.miscCache.put('websiteCatalog', websiteCatalog);\n\n    return websiteCatalog;\n  }\n\n  transformBeaconTypes(beaconTypes: string[]) {\n    if (beaconTypes.includes('pageChange')) {\n      let result = _.remove(beaconTypes, (type) => type !== 'pageChange');\n      result.push('page_change');\n      return result;\n    }\n\n    return beaconTypes;\n  }\n\n  transformAggregations(aggregations: string[]) {\n    return _.map(aggregations, (a) => {\n      return {\n        key: a,\n        label: a,\n      };\n    });\n  }\n\n  private fetchAnalyzeMetricsForWebsite(target: InstanaQuery, timeFilter: TimeFilter) {\n    const windowSize = getWindowSize(timeFilter);\n    const tagFilters = [\n      {\n        name: 'beacon.website.name',\n        operator: 'EQUALS',\n        value: target.entity.key,\n      },\n    ];\n\n    _.forEach(target.filters, (filter) => {\n      if (filter.isValid) {\n        tagFilters.push(createTagFilter(filter));\n      }\n    });\n    const metric: any = {\n      metric: target.metric.key,\n      aggregation: target.aggregation.key ? target.aggregation.key : 'SUM',\n    };\n\n    if (!target.timeInterval) {\n      target.timeInterval = getDefaultChartGranularity(windowSize);\n    }\n    metric['granularity'] = target.timeInterval.key;\n\n    const group: any = {\n      groupbyTag: target.group.key,\n    };\n    if (target.group.type === 'KEY_VALUE_PAIR' && target.groupbyTagSecondLevelKey) {\n      group['groupbyTagSecondLevelKey'] = target.groupbyTagSecondLevelKey;\n    }\n\n    const data: BeaconGroupBody = {\n      group: group,\n      timeFrame: {\n        to: timeFilter.to,\n        windowSize: windowSize,\n      },\n      tagFilters: tagFilters,\n      type: target.entityType.key,\n      metrics: [metric],\n    };\n    return postRequest(\n      this.instanaOptions,\n      '/api/website-monitoring/analyze/beacon-groups?fillTimeSeries=true',\n      data,\n      false,\n      5\n    );\n  }\n\n  buildAnalyzeWebsiteLabel(target: InstanaQuery, item: any, key: string, index: number): string {\n    if (target.labelFormat) {\n      let label = target.labelFormat;\n      label = _.replace(label, '$label', item.name);\n      label = _.replace(label, '$website', target.entity.label!);\n      label = _.replace(label, '$type', target.entityType.label!);\n      label = _.replace(label, '$metric', target.metric.label!);\n      label = _.replace(label, '$key', key);\n      label = _.replace(label, '$index', '' + index + 1);\n      label = _.replace(label, '$timeShift', target.timeShift);\n      return label;\n    }\n    return target.timeShift && target.timeShiftIsValid\n      ? item.name + ' (' + target.entity.label + ')' + ' - ' + key + ' - ' + target.timeShift\n      : item.name + ' (' + target.entity.label + ')' + ' - ' + key;\n  }\n}\n","export default [\n  { key: 'calls', label: 'Call count', description: 'calls', aggregations: [{ key: 'SUM', label: 'SUM' }] },\n  {\n    key: 'latency',\n    label: 'Call latency',\n    description: 'latency',\n    aggregations: [\n      { key: 'MAX', label: 'MAX' },\n      { key: 'MEAN', label: 'MEAN' },\n      { key: 'MIN', label: 'MIN' },\n      { key: 'P25', label: 'P25' },\n      { key: 'P50', label: 'P50' },\n      { key: 'P75', label: 'P75' },\n      { key: 'P90', label: 'P90' },\n      { key: 'P95', label: 'P95' },\n      { key: 'P98', label: 'P98' },\n      { key: 'P99', label: 'P99' },\n    ],\n  },\n  { key: 'errors', label: 'Error rate', description: 'errors', aggregations: [{ key: 'MEAN', label: 'MEAN' }] },\n  {\n    key: 'services',\n    label: 'Service Count',\n    description: 'services',\n    aggregations: [{ key: 'DISTINCT_COUNT', label: 'DISTINCT_COUNT' }],\n  },\n];\n","import { SelectableValue } from '@grafana/data';\nimport { InstanaOptions } from '../types/instana_options';\nimport Cache from '../cache';\nimport _ from 'lodash';\nimport TimeFilter from '../types/time_filter';\nimport { getTimeKey, getWindowSize, hoursToMs } from '../util/time_util';\nimport { getRequest, postRequest } from '../util/request_handler';\nimport { getDefaultChartGranularity } from '../util/rollup_granularity_util';\nimport { InstanaQuery } from '../types/instana_query';\nimport { createTagFilter, readItemMetrics } from '../util/analyze_util';\nimport { emptyResultData } from '../util/target_util';\nimport { ALL_APPLICATIONS, PAGINATION_LIMIT } from '../GlobalVariables';\nimport defaultApplicationMetricCatalog from '../lists/default_metric_catalog';\nimport { isInvalidQueryInterval } from '../util/queryInterval_check';\nimport getVersion from '../util/instana_version';\n\nexport class DataSourceApplication {\n  instanaOptions: InstanaOptions;\n  applicationsCache: Cache<Promise<SelectableValue[]>>;\n  miscCache: Cache<any>;\n\n  constructor(options: InstanaOptions) {\n    this.instanaOptions = options;\n    this.applicationsCache = new Cache<Promise<SelectableValue[]>>();\n    this.miscCache = new Cache<any>();\n  }\n\n  runQuery(target: InstanaQuery, timeFilter: TimeFilter): any {\n    // do not try to execute to big queries\n    if (isInvalidQueryInterval(timeFilter.windowSize, hoursToMs(this.instanaOptions.queryinterval_limit_app_calls))) {\n      throw new Error(\n        'Limit for maximum selectable windowsize exceeded, max is: ' +\n          this.instanaOptions.queryinterval_limit_app_calls +\n          ' hours'\n      );\n    }\n\n    // avoid invalid calls\n    if (!target || !target.metric || !target.metric.key || !target.group || !target.group.key) {\n      return Promise.resolve(emptyResultData(target.refId));\n    }\n\n    return this.fetchAnalyzeMetricsForApplication(target, timeFilter).then((response) => {\n      target.showWarningCantShowAllResults = response.data.canLoadMore;\n      return readItemMetrics(target, response, this.buildAnalyzeApplicationLabel);\n    });\n  }\n\n  getApplications(timeFilter: TimeFilter) {\n    const key = getTimeKey(timeFilter);\n\n    let applications = this.applicationsCache.get(key);\n    if (applications) {\n      return applications;\n    }\n\n    const windowSize = getWindowSize(timeFilter);\n    let page = 1;\n    let pageSize = 200;\n\n    applications = this.paginateApplications([], windowSize, timeFilter.to, page, pageSize, PAGINATION_LIMIT).then(\n      (response: any) => {\n        let allResults = _.flattenDeep(\n          _.map(response, (pageSet) => {\n            return pageSet.items;\n          })\n        );\n\n        return _.orderBy(\n          _.compact(allResults).map((entry) => {\n            return {\n              key: entry.id,\n              label: entry.label,\n              boundaryScope: entry.boundaryScope,\n            };\n          }),\n          [(application) => application.label.toLowerCase()],\n          ['asc']\n        );\n      }\n    );\n\n    this.applicationsCache.put(key, applications, 600000);\n    return applications;\n  }\n\n  paginateApplications(\n    results: any,\n    windowSize: number,\n    to: number,\n    page: number,\n    pageSize: number,\n    pageLimit: number\n  ) {\n    if (page > pageLimit) {\n      return results;\n    }\n\n    let queryParameters = 'windowSize=' + windowSize + '&to=' + to + '&page=' + page + '&pageSize=' + pageSize;\n\n    return getRequest(this.instanaOptions, '/api/application-monitoring/applications?' + queryParameters).then(\n      (response: any) => {\n        results.push(response.data);\n        if (page * pageSize < response.data.totalHits) {\n          page++;\n          return this.paginateApplications(results, windowSize, to, page, pageSize, pageLimit);\n        } else {\n          return results;\n        }\n      }\n    );\n  }\n\n  getApplicationTags(timeFilter: TimeFilter) {\n    let applicationTags = this.miscCache.get('applicationTags');\n    if (applicationTags) {\n      return applicationTags;\n    }\n\n    return getVersion(this.instanaOptions).then((version: number) => {\n      if (version >= 191) {\n        applicationTags = this.getCatalog(timeFilter).then((catalog: any) =>\n          this.mapCatalogResponse(catalog.data.tags)\n        );\n      } else {\n        applicationTags = this.getCatalogFromDeprecatedEndpoint().then((tagsResponse: any) =>\n          this.mapCatalogResponse(tagsResponse.data)\n        );\n      }\n\n      this.miscCache.put('applicationTags', applicationTags);\n      return applicationTags;\n    });\n  }\n\n  getCatalog(timeFilter: TimeFilter) {\n    const endpoint = '/api/application-monitoring/catalog?dataSource=CALLS&useCase=FILTERING&from=' + timeFilter.from;\n    return getRequest(this.instanaOptions, endpoint);\n  }\n\n  getCatalogFromDeprecatedEndpoint() {\n    return getRequest(this.instanaOptions, '/api/application-monitoring/catalog/tags');\n  }\n\n  mapCatalogResponse(catalog: any) {\n    return catalog.map((entry: any) => ({\n      key: entry.name,\n      label: entry.name,\n      type: entry.type,\n      canApplyToSource: entry.canApplyToSource,\n      canApplyToDestination: entry.canApplyToDestination,\n    }));\n  }\n\n  getApplicationMetricsCatalog() {\n    return defaultApplicationMetricCatalog;\n  }\n\n  fetchAnalyzeMetricsForApplication(target: InstanaQuery, timeFilter: TimeFilter) {\n    const windowSize = getWindowSize(timeFilter);\n    let tagFilters: any[] = [];\n\n    return Promise.resolve(this.getApplicationTags(timeFilter)).then((applicationTags) => {\n      if (target.entity.key) {\n        tagFilters.push({\n          name: 'application.name',\n          operator: 'EQUALS',\n          value: target.entity.label!,\n          entity: target.applicationCallToEntity ? target.applicationCallToEntity : 'DESTINATION',\n        });\n      }\n\n      _.forEach(target.filters, (filter) => {\n        if (filter.isValid) {\n          let tagFilter: any = createTagFilter(filter);\n          const tag = _.find(applicationTags, ['key', filter.tag.key]);\n          if (tag.canApplyToDestination || tag.canApplyToSource) {\n            tagFilter['entity'] = this.getTagEntity(filter.entity, tag);\n          }\n          tagFilters.push(tagFilter);\n        }\n      });\n\n      const metric: any = {\n        metric: target.metric.key,\n        aggregation: target.aggregation && target.aggregation.key ? target.aggregation.key : 'SUM',\n      };\n\n      if (!target.timeInterval) {\n        target.timeInterval = getDefaultChartGranularity(windowSize);\n      }\n      metric['granularity'] = target.timeInterval.key;\n\n      const group: any = {\n        groupbyTag: target.group.key,\n      };\n      const tag: any = _.find(applicationTags, ['key', target.group.key]);\n      if (tag.canApplyToDestination || tag.canApplyToSource) {\n        group['groupbyTagEntity'] = target.callToEntity;\n      }\n      if (target.group.type === 'KEY_VALUE_PAIR' && target.groupbyTagSecondLevelKey) {\n        group['groupbyTagSecondLevelKey'] = target.groupbyTagSecondLevelKey;\n      }\n\n      const data: any = {\n        group: group,\n        timeFrame: {\n          to: timeFilter.to,\n          windowSize: windowSize,\n        },\n        metrics: [metric],\n        tagFilterExpression: {\n          type: 'EXPRESSION',\n          logicalOperator: 'AND',\n          elements: tagFilters,\n        },\n      };\n\n      return postRequest(\n        this.instanaOptions,\n        '/api/application-monitoring/analyze/call-groups?fillTimeSeries=true',\n        data,\n        false,\n        5\n      );\n    });\n  }\n\n  getTagEntity(selectedEntity: string, tag: any): string {\n    if (selectedEntity === 'DESTINATION' && tag.canApplyToDestination) {\n      return 'DESTINATION';\n    }\n    if (selectedEntity === 'SOURCE' && tag.canApplyToSource) {\n      return 'SOURCE';\n    }\n    return tag.canApplyToDestination ? 'DESTINATION' : 'SOURCE';\n  }\n\n  fetchApplicationMetrics(target: InstanaQuery, timeFilter: TimeFilter) {\n    // avoid invalid calls\n    if (!target || !target.metric || !target.metric.key) {\n      return Promise.resolve(emptyResultData(target.refId));\n    }\n\n    const windowSize = getWindowSize(timeFilter);\n    const metric: any = {\n      metric: target.metric.key,\n      aggregation: target.aggregation && target.aggregation.key ? target.aggregation.key : 'SUM',\n    };\n\n    if (!target.timeInterval) {\n      target.timeInterval = getDefaultChartGranularity(windowSize);\n    }\n    metric['granularity'] = target.timeInterval.key;\n\n    const data: any = {\n      timeFrame: {\n        to: timeFilter.to,\n        windowSize: windowSize,\n      },\n      metrics: [metric],\n    };\n\n    if (target.entity.key !== null) {\n      data['applicationId'] = target.entity.key;\n      data['applicationBoundaryScope'] = target.applicationBoundaryScope;\n    }\n\n    return postRequest(\n      this.instanaOptions,\n      '/api/application-monitoring/metrics/applications?fillTimeSeries=true',\n      data\n    );\n  }\n\n  buildAnalyzeApplicationLabel(target: InstanaQuery, item: any, key: string, index: number): string {\n    if (target.labelFormat) {\n      let label = target.labelFormat;\n      label = _.replace(label, '$label', item.name);\n      label = _.replace(label, '$application', target.entity.label!);\n      label = _.replace(label, '$metric', target.metric.label!);\n      label = _.replace(label, '$key', key);\n      label = _.replace(label, '$index', '' + index + 1);\n      label = _.replace(label, '$timeShift', target.timeShift);\n      return label;\n    }\n\n    if (target.entity.label === ALL_APPLICATIONS) {\n      return target.timeShift ? item.name + ' - ' + key + ' - ' + target.timeShift : item.name + ' - ' + key;\n    }\n\n    return target.timeShift && target.timeShiftIsValid\n      ? item.name + ' (' + target.entity.label + ')' + ' - ' + key + ' - ' + target.timeShift\n      : item.name + ' (' + target.entity.label + ')' + ' - ' + key;\n  }\n\n  buildApplicationMetricLabel(target: InstanaQuery, item: any, key: string, index: number): string {\n    if (target.labelFormat) {\n      let label = target.labelFormat;\n      label = _.replace(label, '$label', item.application.label);\n      label = _.replace(label, '$application', target.entity.label!);\n      label = _.replace(label, '$metric', target.metric.label!);\n      label = _.replace(label, '$key', key);\n      label = _.replace(label, '$index', '' + index + 1);\n      label = _.replace(label, '$timeShift', target.timeShift);\n      return label;\n    }\n\n    if (target.entity.label === ALL_APPLICATIONS) {\n      return target.timeShift\n        ? item.application.label + ' - ' + key + ' - ' + target.timeShift\n        : item.application.label + ' - ' + key;\n    }\n\n    return target.timeShift && target.timeShiftIsValid\n      ? item.application.label + ' (' + target.entity.label + ')' + ' - ' + key + ' - ' + target.timeShift\n      : item.application.label + ' (' + target.entity.label + ')' + ' - ' + key;\n  }\n}\n","import { SelectableValue } from '@grafana/data';\nimport { InstanaOptions } from '../types/instana_options';\nimport Cache from '../cache';\nimport _ from 'lodash';\nimport TimeFilter from '../types/time_filter';\nimport { getTimeKey, getWindowSize } from '../util/time_util';\nimport { getRequest, postRequest } from '../util/request_handler';\nimport { getDefaultChartGranularity } from '../util/rollup_granularity_util';\nimport { InstanaQuery } from '../types/instana_query';\nimport { PAGINATION_LIMIT } from '../GlobalVariables';\nimport { emptyResultData } from '../util/target_util';\n\nexport class DataSourceService {\n  instanaOptions: InstanaOptions;\n  servicesCache: Cache<Promise<SelectableValue[]>>;\n\n  constructor(options: InstanaOptions) {\n    this.instanaOptions = options;\n    this.servicesCache = new Cache<Promise<SelectableValue[]>>();\n  }\n\n  getServicesOfApplication(target: InstanaQuery, timeFilter: TimeFilter) {\n    let applicationId = '';\n    if (target.entity && target.entity.key) {\n      applicationId = target.entity.key;\n    }\n\n    const key = getTimeKey(timeFilter) + applicationId + target.applicationBoundaryScope;\n    let services = this.servicesCache.get(key);\n    if (services) {\n      return services;\n    }\n\n    const windowSize = getWindowSize(timeFilter);\n    let page = 1;\n    let pageSize = 200;\n\n    services = this.paginateServices(\n      [],\n      applicationId,\n      windowSize,\n      timeFilter.to,\n      target.applicationBoundaryScope,\n      page,\n      pageSize,\n      PAGINATION_LIMIT\n    ).then((response: any) => {\n      let allResults = _.flattenDeep(\n        _.map(response, (pageSet) => {\n          return pageSet.items;\n        })\n      );\n\n      return _.orderBy(\n        _.compact(allResults).map((entry) => {\n          return {\n            key: entry.id,\n            label: entry.label,\n          };\n        }),\n        [(service) => service.label.toLowerCase()],\n        ['asc']\n      );\n    });\n\n    this.servicesCache.put(key, services, 600000);\n    return services;\n  }\n\n  paginateServices(\n    results: any,\n    applicationId: string,\n    windowSize: number,\n    to: number,\n    applicationBoundaryScope: string,\n    page: number,\n    pageSize: number,\n    pageLimit: number\n  ) {\n    if (page > pageLimit) {\n      return results;\n    }\n\n    let queryParameters = 'windowSize=' + windowSize + '&to=' + to + '&page=' + page + '&pageSize=' + pageSize;\n    if (applicationBoundaryScope === 'ALL' || applicationBoundaryScope === 'INBOUND') {\n      queryParameters += '&applicationBoundaryScope=' + applicationBoundaryScope;\n    }\n\n    let url =\n      '/api/application-monitoring/applications;id=' +\n      (applicationId ? applicationId : '') +\n      '/services?' +\n      queryParameters;\n\n    return getRequest(this.instanaOptions, url).then((response: any) => {\n      results.push(response.data);\n      if (page * pageSize < response.data.totalHits) {\n        page++;\n        return this.paginateServices(\n          results,\n          applicationId,\n          windowSize,\n          to,\n          applicationBoundaryScope,\n          page,\n          pageSize,\n          pageLimit\n        );\n      } else {\n        return results;\n      }\n    });\n  }\n\n  fetchServiceMetrics(target: InstanaQuery, timeFilter: TimeFilter) {\n    // avoid invalid calls\n    if (!target || !target.metric || !target.metric.key) {\n      return Promise.resolve(emptyResultData(target.refId));\n    }\n\n    const windowSize = getWindowSize(timeFilter);\n\n    if (!target.timeInterval) {\n      target.timeInterval = getDefaultChartGranularity(windowSize);\n    }\n\n    const metric = {\n      metric: target.metric.key,\n      aggregation: target.aggregation && target.aggregation.key ? target.aggregation.key : 'SUM',\n      granularity: target.timeInterval.key,\n    };\n\n    const data: any = {\n      timeFrame: {\n        to: timeFilter.to,\n        windowSize: windowSize,\n      },\n      metrics: [metric],\n    };\n\n    if (target.entity && target.entity.key) {\n      data['applicationId'] = target.entity.key;\n      // only set applicationBoundaryScope when an application is selected\n      data['applicationBoundaryScope'] = target.applicationBoundaryScope;\n    }\n\n    if (target.service && target.service.key) {\n      data['serviceId'] = target.service.key;\n    }\n\n    return postRequest(this.instanaOptions, '/api/application-monitoring/metrics/services?fillTimeSeries=true', data);\n  }\n\n  buildServiceMetricLabel(target: InstanaQuery, item: any, key: string, index: number): string {\n    if (target.labelFormat) {\n      let label = target.labelFormat;\n      label = _.replace(label, '$label', item.service.label);\n      label = _.replace(label, '$service', target.service.label!);\n      label = _.replace(label, '$application', target.entity.label!);\n      label = _.replace(label, '$metric', target.metric.label!);\n      label = _.replace(label, '$key', key);\n      label = _.replace(label, '$index', index + 1 + '');\n      label = _.replace(label, '$timeShift', target.timeShift);\n      return label;\n    }\n\n    if (target.service.key === null) {\n      return target.timeShift\n        ? item.service.label + ' - ' + key + ' - ' + target.timeShift\n        : item.service.label + ' - ' + key;\n    }\n\n    return target.timeShift && target.timeShiftIsValid\n      ? item.service.label + ' (' + target.service.label + ')' + ' - ' + key + ' - ' + target.timeShift\n      : item.service.label + ' (' + target.service.label + ')' + ' - ' + key;\n  }\n}\n","import { SelectableValue } from '@grafana/data';\nimport { InstanaOptions } from '../types/instana_options';\nimport Cache from '../cache';\nimport _ from 'lodash';\nimport TimeFilter from '../types/time_filter';\nimport { getTimeKey, getWindowSize } from '../util/time_util';\nimport { getRequest, postRequest } from '../util/request_handler';\nimport { InstanaQuery } from '../types/instana_query';\nimport { ALL_ENDPOINTS, PAGINATION_LIMIT } from '../GlobalVariables';\nimport { emptyResultData } from '../util/target_util';\nimport { getDefaultChartGranularity } from '../util/rollup_granularity_util';\n\nexport class DataSourceEndpoint {\n  instanaOptions: InstanaOptions;\n  endpointsCache: Cache<Promise<SelectableValue[]>>;\n\n  constructor(options: InstanaOptions) {\n    this.instanaOptions = options;\n    this.endpointsCache = new Cache<Promise<SelectableValue[]>>();\n  }\n\n  getEndpointsOfService(target: InstanaQuery, timeFilter: TimeFilter) {\n    let applicationId = '';\n    if (target.entity && target.entity.key) {\n      applicationId = target.entity.key;\n    }\n\n    let serviceId = '';\n    if (target.service) {\n      serviceId = target.service.key;\n    }\n\n    const key = getTimeKey(timeFilter) + applicationId + serviceId + target.applicationBoundaryScope;\n    let endpoints = this.endpointsCache.get(key);\n    if (endpoints) {\n      return endpoints;\n    }\n\n    const windowSize = getWindowSize(timeFilter);\n    let page = 1;\n    let pageSize = 200;\n\n    endpoints = this.paginateEndpoints(\n      [],\n      applicationId,\n      serviceId,\n      windowSize,\n      target.applicationBoundaryScope,\n      timeFilter.to,\n      page,\n      pageSize,\n      PAGINATION_LIMIT\n    ).then((response: any) => {\n      let allResults = _.flattenDeep(\n        _.map(response, (pageSet) => {\n          return pageSet.items;\n        })\n      );\n\n      return _.orderBy(\n        _.compact(allResults).map((entry) => {\n          return {\n            key: entry.id,\n            label: entry.label,\n          };\n        }),\n        [(endpoint) => endpoint.label.toLowerCase()],\n        ['asc']\n      );\n    });\n\n    this.endpointsCache.put(key, endpoints, 600000);\n    return endpoints;\n  }\n\n  paginateEndpoints(\n    results: any,\n    applicationId: string,\n    serviceId: string,\n    windowSize: number,\n    applicationBoundaryScope: string,\n    to: number,\n    page: number,\n    pageSize: number,\n    pageLimit: number\n  ) {\n    if (page > pageLimit) {\n      return results;\n    }\n\n    let queryParameters = 'windowSize=' + windowSize + '&to=' + to + '&page=' + page + '&pageSize=' + pageSize;\n    if (applicationBoundaryScope === 'ALL' || applicationBoundaryScope === 'INBOUND') {\n      queryParameters += '&applicationBoundaryScope=' + applicationBoundaryScope;\n    }\n\n    let url =\n      '/api/application-monitoring/applications;id=' +\n      (applicationId ? applicationId : '') +\n      '/services;id=' +\n      (serviceId ? serviceId : '') +\n      '/endpoints?' +\n      queryParameters;\n\n    return getRequest(this.instanaOptions, url).then((response: any) => {\n      results.push(response.data);\n      if (page * pageSize < response.data.totalHits) {\n        page++;\n        return this.paginateEndpoints(\n          results,\n          applicationId,\n          serviceId,\n          windowSize,\n          applicationBoundaryScope,\n          to,\n          page,\n          pageSize,\n          pageLimit\n        );\n      } else {\n        return results;\n      }\n    });\n  }\n\n  fetchEndpointMetrics(target: InstanaQuery, timeFilter: TimeFilter) {\n    // avoid invalid calls\n    if (!target || !target.metric || !target.metric.key) {\n      return Promise.resolve(emptyResultData(target.refId));\n    }\n\n    const windowSize = getWindowSize(timeFilter);\n    const metric: any = {\n      metric: target.metric.key,\n      aggregation: target.aggregation && target.aggregation.key ? target.aggregation.key : 'SUM',\n    };\n\n    if (!target.timeInterval) {\n      target.timeInterval = getDefaultChartGranularity(windowSize);\n    }\n    metric['granularity'] = target.timeInterval.key;\n\n    const data: any = {\n      endpointId: target.endpoint.key,\n      timeFrame: {\n        to: timeFilter.to,\n        windowSize: windowSize,\n      },\n      metrics: [metric],\n    };\n\n    if (target.entity && target.entity.key) {\n      data['applicationId'] = target.entity.key;\n      // only set applicationBoundaryScope when an application is selected\n      data['applicationBoundaryScope'] = target.applicationBoundaryScope;\n    }\n\n    if (target.service && target.service.key) {\n      data['serviceId'] = target.service.key;\n    }\n\n    return postRequest(this.instanaOptions, '/api/application-monitoring/metrics/endpoints?fillTimeSeries=true', data);\n  }\n\n  buildEndpointMetricLabel(target: InstanaQuery, item: any, key: string, index: number): string {\n    if (target.labelFormat) {\n      let label = target.labelFormat;\n      label = _.replace(label, '$label', item.endpoint.label);\n      label = _.replace(label, '$endpoint', target.endpoint.label!);\n      label = _.replace(label, '$service', target.service.label!);\n      label = _.replace(label, '$application', target.entity.label!);\n      label = _.replace(label, '$metric', target.metric.label!);\n      label = _.replace(label, '$key', key);\n      label = _.replace(label, '$index', '' + index + 1);\n      label = _.replace(label, '$timeShift', target.timeShift);\n      return label;\n    }\n\n    if (target.endpoint.label === ALL_ENDPOINTS) {\n      return target.timeShift\n        ? item.endpoint.label + ' - ' + key + ' - ' + target.timeShift\n        : item.endpoint.label + ' - ' + key;\n    }\n\n    return target.timeShift && target.timeShiftIsValid\n      ? item.endpoint.label + ' (' + target.endpoint.label + ')' + ' - ' + key + ' - ' + target.timeShift\n      : item.endpoint.label + ' (' + target.endpoint.label + ')' + ' - ' + key;\n  }\n}\n","// can be removed once mixpanel shows no old plugins around\nimport _ from 'lodash';\nimport metric_categories from './lists/metric_categories';\n\nexport default function (target: any) {\n  // 1.3.1 towards 2.0.0\n  if (target.entityType && typeof target.entityType === 'string') {\n    target.entityType = { key: target.entityType, label: target.entityType };\n  }\n\n  // 2.3.1 towards 2.4.0\n  if (target.filter && target.filter !== '') {\n    if (!target.customFilters) {\n      target.customFilters = [];\n      target.customFilters.push({ value: target.filter });\n    }\n  }\n\n  // 2.4.2 towards 2.4.3\n  if (target.timeInterval) {\n    if (target.timeInterval.value) {\n      target.timeInterval = { key: target.timeInterval.value, label: target.timeInterval.label };\n    } else if (target.timeInterval.rollup) {\n      target.timeInterval = { key: target.timeInterval.rollup, label: target.timeInterval.label };\n    }\n  }\n\n  //2.4.4 towards 2.5.0\n  if (target.metricCategory === '5') {\n    //old service metric view\n    target.metricCategory = '4';\n    target.service = {}; //because target.service does not exist yet.\n    target.service.key = target.entity.key;\n    target.service.label = target.entity.label;\n    if (target.selectedApplication && target.selectedApplication.key) {\n      target.entity.key = target.selectedApplication.key;\n      target.entity.label = target.selectedApplication.label;\n    } else {\n      target.entity.key = null;\n      target.entity.label = 'Test';\n    }\n  }\n\n  //2.4.4 towards 2.5.0\n  if (target.metricCategory === '6') {\n    //old endpoint metric view\n    target.metricCategory = '4';\n    target.endpoint = {}; //because target.endpoint does not exist yet.\n    target.endpoint.key = target.entity.key;\n    if (target.selectedApplication && target.selectedApplication.key) {\n      target.entity.key = target.selectedApplication.key;\n      target.entity.label = target.selectedApplication.label;\n    } else {\n      target.entity.key = null;\n      target.entity.label = 'Test';\n    }\n  }\n\n  //2.7.3 towards 3.0 (Angular to React Migration)\n  if (target.aggregation && typeof target.aggregation === 'string') {\n    target.aggregation\n      ? (target.aggregation = { key: target.aggregation, label: target.aggregation })\n      : (target.aggregation = {});\n    target.aggregationFunction\n      ? (target.aggregationFunction = {\n          key: target.aggregationFunction.label,\n          label: target.aggregationFunction.label,\n        })\n      : (target.aggregationFunction = {});\n  }\n  if (target.customFilters && target.customFilters.length > 0 && target.customFilters[0].value) {\n    target.customFilters = _.map(target.customFilters, (cf) => cf.value);\n  }\n  if (target.filters && target.filters.length > 0 && !target.filters[0].tag.key && !target.filters[0].tag.label) {\n    _.forEach(target.filters, (filter) => {\n      filter.tag.label = filter.tag.key;\n    });\n  }\n  if (target.group && target.group.key && !target.group.label) {\n    target.group.label = target.group.key;\n  }\n  if (target.metricCategory && typeof target.metricCategory === 'string') {\n    target.metricCategory = _.find(\n      metric_categories,\n      (category) => category.key === parseInt(target.metricCategory, 10)\n    );\n  }\n\n  //3.0.1 towards 3.1.0\n  if (target.callToEntity && target.callToEntity.key) {\n    target.callToEntity = target.callToEntity.key;\n  }\n  if (target.applicationCallToEntity && target.applicationCallToEntity.key) {\n    target.applicationCallToEntity = target.applicationCallToEntity.key;\n  }\n  if (target.filters && target.filters.length > 0) {\n    target.filters.forEach((filter: any) => {\n      if (filter.entity && filter.entity.key) {\n        filter.entity = filter.entity.key;\n      }\n    });\n  }\n}\n","import {\n  DataQueryRequest,\n  DataQueryResponse,\n  DataSourceApi,\n  DataSourceInstanceSettings,\n  SelectableValue,\n} from '@grafana/data';\nimport { InstanaQuery } from '../types/instana_query';\nimport { InstanaOptions } from '../types/instana_options';\nimport { getRequest, instanaUrl } from '../util/request_handler';\nimport { DataSourceSlo } from './DataSource_Slo';\nimport MetricCategories from '../lists/metric_categories';\nimport TimeFilter from '../types/time_filter';\nimport { hoursToMs, readTime } from '../util/time_util';\nimport Cache from '../cache';\nimport { emptyResultData } from '../util/target_util';\nimport _ from 'lodash';\nimport { DataSourceInfrastructure } from './Datasource_Infrastructure';\nimport {\n  getDefaultChartGranularity,\n  getDefaultMetricRollupDuration,\n  getPossibleGranularities,\n  getPossibleRollups,\n} from '../util/rollup_granularity_util';\nimport { appendData, generateStableHash, hasIntersection, getDeltaRequestTimestamp } from '../util/delta_util';\nimport {\n  ANALYZE_APPLICATION_METRICS,\n  ANALYZE_WEBSITE_METRICS,\n  APPLICATION_SERVICE_ENDPOINT_METRICS,\n  BUILT_IN_METRICS,\n  CUSTOM_METRICS,\n  SLO_INFORMATION,\n  INFRASTRUCTURE_EXPLORE,\n} from '../GlobalVariables';\nimport getVersion from '../util/instana_version';\nimport { aggregateTarget } from '../util/aggregation_util';\nimport { DataSourceWebsite } from './DataSource_Website';\nimport { DataSourceApplication } from './DataSource_Application';\nimport { DataSourceService } from './DataSource_Service';\nimport { DataSourceEndpoint } from './DataSource_Endpoint';\nimport { isInvalidQueryInterval } from '../util/queryInterval_check';\nimport { readItemMetrics } from '../util/analyze_util';\nimport migrate from '../migration';\n\nexport class DataSource extends DataSourceApi<InstanaQuery, InstanaOptions> {\n  options: InstanaOptions;\n  dataSourceInfrastructure: DataSourceInfrastructure;\n  dataSourceWebsite: DataSourceWebsite;\n  dataSourceApplication: DataSourceApplication;\n  dataSourceService: DataSourceService;\n  dataSourceEndpoint: DataSourceEndpoint;\n  dataSourceSlo: DataSourceSlo;\n  timeFilter!: TimeFilter;\n  availableGranularities: SelectableValue[];\n  availableRollups: SelectableValue[];\n  availableTimeIntervals: SelectableValue[];\n  resultCache: Cache<any>;\n\n  constructor(instanceSettings: DataSourceInstanceSettings<InstanaOptions>) {\n    super(instanceSettings);\n    this.options = instanceSettings.jsonData;\n    this.options.url = instanaUrl(instanceSettings);\n    this.availableGranularities = [];\n    this.availableRollups = [];\n    this.availableTimeIntervals = [];\n    this.dataSourceSlo = new DataSourceSlo(instanceSettings.jsonData);\n    this.dataSourceInfrastructure = new DataSourceInfrastructure(instanceSettings.jsonData);\n    this.dataSourceWebsite = new DataSourceWebsite(instanceSettings.jsonData);\n    this.dataSourceApplication = new DataSourceApplication(instanceSettings.jsonData);\n    this.dataSourceService = new DataSourceService(instanceSettings.jsonData);\n    this.dataSourceEndpoint = new DataSourceEndpoint(instanceSettings.jsonData);\n    this.resultCache = new Cache<any>();\n  }\n\n  async query(options: DataQueryRequest<InstanaQuery>): Promise<DataQueryResponse> {\n    const { range } = options;\n    this.timeFilter = readTime(range!);\n    this.availableRollups = getPossibleRollups(this.timeFilter);\n    this.availableGranularities = getPossibleGranularities(this.timeFilter.windowSize);\n\n    return Promise.all(\n      options.targets.map((target) => {\n        let targetTimeFilter = readTime(range!);\n\n        // grafana setting to disable query execution\n        if (target.hide) {\n          return { data: [], target: target };\n        }\n\n        // target migration for downwards compatibility\n        migrate(target);\n\n        if (!target.metricCategory) {\n          target.metricCategory = MetricCategories[0];\n        }\n\n        this.setPossibleTimeIntervals(target);\n        if (!this.availableTimeIntervals.find((i) => i.key === target.timeInterval.key)) {\n          target.timeInterval = this.getDefaultTimeInterval(target);\n        }\n\n        if (target.timeShift) {\n          let millis = this.convertTimeShiftToMillis(target.timeShift);\n          if (millis > 0) {\n            targetTimeFilter = this.applyTimeShiftOnTimeFilter(targetTimeFilter, millis);\n          }\n        }\n\n        target.timeFilter = targetTimeFilter;\n        target.stableHash = generateStableHash(target);\n        targetTimeFilter = this.adjustTimeFilterIfCached(targetTimeFilter, target);\n        const category = target.metricCategory.key;\n\n        if (category === SLO_INFORMATION) {\n          return this.dataSourceSlo.runQuery(target, targetTimeFilter).then((data: any) => {\n            return this.buildTargetWithAppendedDataResult(target, targetTimeFilter, data);\n          });\n        } else if (category === INFRASTRUCTURE_EXPLORE) {\n          return this.dataSourceInfrastructure.runQuery(target, targetTimeFilter).then((data: any) => {\n            return this.buildTarget(target, data);\n          });\n        } else if (category === BUILT_IN_METRICS || category === CUSTOM_METRICS) {\n          return this.dataSourceInfrastructure.runQuery(target, targetTimeFilter).then((data: any) => {\n            return this.buildTargetWithAppendedDataResult(target, targetTimeFilter, data);\n          });\n        } else if (category === ANALYZE_WEBSITE_METRICS) {\n          return this.dataSourceWebsite.runQuery(target, targetTimeFilter).then((data: any) => {\n            return this.buildTargetWithAppendedDataResult(target, targetTimeFilter, data);\n          });\n        } else if (category === ANALYZE_APPLICATION_METRICS) {\n          return this.dataSourceApplication.runQuery(target, targetTimeFilter).then((data: any) => {\n            return this.buildTargetWithAppendedDataResult(target, targetTimeFilter, data);\n          });\n        } else if (category === APPLICATION_SERVICE_ENDPOINT_METRICS) {\n          return this.getApplicationServiceEndpointMetrics(target, targetTimeFilter).then((data: any) => {\n            return this.buildTargetWithAppendedDataResult(target, targetTimeFilter, data);\n          });\n        }\n\n        return Promise.resolve(emptyResultData(target.refId));\n      })\n    ).then((targetData) => {\n      let result: any = [];\n      _.each(targetData, (targetAndData) => {\n        // Flatten the list as Grafana expects a list of targets with corresponding datapoints.\n        let resultData: any = _.compact(_.flatten(targetAndData.data)); // Also remove empty data items\n        this.cacheResultIfNecessary(_.cloneDeep(resultData), targetAndData.target); // clone to store results without timeshift re-calculation\n        this.applyTimeShiftIfNecessary(resultData, targetAndData.target); // adjust resultdata after caching the result\n        resultData = this.aggregateDataIfNecessary(resultData, targetAndData.target);\n        result.push(resultData);\n      });\n\n      return { data: _.flatten(result) };\n    });\n  }\n\n  getApplicationServiceEndpointMetrics(target: InstanaQuery, timeFilter: TimeFilter) {\n    // do not try to execute too big queries\n    if (isInvalidQueryInterval(timeFilter.windowSize, hoursToMs(this.options.queryinterval_limit_app_metrics))) {\n      throw new Error(\n        'Limit for maximum selectable windowsize exceeded, max is: ' +\n          this.options.queryinterval_limit_app_metrics +\n          ' hours'\n      );\n    }\n\n    if (target.endpoint && target.endpoint.key) {\n      return this.dataSourceEndpoint.fetchEndpointMetrics(target, timeFilter).then((response: any) => {\n        return readItemMetrics(target, response, this.dataSourceEndpoint.buildEndpointMetricLabel);\n      });\n    } else if (target.service && target.service.key) {\n      return this.dataSourceService.fetchServiceMetrics(target, timeFilter).then((response: any) => {\n        return readItemMetrics(target, response, this.dataSourceService.buildServiceMetricLabel);\n      });\n    } else if (target.entity && target.entity.key) {\n      return this.dataSourceApplication.fetchApplicationMetrics(target, timeFilter).then((response: any) => {\n        if (response.data) {\n          target.showWarningCantShowAllResults = response.data.canLoadMore;\n        }\n        return readItemMetrics(target, response, this.dataSourceApplication.buildApplicationMetricLabel);\n      });\n    }\n\n    return Promise.resolve({ data: { items: [] } });\n  }\n\n  applyTimeShiftIfNecessary(data: any, target: InstanaQuery) {\n    if (target.timeShift) {\n      let millis = this.convertTimeShiftToMillis(target.timeShift);\n      if (millis > 0) {\n        data.forEach((data: any) => {\n          this.applyTimeShiftOnData(data, millis);\n        });\n      }\n    }\n  }\n\n  cacheResultIfNecessary(result: any, target: InstanaQuery) {\n    if (this.supportsDeltaRequests(target) && this.hasResult(result)) {\n      let cachedObj = {\n        timeFilter: target.timeFilter,\n        results: result,\n      };\n      this.resultCache.put(target.stableHash, cachedObj, 4000000); // set to 1,11 hour\n    }\n  }\n\n  supportsDeltaRequests(target: InstanaQuery): boolean {\n    if (target.metricCategory) {\n      if (target.metricCategory.key === SLO_INFORMATION || target.metricCategory.key === INFRASTRUCTURE_EXPLORE) {\n        return false;\n      }\n    }\n\n    let version = this.resultCache.get('version');\n    if (!version) {\n      return getVersion(this.options).then((version: any) => {\n        this.resultCache.put('version', version, 4000000); // set to 1,11 hour\n        return version >= 171;\n      });\n    }\n\n    return version >= 171;\n  }\n\n  hasResult(result: any) {\n    return result && result.length > 0;\n  }\n\n  applyTimeShiftOnData(data: any, timeshift: number) {\n    data.datapoints.forEach((datapoint: any) => {\n      datapoint[1] = datapoint[1] + timeshift;\n    });\n  }\n\n  aggregateDataIfNecessary(data: any, target: InstanaQuery): any[] {\n    let newData = [];\n\n    if (target.aggregateGraphs) {\n      const aggregatedData = aggregateTarget(data, target);\n      newData.push(aggregatedData);\n      if (!target.hideOriginalGraphs) {\n        _.each(data, (dt) => {\n          if (dt.target !== aggregatedData.target) {\n            newData.push(dt);\n          }\n        });\n      }\n      return newData;\n    }\n\n    return data;\n  }\n\n  buildTarget(target: InstanaQuery, data: any) {\n    return {\n      target: target,\n      data: data,\n    };\n  }\n\n  buildTargetWithAppendedDataResult(target: InstanaQuery, timeFilter: TimeFilter, data: any) {\n    if (timeFilter.from !== target.timeFilter.from && data) {\n      data = this.appendResult(data, target);\n\n      data.forEach((t: any) => {\n        t.datapoints = t.datapoints.filter((d: any) => d[1] >= target.timeFilter.from);\n      });\n    }\n\n    return this.buildTarget(target, data);\n  }\n\n  appendResult(data: any, target: InstanaQuery) {\n    let cachedResult = this.resultCache.get(target.stableHash);\n    if (cachedResult && cachedResult.results) {\n      data = appendData(data, cachedResult.results);\n    }\n    return data;\n  }\n\n  adjustTimeFilterIfCached(timeFilter: TimeFilter, target: InstanaQuery): TimeFilter {\n    let cachedResult = this.resultCache.get(target.stableHash);\n    if (cachedResult && hasIntersection(timeFilter, cachedResult.timeFilter)) {\n      let newFrom = getDeltaRequestTimestamp(cachedResult.results, cachedResult.timeFilter.from, target.timeInterval);\n      let newTo = Math.floor(timeFilter.to / 10000) * 10000;\n      return {\n        from: newFrom,\n        to: newTo,\n        windowSize: newTo - newFrom,\n      };\n    }\n    return timeFilter;\n  }\n\n  getSloReports(): Promise<SelectableValue[]> {\n    return this.dataSourceSlo.getConfiguredSLIs();\n  }\n\n  getEntityTypes(): Promise<SelectableValue[]> {\n    return this.dataSourceInfrastructure.getEntityTypes();\n  }\n\n  fetchApplications() {\n    return this.dataSourceApplication.getApplications(this.getTimeFilter());\n  }\n\n  fetchApplicationTags() {\n    return this.dataSourceApplication.getApplicationTags(this.getTimeFilter());\n  }\n\n  fetchServices(target: InstanaQuery) {\n    return this.dataSourceService.getServicesOfApplication(target, this.getTimeFilter());\n  }\n\n  fetchEndpoints(target: InstanaQuery) {\n    return this.dataSourceEndpoint.getEndpointsOfService(target, this.getTimeFilter());\n  }\n\n  fetchTypesForTarget(query: InstanaQuery) {\n    return this.dataSourceInfrastructure.fetchTypesForTarget(query, this.getTimeFilter());\n  }\n\n  fetchWebsites(): Promise<SelectableValue[]> {\n    return this.dataSourceWebsite.getWebsites(this.getTimeFilter());\n  }\n\n  getDefaultTimeInterval(query: InstanaQuery) {\n    const category = query.metricCategory.key;\n    if (category === BUILT_IN_METRICS || category === CUSTOM_METRICS || category === INFRASTRUCTURE_EXPLORE) {\n      return getDefaultMetricRollupDuration(this.getTimeFilter());\n    } else {\n      return getDefaultChartGranularity(this.getTimeFilter().windowSize);\n    }\n  }\n\n  convertTimeShiftToMillis(timeShift: string): number {\n    if (!timeShift) {\n      return 0;\n    }\n\n    try {\n      return this.parseTimeShift(timeShift);\n    } catch (e) {\n      return 0;\n    }\n  }\n\n  parseTimeShift(timeShift: string): number {\n    let milliSeconds = 1000;\n\n    if (timeShift.endsWith('s')) {\n      return parseInt(timeShift.split('s')[0], 10) * milliSeconds;\n    } else if (timeShift.endsWith('m')) {\n      return parseInt(timeShift.split('m')[0], 10) * 60 * milliSeconds;\n    } else if (timeShift.endsWith('h')) {\n      return parseInt(timeShift.split('h')[0], 10) * 60 * 60 * milliSeconds;\n    } else if (timeShift.endsWith('d')) {\n      return parseInt(timeShift.split('d')[0], 10) * 60 * 60 * 24 * milliSeconds;\n    } else if (timeShift.endsWith('w')) {\n      return parseInt(timeShift.split('w')[0], 10) * 60 * 60 * 24 * 7 * milliSeconds;\n    }\n    return 0;\n  }\n\n  applyTimeShiftOnTimeFilter(timeFilter: TimeFilter, timeShift: number): TimeFilter {\n    return {\n      from: timeFilter.from - timeShift,\n      to: timeFilter.to - timeShift,\n      windowSize: timeFilter.windowSize,\n    };\n  }\n\n  setPossibleTimeIntervals(target: InstanaQuery) {\n    const category = target.metricCategory.key;\n    if (category === BUILT_IN_METRICS || category === CUSTOM_METRICS || category === INFRASTRUCTURE_EXPLORE) {\n      this.availableTimeIntervals = this.availableRollups;\n    } else {\n      this.availableTimeIntervals = this.availableGranularities;\n    }\n  }\n\n  getTimeFilter(): TimeFilter {\n    if (!this.timeFilter || !this.timeFilter.from) {\n      const now = Math.floor(Date.now() / 1000) * 1000;\n      const windowSize = 6 * 60 * 60 * 1000; // 6h\n      this.timeFilter = {\n        from: now - windowSize,\n        to: now,\n        windowSize: windowSize,\n      };\n    }\n\n    return this.timeFilter;\n  }\n\n  testDatasource(): Promise<any> {\n    return getRequest(this.options, '/api/monitoringState').then(\n      () => {\n        return {\n          status: 'success',\n          message: 'Successfully connected to the Instana API.',\n          title: 'Success',\n        };\n      },\n      (error: any) => {\n        if (error.status === 401) {\n          return {\n            status: 'error',\n            message: 'Unauthorized. Please verify the API Token.',\n            title: 'Error',\n          };\n        } else {\n          console.log(error);\n          return {\n            status: 'error',\n            message: 'Error (' + error.status + ') connecting to the Instana API: ' + error.statusText,\n            title: 'Error',\n          };\n        }\n      }\n    );\n  }\n}\n","import _ from 'lodash';\n\n// check grafana version (5.3+)\nexport default () => {\n  const version = _.get(window, ['grafanaBootData', 'settings', 'buildInfo', 'version'], '3.0.0');\n  const versions = _.split(version, '.', 2).map((v) => {\n    return parseInt(v, 10);\n  });\n  return version[0] >= 6 || (versions[0] >= 5 && versions[1] >= 3);\n};\n","import React, { ChangeEvent, PureComponent } from 'react';\n\nimport { DataSourcePluginOptionsEditorProps, DataSourceSettings, SelectableValue } from '@grafana/data';\nimport { Legend, Field, Input, Checkbox, Icon, Tooltip } from '@grafana/ui';\nimport { InstanaOptions } from '../types/instana_options';\nimport getVersion from '../util/instana_version';\nimport proxyCheck from '../util/proxy_check';\nimport _ from 'lodash';\nimport './plugin.css';\n\ninterface Props extends DataSourcePluginOptionsEditorProps<InstanaOptions> {}\n\ninterface State {\n  canQueryOfflineSnapshots: boolean;\n  canUseProxy: boolean;\n}\n\nexport class ConfigEditor extends PureComponent<Props, State> {\n  constructor(props: Readonly<Props>) {\n    super(props);\n    this.state = { canQueryOfflineSnapshots: false, canUseProxy: false };\n\n    // check possibility every time\n    this.detectFeatures();\n\n    const { options } = this.props;\n    const { jsonData } = options;\n\n    if (jsonData.useProxy === undefined) {\n      jsonData.useProxy = proxyCheck();\n    }\n  }\n\n  onInstanaOptionsChange = (eventItem: ChangeEvent<HTMLInputElement> | SelectableValue, key: keyof InstanaOptions) => {\n    const { options, onOptionsChange } = this.props;\n    const jsonData = {\n      ...options.jsonData,\n      [key]: eventItem.currentTarget.value,\n    };\n\n    onOptionsChange({ ...options, jsonData });\n\n    if ('url' === key || 'apiToken' === key) {\n      this.debouncedDetectFeatures(options);\n    }\n  };\n\n  onSwitchChange = (eventItem: SelectableValue<HTMLInputElement> | any, key: keyof InstanaOptions) => {\n    const { options, onOptionsChange } = this.props;\n    let value = false;\n\n    if (eventItem && eventItem.currentTarget) {\n      value = !options.jsonData[key];\n    }\n\n    const jsonData = {\n      ...options.jsonData,\n      [key]: value,\n    };\n\n    onOptionsChange({ ...options, jsonData });\n  };\n\n  debouncedDetectFeatures = (settings?: DataSourceSettings<InstanaOptions, {}>) => {\n    _.debounce(() => this.detectFeatures(settings), 500);\n  };\n\n  /**\n   * Checks whether the provided tenant-unit is able to provide certain features such as querying offline snapshots.\n   */\n  detectFeatures = (settings?: DataSourceSettings<InstanaOptions, {}>) => {\n    if (!settings) {\n      settings = this.props.options;\n    }\n\n    if (!settings.id) {\n      return;\n    }\n\n    this.setState({ canUseProxy: proxyCheck() });\n    getVersion(settings.jsonData).then((version: any) => {\n      version\n        ? this.setState({ canQueryOfflineSnapshots: version >= 156 })\n        : this.setState({ canQueryOfflineSnapshots: false });\n    });\n  };\n\n  render() {\n    const { options } = this.props;\n    const { jsonData } = options;\n\n    return (\n      <div className=\"settings\">\n        <Legend>Instana configuration</Legend>\n\n        <Field\n          className={'width-30'}\n          horizontal\n          required\n          label=\"URL\"\n          description=\"The URL of your Instana installation.\"\n        >\n          <Input\n            css={''}\n            width={30}\n            value={jsonData.url}\n            placeholder={'https://tools-acme.instana.io'}\n            onChange={(event) => this.onInstanaOptionsChange(event, 'url')}\n          />\n        </Field>\n\n        <Field\n          className={'width-30'}\n          horizontal\n          required\n          label=\"API Token\"\n          description=\"The API token to access the data.\"\n        >\n          <Input\n            type=\"password\"\n            css={''}\n            width={30}\n            value={jsonData.apiToken}\n            suffix={\n              <Tooltip\n                content={\n                  <p>\n                    You can create API tokens following the instructions at&nbsp;\n                    <a href=\"https://docs.instana.io/quick_start/api/#api-tokens\">\n                      https://docs.instana.io/quick_start/api/#api-tokens\n                    </a>\n                  </p>\n                }\n                theme={'info'}\n              >\n                <Icon name=\"info-circle\" />\n              </Tooltip>\n            }\n            onChange={(event) => this.onInstanaOptionsChange(event, 'apiToken')}\n          />\n        </Field>\n\n        <Checkbox\n          css={''}\n          label={'Use Proxy'}\n          value={jsonData.useProxy}\n          onChange={(event) => this.onSwitchChange(event, 'useProxy')}\n          description={'Use Grafana server as proxy. Needs Grafana 5.3+ and Instana datasource 2.0.0+'}\n        />\n\n        <Checkbox\n          css={''}\n          label={'Enable offline snapshots'}\n          value={jsonData.showOffline}\n          onChange={(event) => this.onSwitchChange(event, 'showOffline')}\n          description={'Enables querying offline snapshots. Needs Instana release 156+ and Instana datasource 2.3.0+'}\n        />\n\n        <Checkbox\n          css={''}\n          label={'Enable Infrastructure Explore category'}\n          value={jsonData.allowInfraExplore}\n          onChange={(event) => this.onSwitchChange(event, 'allowInfraExplore')}\n          description={\n            'Beta feature. Adds a new category that allows usage of Infrastructure Explore functionality. Needs Instana release ' +\n            '195+ and an explicit feature flag. If you are interested in this technology, please submit a request via ' +\n            'our support system at https://support.instana.com/.'\n          }\n        />\n\n        <br />\n        <br />\n        <b>Maximum query intervals in hours</b>\n        <p className={'width-30'}>\n          This settings are optional values to control the load of data queries, by defining the maximum allowed query\n          intervals against the Instana API.\n        </p>\n\n        <Field className={'width-30'} horizontal label=\"Infrastructure metrics\">\n          <Input\n            css={''}\n            width={30}\n            value={jsonData.queryinterval_limit_infra}\n            placeholder={'optional: interval limit in hours'}\n            onChange={(event) => this.onInstanaOptionsChange(event, 'queryinterval_limit_infra')}\n          />\n        </Field>\n\n        <Field className={'width-30'} horizontal label=\"Application metrics\">\n          <Input\n            css={''}\n            width={30}\n            value={jsonData.queryinterval_limit_app_metrics}\n            placeholder={'optional: interval limit in hours'}\n            onChange={(event) => this.onInstanaOptionsChange(event, 'queryinterval_limit_app_metrics')}\n          />\n        </Field>\n\n        <Field className={'width-30'} horizontal label=\"Analyze application calls\">\n          <Input\n            css={''}\n            width={30}\n            value={jsonData.queryinterval_limit_app_calls}\n            placeholder={'optional: interval limit in hours'}\n            onChange={(event) => this.onInstanaOptionsChange(event, 'queryinterval_limit_app_calls')}\n          />\n        </Field>\n\n        <Field className={'width-30'} horizontal label=\"Analyze website\">\n          <Input\n            css={''}\n            width={30}\n            value={jsonData.queryinterval_limit_website_metrics}\n            placeholder={'optional: interval limit in hours'}\n            onChange={(event) => this.onInstanaOptionsChange(event, 'queryinterval_limit_website_metrics')}\n          />\n        </Field>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\ninterface WrapperProps {\n  disabled?: boolean;\n  stretch?: boolean;\n  children: any;\n}\n\nexport default function FormWrapper(props: WrapperProps) {\n  const style: any = { display: 'flex' };\n\n  if (props.disabled) {\n    style.opacity = '0.4';\n    style.pointerEvents = 'none';\n  }\n\n  if (props.stretch) {\n    style.width = '100%';\n  }\n\n  return <div style={style}>{props.children}</div>;\n}\n","import React from 'react';\n\nimport { InlineFormLabel, LegacyForms, PopoverContent } from '@grafana/ui';\nimport FormWrapper from './FormWrapper';\n\nconst { Switch } = LegacyForms;\n\ninterface State {}\n\ninterface Props {\n  label: string;\n  value: boolean;\n  disabled?: boolean;\n  queryKeyword?: boolean;\n  labelWidth?: number | 14;\n  tooltip?: PopoverContent;\n\n  onChange(event?: any): any;\n}\n\n/**\n * Default switch field including label. Switch element is grafana/ui <Switch />.\n */\nexport default class FormSwitch extends React.Component<Props, State> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  render() {\n    const { label, tooltip, queryKeyword, disabled, labelWidth = 14, value, ...remainingProps } = this.props;\n\n    return (\n      <FormWrapper disabled={disabled} stretch={false}>\n        <InlineFormLabel className={queryKeyword ? 'query-keyword' : ''} width={labelWidth} tooltip={tooltip}>\n          {label}\n        </InlineFormLabel>\n        <Switch checked={value} label={''} {...remainingProps} />\n      </FormWrapper>\n    );\n  }\n}\n","import React, { ChangeEvent } from 'react';\n\nimport { InstanaQuery } from '../../../types/instana_query';\nimport FormSwitch from '../../FormField/FormSwitch';\nimport { Input } from '@grafana/ui';\nimport _ from 'lodash';\n\ninterface FreeTextMetricsState {}\n\ninterface Props {\n  query: InstanaQuery;\n  onRunQuery(): void;\n  onChange(value: InstanaQuery): void;\n  loadEntityTypes(filterResult?: boolean): void;\n}\n\nexport class FreeTextMetrics extends React.Component<Props, FreeTextMetricsState> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  debouncedRunQuery = _.debounce(this.props.onRunQuery, 500);\n\n  onUseFreeTextMetricsChange = (event: React.SyntheticEvent<HTMLInputElement> | undefined) => {\n    const { query, onChange, loadEntityTypes } = this.props;\n    if (event && event.currentTarget) {\n      query.useFreeTextMetrics = event.currentTarget.checked;\n      if (query.useFreeTextMetrics) {\n        loadEntityTypes(false);\n        query.metric = {};\n      } else {\n        loadEntityTypes(true);\n      }\n      onChange(query);\n    }\n  };\n\n  onFreeTextMetricsChange = (eventItem: ChangeEvent<HTMLInputElement>) => {\n    const { query, onChange } = this.props;\n    query.freeTextMetrics = eventItem.currentTarget.value;\n    onChange(query);\n\n    // onRunQuery with 500ms delay after last debounce\n    this.debouncedRunQuery();\n  };\n\n  render() {\n    const { query } = this.props;\n\n    return (\n      <div className={'gf-form'}>\n        <FormSwitch\n          queryKeyword\n          label={'Enable free text metrics'}\n          tooltip={\n            'Specify comma separated metrics directly in this text field. Once this field has a value,' +\n            ' selected metrics from above will be ignored. Enabled as soon as a query is entered.' +\n            ' Max 4 metrics supported.'\n          }\n          value={query.useFreeTextMetrics}\n          onChange={this.onUseFreeTextMetricsChange}\n          disabled={false}\n        />\n        <Input\n          css={''}\n          width={0}\n          disabled={!query.useFreeTextMetrics}\n          value={query.freeTextMetrics}\n          placeholder={'metric.one,metric.two,metric.three'}\n          onChange={this.onFreeTextMetricsChange}\n        />\n      </div>\n    );\n  }\n}\n","export default [\n  {\n    label: 'SUM',\n  },\n  {\n    label: 'MEAN',\n  },\n  {\n    label: 'MIN',\n  },\n  {\n    label: 'MAX',\n  },\n];\n","import React from 'react';\n\nimport AggregationFunctions from '../../lists/aggregation_function';\nimport { InstanaQuery } from '../../types/instana_query';\nimport FormSwitch from '../FormField/FormSwitch';\nimport { SelectableValue } from '@grafana/data';\nimport { Select } from '@grafana/ui';\n\ninterface AggregateQueryState {}\n\ninterface Props {\n  query: InstanaQuery;\n  onRunQuery(): void;\n  onChange(value: InstanaQuery): void;\n}\n\nexport class AggregateQuery extends React.Component<Props, AggregateQueryState> {\n  constructor(props: any) {\n    super(props);\n    this.state = { showAdditionalSettings: false, legendFormat: '' };\n    const { query } = this.props;\n    if (!query.aggregationFunction) {\n      query.aggregationFunction = AggregationFunctions[0];\n    }\n  }\n\n  onAggregateGraphs = (event: React.SyntheticEvent<HTMLInputElement> | undefined) => {\n    const { query, onRunQuery } = this.props;\n    if (event && event.currentTarget) {\n      query.aggregateGraphs = event.currentTarget.checked;\n      onRunQuery();\n    }\n  };\n\n  onHideOriginalGraph = (event: React.SyntheticEvent<HTMLInputElement> | undefined) => {\n    const { query, onRunQuery } = this.props;\n    if (event && event.currentTarget) {\n      query.hideOriginalGraphs = event.currentTarget.checked;\n      onRunQuery();\n    }\n  };\n\n  onAggregationFunctionChange = (event: SelectableValue) => {\n    const { query, onRunQuery } = this.props;\n    query.aggregationFunction = event;\n    onRunQuery();\n  };\n\n  render() {\n    const { query } = this.props;\n\n    return (\n      <div className={'gf-form'}>\n        <FormSwitch\n          queryKeyword\n          label={'Aggregate query graphs'}\n          tooltip={'Aggregate all graphs of a query.'}\n          value={query.aggregateGraphs}\n          onChange={this.onAggregateGraphs}\n        />\n\n        <Select\n          menuPlacement={'bottom'}\n          width={12}\n          isSearchable={true}\n          options={AggregationFunctions}\n          value={query.aggregationFunction}\n          disabled={!query.aggregateGraphs}\n          onChange={this.onAggregationFunctionChange}\n        />\n\n        <FormSwitch\n          queryKeyword\n          disabled={!query.aggregateGraphs}\n          labelWidth={10}\n          label={'Hide original graphs'}\n          tooltip={'Removes the original graphs resulted from the query and only shows the aggregated graph.'}\n          value={query.hideOriginalGraphs}\n          onChange={this.onHideOriginalGraph}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nimport { InlineFormLabel, Input, PopoverContent } from '@grafana/ui';\nimport FormWrapper from './FormWrapper';\n\ninterface State {}\n\ninterface Props {\n  label: string;\n  value: string;\n  invalid?: boolean;\n  disabled?: boolean;\n  placeholder?: string;\n  queryKeyword?: boolean;\n  labelWidth?: number | 14;\n  inputWidth?: number | 30;\n  tooltip?: PopoverContent;\n\n  onChange(event?: any): any;\n}\n\n/**\n * Default input field including label. Input element is grafana/ui <Input />.\n */\nexport default class FormInput extends React.Component<Props, State> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  render() {\n    const { label, tooltip, queryKeyword, disabled, labelWidth = 14, inputWidth = 30, ...remainingProps } = this.props;\n\n    return (\n      <FormWrapper disabled={disabled} stretch={!inputWidth}>\n        <InlineFormLabel className={queryKeyword ? 'query-keyword' : ''} width={labelWidth} tooltip={tooltip}>\n          {label}\n        </InlineFormLabel>\n        <Input css={''} width={inputWidth} disabled={disabled} {...remainingProps} />\n      </FormWrapper>\n    );\n  }\n}\n","import React, { ChangeEvent, FormEvent } from 'react';\n\nimport { BUILT_IN_METRICS, CUSTOM_METRICS, INFRASTRUCTURE_EXPLORE, SLO_INFORMATION } from '../../GlobalVariables';\nimport { FreeTextMetrics } from '../Infrastructure/Custom/FreeTextMetrics';\nimport { InstanaQuery } from '../../types/instana_query';\nimport { AggregateQuery } from './AggregateQuery';\nimport FormSwitch from '../FormField/FormSwitch';\nimport FormInput from '../FormField/FormInput';\nimport _ from 'lodash';\n\nconst legendFormatPlaceholders = [\n  '$label (on host $host)',\n  '$label (on host $host)',\n  '$label ($application) - $key',\n  '$label ($website) - $key',\n  '$label ($application) - $key',\n  '',\n  '',\n  '',\n];\n\nconst legendFormatTooltips = [\n  <div>\n    Default: $label (on host $host)\n    <ul>\n      <li>• $label - entity label</li>\n      <li>• $host - corresponding host</li>\n      <li>• $pid - corresponding PID</li>\n      <li>• $timeShift - corresponding timeShift</li>\n      <li>• $metric - displayed metric</li>\n      <li>• $type - entity type</li>\n      <li>• $service - service label</li>\n      <li>• $name - label alternative</li>\n      <li>• $index - index in the list</li>\n    </ul>\n  </div>,\n  <div>\n    Default: $label (on host $host)\n    <ul>\n      <li>• $label - entity label</li>\n      <li>• $host - corresponding host</li>\n      <li>• $pid - corresponding PID</li>\n      <li>• $timeShift - corresponding timeShift</li>\n      <li>• $metric - displayed metric</li>\n      <li>• $type - entity type</li>\n      <li>• $service - service label</li>\n      <li>• $name - label alternative</li>\n      <li>• $index - index in the list</li>\n    </ul>\n  </div>,\n  <div>\n    Default: $label ($application) - $key\n    <ul>\n      <li>• $label - entity label</li>\n      <li>• $application - application label</li>\n      <li>• $timeShift - corresponding timeShift</li>\n      <li>• $metric - displayed metric</li>\n      <li>• $key - metric key with aggregation and rollup</li>\n      <li>• $index - index in the list</li>\n    </ul>\n  </div>,\n  <div>\n    Default: $label ($website) - $key\n    <ul>\n      <li>• $label - entity label</li>\n      <li>• $website - application label</li>\n      <li>• $type - entity type</li>\n      <li>• $timeShift - corresponding timeShift</li>\n      <li>• $metric - displayed metric</li>\n      <li>• $key - metric key with aggregation and rollup</li>\n      <li>• $index - index in the list</li>\n    </ul>\n  </div>,\n  <div>\n    Default: $label ($application) - $key\n    <ul>\n      <li>• $label - entity label</li>\n      <li>• $application - application label</li>\n      <li>• $service - service label</li>\n      <li>• $endpoint - endpoint label</li>\n      <li>• $timeShift - corresponding timeShift</li>\n      <li>• $metric - displayed metric</li>\n      <li>• $key - metric key with aggregation and rollup</li>\n      <li>• $index - index in the list</li>\n    </ul>\n  </div>,\n  '',\n  '',\n  '',\n];\n\ninterface AdvancedSettingsState {\n  legendFormatPlaceholder: string;\n}\n\ninterface Props {\n  query: InstanaQuery;\n  onRunQuery(): void;\n  onChange(value: InstanaQuery): void;\n  loadEntityTypes(filterResult?: boolean): void;\n}\n\nexport default class AdvancedSettings extends React.Component<Props, AdvancedSettingsState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      legendFormatPlaceholder: this.setLegendFormatPlaceholder(),\n    };\n  }\n\n  debouncedRunQuery = _.debounce(this.props.onRunQuery, 500);\n\n  onLegendFormatChange = (eventItem: FormEvent<HTMLInputElement>) => {\n    const { query, onChange } = this.props;\n    query.labelFormat = eventItem.currentTarget.value;\n    onChange(query);\n\n    // onRunQuery with 500ms delay after last debounce\n    this.debouncedRunQuery();\n  };\n\n  onTimeShiftChange = (eventItem: ChangeEvent<HTMLInputElement>) => {\n    const { query, onChange } = this.props;\n    query.timeShift = eventItem.currentTarget.value;\n\n    if (query.timeShift) {\n      query.timeShiftIsValid = query.timeShift.match(/\\d+[m,s,h,d,w]{1}/) ? true : false;\n    } else {\n      query.timeShiftIsValid = true;\n    }\n\n    onChange(query);\n\n    if (query.timeShiftIsValid) {\n      // onRunQuery with 500ms delay after last debounce\n      this.debouncedRunQuery();\n    }\n  };\n\n  setLegendFormatPlaceholder(): string {\n    const { query } = this.props;\n    return legendFormatPlaceholders[query.metricCategory.key];\n  }\n\n  setLegendFormatTooltip() {\n    const { query } = this.props;\n    return legendFormatTooltips[query.metricCategory.key];\n  }\n\n  onShowAdvancedSettingsChange = (event: React.SyntheticEvent<HTMLInputElement> | undefined) => {\n    if (event && event.currentTarget) {\n      const { query, onChange } = this.props;\n      query.showAdvancedSettings = event.currentTarget.checked;\n      onChange(query);\n    }\n  };\n\n  render() {\n    const { query, onRunQuery, onChange, loadEntityTypes } = this.props;\n    const category = query.metricCategory.key;\n\n    return (\n      <div>\n        <div className={'gf-form'}>\n          <FormSwitch\n            label={'Show advanced settings'}\n            tooltip={'Show all additional settings'}\n            value={query.showAdvancedSettings}\n            onChange={(e) => this.onShowAdvancedSettingsChange(e)}\n          />\n        </div>\n\n        <div hidden={!query.showAdvancedSettings}>\n          <div className={'gf-form'} hidden={category === SLO_INFORMATION || category === INFRASTRUCTURE_EXPLORE}>\n            <FormInput\n              queryKeyword\n              inputWidth={0}\n              label={'Legend format'}\n              tooltip={this.setLegendFormatTooltip()}\n              value={query.labelFormat}\n              placeholder={this.setLegendFormatPlaceholder()}\n              onChange={(event) => this.onLegendFormatChange(event)}\n            />\n          </div>\n\n          <div className={'gf-form'}>\n            <FormInput\n              queryKeyword\n              inputWidth={0}\n              label={'Time shift'}\n              tooltip={\n                'Specify the amount of hours that shall be used. The time shift function always go back in time, ' +\n                'not forward. Accepts values such as 1s, 1m, 1h, 1d, 1w.'\n              }\n              value={query.timeShift}\n              invalid={!query.timeShiftIsValid}\n              placeholder={'1h'}\n              onChange={(event) => this.onTimeShiftChange(event)}\n            />\n          </div>\n\n          <div hidden={category !== CUSTOM_METRICS}>\n            <FreeTextMetrics\n              query={query}\n              onRunQuery={onRunQuery}\n              onChange={onChange}\n              loadEntityTypes={loadEntityTypes}\n            />\n          </div>\n\n          <div hidden={category !== BUILT_IN_METRICS && category !== CUSTOM_METRICS}>\n            <AggregateQuery query={query} onRunQuery={onRunQuery} onChange={onChange} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","export default ['DESTINATION', 'SOURCE'];\n","import React, { useState } from 'react';\nimport { Tooltip, useTheme } from '@grafana/ui';\n\nconst DESTINATION = 'DESTINATION';\nconst SOURCE = 'SOURCE';\n\nconst dropdown = {\n  position: 'relative',\n  background: 'transparent',\n  width: '32px',\n  height: '32px',\n  marginRight: '4px',\n} as React.CSSProperties;\n\nconst dropdown__list = {\n  transition: 'max-height .2s ease-out',\n  maxHeight: 0,\n  overflow: 'hidden',\n  zIndex: 1,\n  position: 'fixed',\n} as React.CSSProperties;\n\nconst dropdown__list__active = {\n  overflow: 'hidden',\n  zIndex: 2, // we set a zIndex to ensure that the overlay is above other elements and does not move any DOM elements.\n  position: 'fixed',\n  maxHeight: '1000px',\n  opacity: 1,\n} as React.CSSProperties;\n\nconst iconTextContainer = {\n  display: 'inline-flex',\n};\n\nconst iconStyle = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n};\n\nconst iconTextStyle = {\n  padding: '7px',\n};\n\nconst iconSize = 30;\n\nconst destinationIcon = (\n  <svg style={iconStyle} height={iconSize} width={iconSize}>\n    <path\n      transform=\"translate(3, 5)\"\n      fill=\"#33a2e5\"\n      d=\"M4 11.173h6.38L8.115 8.92 9.042 8l3.704 3.684-3.704 3.684-.926-.92 2.263-2.252H4zM16.43 14.316c-1.426 0-2.632-1.206-2.632-2.632 0-1.425 1.206-2.631 2.632-2.631 1.425 0 2.631 1.206 2.631 2.631 0 1.426-1.206 2.632-2.631 2.632z\"\n    />\n  </svg>\n);\n\nconst sourceIcon = (\n  <svg style={iconStyle} height={iconSize} width={iconSize}>\n    <path\n      transform=\"translate(3, 5)\"\n      fill=\"#33a2e5\"\n      d=\"M9.939 11.173h6.379L14.054 8.92 14.98 8l3.704 3.684-3.704 3.684-.926-.92 2.264-2.252h-6.38c-.308 1.023-1.234 1.842-2.366 1.842C6.132 14.243 5 13.117 5 11.787c0-1.33 1.132-2.457 2.47-2.457 1.234 0 2.16.717 2.469 1.843z\"\n    />\n  </svg>\n);\n\n/**\n * Props have to be:\n *   value: string\n *   onChange: function that accepts a string as a parameter and returns void\n */\nexport default function Entity(props: any) {\n  const theme = useTheme();\n\n  const dropdown__list__item = {\n    background: theme.colors.bg2,\n    cursor: 'pointer',\n    listStyle: 'none',\n    borderRadius: '3px',\n    height: '32px',\n  } as React.CSSProperties;\n\n  const [active, setActive] = useState(false);\n\n  function toggleDropdown() {\n    setActive(!active);\n  }\n\n  function handleClick(entity: string) {\n    props.onChange(entity);\n    setActive(false);\n  }\n\n  return (\n    <div style={dropdown}>\n      <div\n        onClick={() => toggleDropdown()}\n        onBlur={() => setActive(false)}\n        style={dropdown__list__item}\n        contentEditable\n      >\n        <Tooltip content={props.value} theme={'info'} placement={'top'}>\n          {props.value === DESTINATION ? destinationIcon : sourceIcon}\n        </Tooltip>\n      </div>\n\n      <ul style={active ? dropdown__list__active : dropdown__list}>\n        <li onClick={() => handleClick(DESTINATION)} key={DESTINATION} style={dropdown__list__item}>\n          <div style={iconTextContainer}>\n            {destinationIcon} <span style={iconTextStyle}>{DESTINATION}</span>\n          </div>\n        </li>\n        <li onClick={() => handleClick('SOURCE')} key={SOURCE} style={dropdown__list__item}>\n          <div style={iconTextContainer}>\n            {sourceIcon} <span style={iconTextStyle}>{SOURCE}</span>\n          </div>\n        </li>\n      </ul>\n    </div>\n  );\n}\n","import React, { ChangeEvent } from 'react';\n\nimport { ALL_APPLICATIONS, ANALYZE_APPLICATION_METRICS } from '../../GlobalVariables';\nimport call_to_entities from '../../lists/apply_call_to_entities';\nimport { Input, Select, InlineFormLabel } from '@grafana/ui';\nimport { DataSource } from '../../datasources/DataSource';\nimport { InstanaQuery } from '../../types/instana_query';\nimport FormWrapper from '../FormField/FormWrapper';\nimport { SelectableValue } from '@grafana/data';\nimport Entity from '../Entity/Entity';\nimport _ from 'lodash';\nimport '../plugin.css';\n\ninterface ApplicationCallsMetricsState {\n  applications: SelectableValue[];\n}\n\ninterface Props {\n  query: InstanaQuery;\n\n  groups: SelectableValue[];\n\n  updateGroups(groups: SelectableValue[]): void;\n\n  onRunQuery(): void;\n\n  onChange(value: InstanaQuery): void;\n\n  updateMetrics(metrics: SelectableValue[]): void;\n\n  datasource: DataSource;\n}\n\nlet isUnmounting = false;\n\nexport class ApplicationCallsMetrics extends React.Component<Props, ApplicationCallsMetricsState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      applications: [],\n    };\n  }\n\n  componentDidMount() {\n    const { query, datasource, onChange } = this.props;\n    isUnmounting = false;\n    datasource.fetchApplications().then((applications) => {\n      if (!isUnmounting) {\n        if (!_.find(applications, { key: null })) {\n          applications.unshift({ key: null, label: ALL_APPLICATIONS });\n        }\n\n        this.setState({\n          applications: applications,\n        });\n\n        if (!query.entity || (!query.entity.key && !query.entity.label)) {\n          query.entity = applications[0];\n        }\n\n        if (!query.callToEntity) {\n          query.callToEntity = call_to_entities[0];\n        }\n        if (!query.applicationCallToEntity) {\n          query.applicationCallToEntity = call_to_entities[0];\n        }\n\n        onChange(query);\n      }\n    });\n\n    datasource.fetchApplicationTags().then((applicationTags: any) => {\n      if (!isUnmounting) {\n        this.props.updateGroups(_.sortBy(applicationTags, 'key'));\n\n        // select a meaningful default group\n        if (!query.group || !query.group.key) {\n          query.group = _.find(applicationTags, ['key', 'endpoint.name']);\n          onChange(query);\n        }\n      }\n    });\n\n    this.props.updateMetrics(datasource.dataSourceApplication.getApplicationMetricsCatalog());\n  }\n\n  componentWillUnmount() {\n    isUnmounting = true;\n  }\n\n  onApplicationChange = (application: SelectableValue) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.entity = application;\n    onChange(query);\n    onRunQuery();\n  };\n\n  onGroupChange = (group: SelectableValue) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.group = group;\n\n    if (query.group && query.metricCategory.key === ANALYZE_APPLICATION_METRICS) {\n      query.showGroupBySecondLevel = query.group.type === 'KEY_VALUE_PAIR';\n    }\n\n    if (!query.showGroupBySecondLevel) {\n      query.groupbyTagSecondLevelKey = '';\n    }\n\n    onChange(query);\n    onRunQuery();\n  };\n\n  onApplicationCallToEntityChange = (applicationCallToEntity: string) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.applicationCallToEntity = applicationCallToEntity;\n    onChange(query);\n    onRunQuery();\n  };\n\n  onCallToEntityChange = (callToEntity: string) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.callToEntity = callToEntity;\n    onChange(query);\n    onRunQuery();\n  };\n\n  debouncedRunQuery = _.debounce(this.props.onRunQuery, 500);\n\n  onGroupByTagSecondLevelKeyChange = (eventItem: ChangeEvent<HTMLInputElement>) => {\n    const { query, onChange } = this.props;\n    query.groupbyTagSecondLevelKey = eventItem.currentTarget.value;\n    onChange(query);\n\n    // onRunQuery with 500ms delay after last debounce\n    this.debouncedRunQuery();\n  };\n\n  render() {\n    const { query, groups } = this.props;\n\n    return (\n      <div className={'gf-form'}>\n        <FormWrapper stretch={true}>\n          <InlineFormLabel className={'query-keyword'} width={14} tooltip={'Select your application.'}>\n            Application\n          </InlineFormLabel>\n          <Entity value={query.applicationCallToEntity} onChange={this.onApplicationCallToEntityChange} />\n          <Select\n            menuPlacement={'bottom'}\n            width={0}\n            isSearchable={true}\n            value={query.entity}\n            options={this.state.applications}\n            onChange={this.onApplicationChange}\n          />\n        </FormWrapper>\n\n        <FormWrapper stretch={true}>\n          <InlineFormLabel className={'query-keyword'} width={7} tooltip={'Group by tag.'}>\n            Group by\n          </InlineFormLabel>\n          <Entity value={query.callToEntity} onChange={this.onCallToEntityChange} />\n          <Select\n            menuPlacement={'bottom'}\n            width={0}\n            isSearchable={true}\n            options={groups}\n            value={query.group}\n            onChange={this.onGroupChange}\n          />\n        </FormWrapper>\n\n        <div style={!query.showGroupBySecondLevel ? { display: 'none' } : {}}>\n          <Input\n            css={''}\n            type={'text'}\n            value={query.groupbyTagSecondLevelKey}\n            onChange={this.onGroupByTagSecondLevelKeyChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import { Tooltip, useTheme } from '@grafana/ui';\nimport React, { useState } from 'react';\n\nimport './ApplicationBoundaryScope.css';\n\nconst INBOUND = 'INBOUND';\nconst ALL = 'ALL';\n\nconst dropdown = {\n  position: 'relative',\n  background: 'transparent',\n  width: '32px',\n  height: '32px',\n  marginRight: '4px',\n} as React.CSSProperties;\n\nconst iconSize = 30;\n\nconst inboundIcon = (\n  <svg className={'iconStyle'} height={iconSize} width={iconSize}>\n    <path\n      transform=\"translate(3, 5)\"\n      fill=\"#33a2e5\"\n      d=\"M12.7891666,14.6051302 L12.7751756,19.8293818 L11.4691127,19.8328795 L11.4776628,16.6402814 L6.96695389,21.1509902 L6.2433066,20.427343 L10.7540155,15.9166341 L7.56141732,15.9251842 L7.56491507,14.6191213 L12.7891666,14.6051302 Z M15.754133,9.38135895 C17.1795716,9.38135895 18.3857119,10.5874993 18.3857119,12.0129379 C18.3857119,13.4383765 17.1795716,14.6445168 15.754133,14.6445168 C14.3286944,14.6445168 13.122554,13.4383765 13.122554,12.0129379 C13.122554,10.5874993 14.3286944,9.38135895 15.754133,9.38135895 Z M6.96695389,3.2433066 L11.4776628,7.75401547 L11.4691127,4.56141732 L12.7751756,4.56491507 L12.7891666,9.7891666 L7.56491507,9.77517557 L7.56141732,8.46911269 L10.7540155,8.47766276 L6.2433066,3.96695389 L6.96695389,3.2433066 Z\"\n    />\n  </svg>\n);\n\nconst allIcon = (\n  <svg className={'iconStyle'} height={iconSize} width={iconSize}>\n    <path\n      transform=\"translate(3, 5)\"\n      fill=\"#33a2e5\"\n      d=\"M7.54586,15 L7.53186897,20.2242515 L6.22580608,20.2277493 L6.23435616,17.0351511 L1.72364729,21.54586 L1,20.8222127 L5.51070887,16.3115038 L2.31811071,16.3200539 L2.32160847,15.013991 L7.54586,15 Z M14.1975552,7.94441147 L17.901552,11.628622 L14.1975552,15.3128325 L13.271556,14.3917799 L15.5351096,12.1403179 L12.4724561,12.1407167 C12.2827518,13.474447 11.1361413,14.5 9.75,14.5 C8.23121694,14.5 7,13.2687831 7,11.75 C7,10.2312169 8.23121694,9 9.75,9 C11.0508538,9 12.1407461,9.90323356 12.4267385,11.1167623 L15.5351096,11.1169261 L13.271556,8.8654641 L14.1975552,7.94441147 Z M20.75,9 C22.2687831,9 23.5,10.2312169 23.5,11.75 C23.5,13.2687831 22.2687831,14.5 20.75,14.5 C19.2312169,14.5 18,13.2687831 18,11.75 C18,10.2312169 19.2312169,9 20.75,9 Z M1.72364729,2 L6.23435616,6.51070887 L6.22580608,3.31811071 L7.53186897,3.32160847 L7.54586,8.54586 L2.32160847,8.53186897 L2.31811071,7.22580608 L5.51070887,7.23435616 L1,2.72364729 L1.72364729,2 Z\"\n    />\n  </svg>\n);\n\n/**\n * Props have to be:\n *   value: string\n *   onChange: function that accepts a string as a parameter and returns void\n *   disabled: boolean\n */\nexport default function ApplicationBoundaryScope(props: any) {\n  const theme = useTheme();\n\n  const opacity = props.disabled ? 0.5 : 1;\n\n  const dropdown__list__item = {\n    background: theme.colors.bg2,\n    cursor: 'pointer',\n    listStyle: 'none',\n    borderRadius: '3px',\n    height: '32px',\n    opacity: opacity,\n  } as React.CSSProperties;\n\n  const [active, setActive] = useState(false);\n\n  function toggleDropdown() {\n    if (!props.disabled) {\n      setActive(!active);\n    }\n  }\n\n  function handleClick(entity: string) {\n    props.onChange(entity);\n    setActive(false);\n  }\n\n  return (\n    <div style={dropdown}>\n      <div\n        onClick={() => toggleDropdown()}\n        onBlur={() => setActive(false)}\n        style={dropdown__list__item}\n        contentEditable\n      >\n        <Tooltip content={props.value ? props.value : ALL} theme={'info'} placement={'top'}>\n          {props.value === INBOUND ? inboundIcon : allIcon}\n        </Tooltip>\n      </div>\n\n      <ul className={active ? 'dropdown-list-active' : 'dropdown-list'}>\n        <li onClick={() => handleClick(INBOUND)} key={INBOUND} style={dropdown__list__item}>\n          <div className={'iconTextContainer'}>\n            {inboundIcon} <span className={'iconTextStyle'}>{INBOUND}</span>\n          </div>\n        </li>\n        <li onClick={() => handleClick(ALL)} key={ALL} style={dropdown__list__item}>\n          <div className={'iconTextContainer'}>\n            {allIcon} <span className={'iconTextStyle'}>{ALL}</span>\n          </div>\n        </li>\n      </ul>\n    </div>\n  );\n}\n","import React, { ChangeEvent } from 'react';\n\nimport { ALL_APPLICATIONS, ALL_ENDPOINTS, ALL_SERVICES } from '../../GlobalVariables';\nimport ApplicationBoundaryScope from './ApplicationBoundaryScope';\nimport { InlineFormLabel, Input, Select } from '@grafana/ui';\nimport { DataSource } from '../../datasources/DataSource';\nimport { InstanaQuery } from '../../types/instana_query';\nimport { SelectableValue } from '@grafana/data';\nimport _ from 'lodash';\n\ninterface ApplicationServiceEndpointMetricsState {\n  applications: SelectableValue[];\n  services: SelectableValue[];\n  endpoints: SelectableValue[];\n  value: SelectableValue;\n}\n\ninterface Props {\n  query: InstanaQuery;\n\n  onRunQuery(): void;\n\n  onChange(value: InstanaQuery): void;\n\n  updateMetrics(metrics: SelectableValue[]): void;\n\n  datasource: DataSource;\n}\n\nlet isUnmounting = false;\n\nexport class ApplicationServiceEndpointMetrics extends React.Component<Props, ApplicationServiceEndpointMetricsState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      applications: [],\n      services: [],\n      endpoints: [],\n      value: {\n        value: 2,\n        imgUrl: '../../resources/dest.png',\n      },\n    };\n  }\n\n  componentDidMount() {\n    isUnmounting = false;\n    this.loadApplications();\n    this.loadServices();\n    this.loadEndpoints();\n\n    const { datasource } = this.props;\n    this.props.updateMetrics(datasource.dataSourceApplication.getApplicationMetricsCatalog());\n  }\n\n  componentWillUnmount() {\n    isUnmounting = true;\n  }\n\n  loadApplications() {\n    const { query, onChange, datasource } = this.props;\n    datasource.fetchApplications().then((applications) => {\n      if (!isUnmounting) {\n        this.setState({\n          applications: applications,\n        });\n\n        if (!_.find(this.state.applications, { key: null })) {\n          let apps = this.state.applications;\n          apps.unshift({ key: null, label: ALL_APPLICATIONS });\n          this.setState({\n            applications: apps,\n          });\n        }\n\n        // replace removed application\n        if (\n          query.entity &&\n          query.entity.key &&\n          !_.find(this.state.applications, (app) => app.key === query.entity.key)\n        ) {\n          query.entity = this.state.applications[0];\n        } else if ((!query.entity || !query.entity.key) && applications) {\n          query.entity = this.state.applications[0];\n        }\n\n        onChange(query);\n      }\n    });\n  }\n\n  loadServices() {\n    const { query, onChange, datasource } = this.props;\n    datasource.fetchServices(query).then((services) => {\n      if (!isUnmounting) {\n        this.setState({\n          services: services,\n        });\n\n        if (!_.find(this.state.services, { key: null })) {\n          let s = this.state.services;\n          s.unshift({ key: null, label: ALL_SERVICES });\n          this.setState({\n            services: s,\n          });\n        }\n\n        if (query.service && query.service.key) {\n          if (!_.find(this.state.services, (app) => app.key === query.service.key)) {\n            query.service = this.state.services[0];\n          }\n        } else {\n          query.service = this.state.services[0];\n        }\n\n        onChange(query);\n      }\n    });\n  }\n\n  loadEndpoints() {\n    const { query, onChange, datasource } = this.props;\n    datasource.fetchEndpoints(query).then((endpoints) => {\n      if (!isUnmounting) {\n        this.setState({\n          endpoints: endpoints,\n        });\n\n        if (!_.find(this.state.endpoints, { key: null })) {\n          let e = this.state.endpoints;\n          e.unshift({ key: null, label: ALL_ENDPOINTS });\n          this.setState({\n            endpoints: e,\n          });\n        }\n\n        if (query.endpoint && query.endpoint.key) {\n          if (!_.find(this.state.endpoints, (app) => app.key === query.endpoint.key)) {\n            query.endpoint = { key: null, label: ALL_ENDPOINTS };\n          }\n        } else {\n          query.endpoint = { key: null, label: ALL_ENDPOINTS };\n        }\n\n        onChange(query);\n      }\n    });\n  }\n\n  onApplicationChange = (application: SelectableValue) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.entity = application;\n    if (application.boundaryScope !== '') {\n      //set the default boundary scope that is configured for this application\n      query.applicationBoundaryScope = application.boundaryScope;\n    } else {\n      if (query.applicationBoundaryScope !== 'ALL' && query.applicationBoundaryScope !== 'INBOUND') {\n        //if no default is set, set it to INBOUND\n        query.applicationBoundaryScope = 'INBOUND';\n      }\n    }\n\n    onChange(query);\n    this.loadServices();\n    this.loadEndpoints();\n    onRunQuery();\n  };\n\n  onServiceChange = (service: SelectableValue) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.service = service;\n    onChange(query);\n    this.loadEndpoints();\n    onRunQuery();\n  };\n\n  onEndpointChange = (endpoint: SelectableValue) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.endpoint = endpoint;\n    onChange(query);\n    onRunQuery();\n  };\n\n  debouncedRunQuery = _.debounce(this.props.onRunQuery, 500);\n\n  onGroupByTagSecondLevelKeyChange = (eventItem: ChangeEvent<HTMLInputElement>) => {\n    const { query, onChange } = this.props;\n    query.groupbyTagSecondLevelKey = eventItem.currentTarget.value;\n    onChange(query);\n\n    // onRunQuery with 500ms delay after last debounce\n    this.debouncedRunQuery();\n  };\n\n  onApplicationBoundaryScopeChange = (scope: string) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.applicationBoundaryScope = scope;\n    onChange(query);\n    this.loadServices();\n    this.loadEndpoints();\n    onRunQuery();\n  };\n\n  render() {\n    const { query } = this.props;\n\n    return (\n      <div className={'gf-form'}>\n        <InlineFormLabel className={'query-keyword'} width={14} tooltip={'Select your application.'}>\n          Application\n        </InlineFormLabel>\n        <ApplicationBoundaryScope\n          value={query.applicationBoundaryScope}\n          disabled={!query.entity?.key}\n          onChange={this.onApplicationBoundaryScopeChange}\n        />\n        <Select\n          menuPlacement={'bottom'}\n          width={0}\n          isSearchable={true}\n          value={query.entity}\n          options={this.state.applications}\n          onChange={this.onApplicationChange}\n        />\n\n        <InlineFormLabel className={'query-keyword'} width={6} tooltip={'Select your service.'}>\n          Service\n        </InlineFormLabel>\n        <Select\n          menuPlacement={'bottom'}\n          width={0}\n          isSearchable={true}\n          value={query.service}\n          options={this.state.services}\n          onChange={this.onServiceChange}\n        />\n\n        <InlineFormLabel className={'query-keyword'} width={6} tooltip={'Select your endpoint.'}>\n          Endpoint\n        </InlineFormLabel>\n        <Select\n          menuPlacement={'bottom'}\n          width={0}\n          isSearchable={true}\n          value={query.endpoint}\n          options={this.state.endpoints}\n          onChange={this.onEndpointChange}\n        />\n\n        <div style={!query.showGroupBySecondLevel ? { display: 'none' } : {}}>\n          <Input css={''} value={query.groupbyTagSecondLevelKey} onChange={this.onGroupByTagSecondLevelKeyChange} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nimport { InlineFormLabel, TextArea, PopoverContent } from '@grafana/ui';\nimport FormWrapper from './FormWrapper';\n\ninterface State {}\n\ninterface Props {\n  label: string;\n  value: string;\n  invalid?: boolean;\n  disabled?: boolean;\n  placeholder?: string;\n  queryKeyword?: boolean;\n  labelWidth?: number | 14;\n  inputWidth?: number | 30;\n  tooltip?: PopoverContent;\n\n  onChange(event?: any): any;\n}\n\n/**\n * Default input text area including label. Input text area is grafana/ui <TextArea />.\n */\nexport default class FormTextArea extends React.Component<Props, State> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  render() {\n    const { label, tooltip, queryKeyword, disabled, labelWidth = 14, inputWidth = 30, ...remainingProps } = this.props;\n\n    return (\n      <FormWrapper disabled={disabled} stretch={!inputWidth}>\n        <InlineFormLabel className={queryKeyword ? 'query-keyword' : ''} width={labelWidth} tooltip={tooltip}>\n          {label}\n        </InlineFormLabel>\n        <TextArea css={''} rows={4} width={inputWidth} disabled={disabled} {...remainingProps} />\n      </FormWrapper>\n    );\n  }\n}\n","import React, { ChangeEvent } from 'react';\n\nimport FormTextArea from 'components/FormField/FormTextArea';\nimport { DataSource } from '../../datasources/DataSource';\nimport { InstanaQuery } from '../../types/instana_query';\nimport { SelectableValue } from '@grafana/data';\nimport _ from 'lodash';\nimport '../plugin.css';\n\ninterface State {\n  queryTypes: SelectableValue[];\n}\n\ninterface Props {\n  query: InstanaQuery;\n  datasource: DataSource;\n  queryTypes: SelectableValue[];\n  onRunQuery(): void;\n  onChange(value: InstanaQuery): void;\n  updateMetrics(metrics: SelectableValue[]): void;\n  updateQueryTypes(types: SelectableValue[]): void;\n}\n\nexport class Explore extends React.Component<Props, State> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  onFilterChange = (eventItem: ChangeEvent<HTMLInputElement>) => {\n    const { query, onChange } = this.props;\n    query.tagFilterExpression = eventItem.currentTarget.value;\n    onChange(query);\n\n    // onRunQuery with 500ms delay after last debounce\n    this.debouncedRunQuery();\n  };\n\n  isValidJson = (tagFilterExpression: string): boolean => {\n    if (tagFilterExpression) {\n      try {\n        JSON.parse(tagFilterExpression);\n        return true;\n      } catch (error) {\n        return false;\n      }\n    }\n\n    // no need to invalidate an empty input field\n    return true;\n  };\n\n  debouncedRunQuery = _.debounce(this.props.onRunQuery, 500);\n\n  render() {\n    const { query } = this.props;\n\n    return (\n      <div>\n        <div className={'gf-form'}>\n          <FormTextArea\n            queryKeyword\n            inputWidth={0}\n            label={'Filter'}\n            tooltip={\n              'This is currently a beta feature and only available for selected customers. If you are interestedin this technology, please submit a request via our support system at https://support.instana.com/.'\n            }\n            value={query.tagFilterExpression}\n            invalid={!this.isValidJson(query.tagFilterExpression)}\n            onChange={this.onFilterChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","export default [\n  // STRING\n  { key: 'EQUALS', label: 'equals', type: 'STRING' },\n  { key: 'NOT_EQUAL', label: 'does not equal', type: 'STRING' },\n  { key: 'CONTAINS', label: 'contains', type: 'STRING' },\n  { key: 'NOT_CONTAIN', label: 'does not contain', type: 'STRING' },\n  { key: 'NOT_EMPTY', label: 'is present', type: 'STRING' },\n  { key: 'IS_EMPTY', label: 'is not present', type: 'STRING' },\n  { key: 'STARTS_WITH', label: 'starts with', type: 'STRING' },\n  { key: 'ENDS_WITH', label: 'ends with', type: 'STRING' },\n  { key: 'NOT_STARTS_WITH', label: 'does not start with', type: 'STRING' },\n  { key: 'NOT_ENDS_WITH', label: 'does not end with', type: 'STRING' },\n  // NUMBER\n  { key: 'EQUALS', label: '=', type: 'NUMBER' },\n  { key: 'NOT_EQUAL', label: '!=', type: 'NUMBER' },\n  { key: 'LESS_THAN', label: '<', type: 'NUMBER' },\n  { key: 'GREATER_THAN', label: '>', type: 'NUMBER' },\n  { key: 'IS_EMPTY', label: 'is empty', type: 'NUMBER' },\n  { key: 'NOT_EMPTY', label: 'is not empty', type: 'NUMBER' },\n  { key: 'LESS_OR_EQUAL_THAN', label: 'less or equal than', type: 'NUMBER' },\n  { key: 'GREATER_OR_EQUAL_THAN', label: 'greater or equal than', type: 'NUMBER' },\n  // BOOLEAN\n  { key: 'EQUALS', label: 'is', type: 'BOOLEAN' },\n  // KEY_VALUE_PAIR\n  { key: 'EQUALS', label: 'equals', type: 'KEY_VALUE_PAIR' },\n  { key: 'NOT_EQUAL', label: 'does not equal', type: 'KEY_VALUE_PAIR' },\n  { key: 'CONTAINS', label: 'contains', type: 'KEY_VALUE_PAIR' },\n  { key: 'NOT_CONTAIN', label: 'does not contain', type: 'KEY_VALUE_PAIR' },\n  { key: 'NOT_EMPTY', label: 'is present', type: 'KEY_VALUE_PAIR' },\n  { key: 'IS_EMPTY', label: 'is not present', type: 'KEY_VALUE_PAIR' },\n  { key: 'STARTS_WITH', label: 'starts with', type: 'KEY_VALUE_PAIR' },\n  { key: 'ENDS_WITH', label: 'ends with', type: 'KEY_VALUE_PAIR' },\n  { key: 'IS_BLANK', label: 'is blank', type: 'KEY_VALUE_PAIR' },\n  { key: 'NOT_BLANK', label: 'is not blank', type: 'KEY_VALUE_PAIR' },\n  // STRING_SET\n  { key: 'EQUALS', label: 'equals', type: 'STRING_SET' },\n  { key: 'NOT_EQUAL', label: 'does not equal', type: 'STRING_SET' },\n  { key: 'CONTAINS', label: 'contains', type: 'STRING_SET' },\n  { key: 'NOT_CONTAIN', label: 'does not contain', type: 'STRING_SET' },\n  { key: 'NOT_EMPTY', label: 'is present', type: 'STRING_SET' },\n  { key: 'IS_EMPTY', label: 'is not present', type: 'STRING_SET' },\n];\n","import React, { FormEvent } from 'react';\n\nimport { ANALYZE_APPLICATION_METRICS, PLEASE_SPECIFY } from '../../GlobalVariables';\nimport { Button, InlineFormLabel, Input, Select } from '@grafana/ui';\nimport call_to_entities from '../../lists/apply_call_to_entities';\nimport { DataSource } from '../../datasources/DataSource';\nimport { InstanaQuery } from '../../types/instana_query';\nimport { SelectableValue } from '@grafana/data';\nimport TagFilter from '../../types/tag_filter';\nimport operators from '../../lists/operators';\nimport Entity from '../Entity/Entity';\nimport _ from 'lodash';\n\ninterface FilterState {}\n\ninterface Props {\n  query: InstanaQuery;\n  datasource: DataSource;\n  groups: SelectableValue[];\n\n  onRunQuery(): void;\n\n  onChange(value: InstanaQuery): void;\n}\n\nexport class Filters extends React.Component<Props, FilterState> {\n  OPERATOR_STRING = 'STRING';\n  OPERATOR_STRING_SET = 'STRING_SET';\n  OPERATOR_NUMBER = 'NUMBER';\n  OPERATOR_BOOLEAN = 'BOOLEAN';\n  OPERATOR_KEY_VALUE = 'KEY_VALUE_PAIR';\n\n  constructor(props: any) {\n    super(props);\n  }\n\n  addTagFilter = () => {\n    const { query, onChange } = this.props;\n    query.filters.push({\n      tag: query.group,\n      entity: call_to_entities[0],\n      operator: this.filterOperatorsOnType(query.group.type)[0],\n      booleanValue: false,\n      numberValue: 0,\n      stringValue: '',\n      isValid: false,\n    });\n\n    onChange(query);\n  };\n\n  removeTagFilter = (index: number) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.filters.splice(index, 1);\n\n    onChange(query);\n    onRunQuery();\n  };\n\n  filterOperatorsOnType(type: any): SelectableValue[] {\n    return _.filter(operators, (o) => o.type === type);\n  }\n\n  onGroupChange(group: SelectableValue, index: number) {\n    const { query } = this.props;\n    query.filters[index].tag = group;\n\n    let ops = this.filterOperatorsOnType(group.type);\n    if (!_.includes(ops, query.filters[index].operator)) {\n      query.filters[index].operator = ops[0];\n    }\n\n    this.validateChangeAndRun(index);\n  }\n\n  onCallToEntityChange = (callToEntity: string, index: number) => {\n    const { query } = this.props;\n    query.filters[index].entity = callToEntity;\n\n    this.validateChangeAndRun(index);\n  };\n\n  onOperatorChange = (operator: SelectableValue, index: number) => {\n    const { query } = this.props;\n    query.filters[index].operator = operator;\n\n    this.validateChangeAndRun(index);\n  };\n\n  canShowStringInput(filter: TagFilter) {\n    return (\n      filter.tag.type === this.OPERATOR_KEY_VALUE ||\n      (!filter.operator.key.includes('EMPTY') &&\n        (filter.tag.type === this.OPERATOR_STRING || filter.tag.type === this.OPERATOR_STRING_SET))\n    );\n  }\n\n  canShowNumberInput(filter: TagFilter) {\n    return filter.tag.type === this.OPERATOR_NUMBER && !filter.operator.key.includes('EMPTY');\n  }\n\n  debouncedRunQuery = _.debounce(this.props.onRunQuery, 500);\n\n  onTagFilterStringValueChange = (value: FormEvent<HTMLInputElement>, index: number) => {\n    const { query } = this.props;\n    query.filters[index].stringValue = value.currentTarget.value;\n\n    this.validateChangeAndRun(index, true);\n  };\n\n  onTagFilterNumberValueChange = (value: FormEvent<HTMLInputElement>, index: number) => {\n    const { query } = this.props;\n    query.filters[index].numberValue = value.currentTarget.valueAsNumber;\n\n    this.validateChangeAndRun(index, true);\n  };\n\n  onTagFilterBooleanValueChange(value: SelectableValue, index: number) {\n    const { query } = this.props;\n    query.filters[index].booleanValue = value.key;\n\n    this.validateChangeAndRun(index);\n  }\n\n  validateChangeAndRun(index: number, runDebounced = false) {\n    const { query, onChange, onRunQuery } = this.props;\n    if (query.filters[index].tag) {\n      if (\n        query.filters[index].operator.key.includes('EMPTY') &&\n        (this.OPERATOR_STRING === query.filters[index].tag.type ||\n          this.OPERATOR_STRING_SET === query.filters[index].tag.type)\n      ) {\n        query.filters[index].isValid = true;\n        // to avoid sending value with query.filters[index] operators that do not require a value (such as is-present/is-not-present)\n        query.filters[index].stringValue = '';\n        query.filters[index].numberValue = 0;\n        query.filters[index].booleanValue = true;\n      } else if (\n        (this.OPERATOR_STRING === query.filters[index].tag.type ||\n          this.OPERATOR_STRING_SET === query.filters[index].tag.type) &&\n        query.filters[index].stringValue\n      ) {\n        query.filters[index].isValid = true;\n      } else if (\n        query.filters[index].operator.key.includes('EMPTY') &&\n        this.OPERATOR_KEY_VALUE === query.filters[index].tag.type &&\n        query.filters[index].stringValue\n      ) {\n        query.filters[index].isValid = true;\n      } else if (\n        this.OPERATOR_KEY_VALUE === query.filters[index].tag.type &&\n        query.filters[index].stringValue &&\n        query.filters[index].stringValue.includes('=')\n      ) {\n        query.filters[index].isValid = true;\n      } else if (this.OPERATOR_NUMBER === query.filters[index].tag.type && !isNaN(query.filters[index].numberValue)) {\n        query.filters[index].isValid = true;\n      } else if (\n        this.OPERATOR_BOOLEAN === query.filters[index].tag.type &&\n        query.filters[index].booleanValue !== undefined\n      ) {\n        query.filters[index].isValid = true;\n      }\n    } else {\n      query.filters[index].isValid = false;\n    }\n\n    onChange(query);\n    if (runDebounced) {\n      // onRunQuery with 500ms delay after last debounce\n      this.debouncedRunQuery();\n    } else {\n      onRunQuery();\n    }\n  }\n\n  render() {\n    const { query, groups } = this.props;\n\n    let listFilter = query.filters?.map((singleFilter, index) => {\n      return (\n        <div className={'gf-form'}>\n          <InlineFormLabel className={'query-keyword'} width={14} tooltip={'Filter by tag.'}>\n            {index + 1}. filter\n          </InlineFormLabel>\n          {query.metricCategory.key === ANALYZE_APPLICATION_METRICS && (\n            <Entity\n              value={query.filters[index].entity}\n              onChange={(callToEntity: string) => this.onCallToEntityChange(callToEntity, index)}\n            />\n          )}\n          <Select\n            menuPlacement={'bottom'}\n            width={30}\n            isSearchable={true}\n            value={query.filters[index].tag}\n            options={groups}\n            onChange={(group) => this.onGroupChange(group, index)}\n          />\n          <Select\n            menuPlacement={'bottom'}\n            width={20}\n            isSearchable={true}\n            value={query.filters[index].operator}\n            options={this.filterOperatorsOnType(query.filters[index].tag.type)}\n            onChange={(operator) => this.onOperatorChange(operator, index)}\n          />\n\n          {this.canShowStringInput(query.filters[index]) && (\n            <Input\n              css={''}\n              width={30}\n              value={query.filters[index].stringValue}\n              placeholder={query.filters[index].tag.type === 'KEY_VALUE_PAIR' ? 'key=value' : PLEASE_SPECIFY}\n              onChange={(event) => this.onTagFilterStringValueChange(event, index)}\n            />\n          )}\n\n          {this.canShowNumberInput(query.filters[index]) && (\n            <Input\n              css={''}\n              type={'number'}\n              width={30}\n              value={query.filters[index].numberValue}\n              placeholder={PLEASE_SPECIFY}\n              onChange={(event) => this.onTagFilterNumberValueChange(event, index)}\n            />\n          )}\n\n          {query.filters[index].tag.type === 'BOOLEAN' && (\n            <Select\n              menuPlacement={'bottom'}\n              width={30}\n              isSearchable={true}\n              onChange={(e) => this.onTagFilterBooleanValueChange(e, index)}\n              value={{ key: '' + query.filters[index].booleanValue, label: '' + query.filters[index].booleanValue }}\n              options={[\n                { key: 'false', label: 'false' },\n                { key: 'true', label: 'true' },\n              ]}\n            />\n          )}\n\n          <Button variant={'secondary'} onClick={() => this.removeTagFilter(index)}>\n            -\n          </Button>\n        </div>\n      );\n    });\n\n    return (\n      <div>\n        {listFilter}\n\n        <div className={'gf-form'}>\n          <InlineFormLabel width={14} tooltip={'Add an additional tag filter.'}>\n            Add filter\n          </InlineFormLabel>\n          <Button variant={'secondary'} onClick={this.addTagFilter}>\n            +\n          </Button>\n          <div hidden={!query.showWarningCantShowAllResults}>\n            <InlineFormLabel width={12} tooltip={'Add Filter to narrow down the data.'}>\n              ⚠️ Can't show all results\n            </InlineFormLabel>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nimport { InlineFormLabel, Select, PopoverContent } from '@grafana/ui';\nimport FormWrapper from './FormWrapper';\nimport { SelectableValue } from '@grafana/data';\n\ninterface State {}\n\ninterface Props {\n  label: string;\n  value: SelectableValue;\n  options: any;\n  queryKeyword?: boolean;\n  disabled?: boolean;\n  defaultValue?: SelectableValue;\n  noOptionsMessage?: string;\n  searchable?: boolean | true;\n  labelWidth?: number | 14;\n  inputWidth?: number | 30;\n  placeholder?: string | '-';\n  tooltip?: PopoverContent;\n\n  onChange(event?: any): any;\n}\n\n/**\n * Default select field including label. Select element is grafana/ui <Select />.\n */\nexport default class FormSelect extends React.Component<Props, State> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  render() {\n    const {\n      label,\n      tooltip,\n      searchable = true,\n      disabled,\n      queryKeyword,\n      placeholder = '-',\n      labelWidth = 14,\n      inputWidth = 30,\n      ...remainingProps\n    } = this.props;\n\n    return (\n      <FormWrapper disabled={disabled} stretch={!inputWidth}>\n        <InlineFormLabel className={queryKeyword ? 'query-keyword' : ''} width={labelWidth} tooltip={tooltip}>\n          {label}\n        </InlineFormLabel>\n        <Select\n          menuPlacement={'bottom'}\n          disabled={disabled}\n          width={inputWidth}\n          isSearchable={searchable}\n          placeholder={placeholder}\n          {...remainingProps}\n        />\n      </FormWrapper>\n    );\n  }\n}\n","import React, { ChangeEvent } from 'react';\n\nimport { DataSource } from '../../datasources/DataSource';\nimport { InstanaQuery } from '../../types/instana_query';\nimport { PLEASE_SPECIFY } from '../../GlobalVariables';\nimport FormSelect from '../FormField/FormSelect';\nimport { SelectableValue } from '@grafana/data';\nimport FormInput from '../FormField/FormInput';\nimport _ from 'lodash';\n\ninterface QueryTypeState {}\n\ninterface Props {\n  query: InstanaQuery;\n  datasource: DataSource;\n  queryTypes: SelectableValue[];\n  onRunQuery(): void;\n  loadEntityTypes(filterResult?: boolean): void;\n  onChange(value: InstanaQuery): void;\n  updateMetrics(metrics: SelectableValue[]): void;\n  updateQueryTypes(types: SelectableValue[]): void;\n}\n\nexport class QueryType extends React.Component<Props, QueryTypeState> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  componentDidMount() {\n    const { query, loadEntityTypes } = this.props;\n    if (query.entityQuery) {\n      loadEntityTypes();\n    }\n  }\n\n  onQueryChange = (eventItem: ChangeEvent<HTMLInputElement>) => {\n    const { query, onChange, updateQueryTypes } = this.props;\n    if (eventItem.currentTarget && eventItem.currentTarget.value) {\n      query.entityQuery = eventItem.currentTarget.value;\n    } else {\n      updateQueryTypes([]);\n      query.entityQuery = '';\n      query.entityType = { key: null, label: '-' };\n    }\n\n    onChange(query);\n\n    // loadEntityTypes with 500ms delay after last debounce\n    this.debouncedEntityTypes();\n  };\n\n  onTypeChange = (eventItem: SelectableValue) => {\n    const { query, datasource, onChange } = this.props;\n    query.entityType = eventItem;\n    onChange(query);\n\n    datasource.dataSourceInfrastructure\n      .getMetricsCatalog(query.entityType, query.metricCategory.key)\n      .then((results) => {\n        this.props.updateMetrics(results);\n      });\n  };\n\n  debouncedEntityTypes = _.debounce(this.props.loadEntityTypes, 500);\n\n  render() {\n    const { query, queryTypes } = this.props;\n\n    return (\n      <div className={'gf-form'}>\n        <FormInput\n          queryKeyword\n          inputWidth={0}\n          label={'Query'}\n          tooltip={\n            <div>\n              Specify a query for the entities you wish to plot. Use the dynamic focus syntax:\n              <a href=\"https://docs.instana.io/core_concepts/dynamic_focus/#syntax\">\n                https://docs.instana.io/core_concepts/dynamic_focus/#syntax\n              </a>\n            </div>\n          }\n          value={query.entityQuery}\n          placeholder={PLEASE_SPECIFY}\n          onChange={this.onQueryChange}\n        />\n\n        <FormSelect\n          queryKeyword\n          labelWidth={6}\n          label={'Type'}\n          tooltip={'Select an entity type for a list of available metrics.'}\n          noOptionsMessage={'No types found with query'}\n          value={query.entityType}\n          options={queryTypes}\n          onChange={this.onTypeChange}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nimport { DataSource } from '../../datasources/DataSource';\nimport { InstanaQuery } from '../../types/instana_query';\nimport { SelectableValue } from '@grafana/data';\nimport { QueryType } from './QueryType';\n\ninterface InfrastructureBuiltInState {}\n\ninterface Props {\n  query: InstanaQuery;\n  datasource: DataSource;\n  queryTypes: SelectableValue[];\n  onRunQuery(): void;\n  loadEntityTypes(filterResult?: boolean): void;\n  onChange(value: InstanaQuery): void;\n  updateMetrics(metrics: SelectableValue[]): void;\n  updateQueryTypes(types: SelectableValue[]): void;\n}\n\nlet isUnmounting = false;\n\nexport class Infrastructure extends React.Component<Props, InfrastructureBuiltInState> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  componentDidMount() {\n    const { query, onChange, datasource } = this.props;\n    isUnmounting = false;\n\n    if (query.entityQuery && query.entityType && query.entityType.key) {\n      datasource.dataSourceInfrastructure\n        .getMetricsCatalog(query.entityType, query.metricCategory.key)\n        .then((results) => {\n          if (!isUnmounting) {\n            this.props.updateMetrics(results);\n          }\n        });\n    } else {\n      query.metric = {\n        key: null,\n        label: '-',\n      };\n    }\n\n    onChange(query);\n  }\n\n  componentWillUnmount() {\n    isUnmounting = true;\n  }\n\n  render() {\n    const {\n      query,\n      onRunQuery,\n      onChange,\n      updateMetrics,\n      loadEntityTypes,\n      datasource,\n      queryTypes,\n      updateQueryTypes,\n    } = this.props;\n\n    return (\n      <QueryType\n        query={query}\n        onChange={onChange}\n        queryTypes={queryTypes}\n        onRunQuery={onRunQuery}\n        datasource={datasource}\n        updateMetrics={updateMetrics}\n        loadEntityTypes={loadEntityTypes}\n        updateQueryTypes={updateQueryTypes}\n      />\n    );\n  }\n}\n","import React from 'react';\n\nimport { BUILT_IN_METRICS, CUSTOM_METRICS, ANALYZE_APPLICATION_METRICS } from '../../GlobalVariables';\nimport { DataSource } from '../../datasources/DataSource';\nimport { InstanaQuery } from '../../types/instana_query';\nimport max_metrics from '../../lists/max_metrics';\nimport FormSelect from '../FormField/FormSelect';\nimport FormSwitch from '../FormField/FormSwitch';\nimport { SelectableValue } from '@grafana/data';\nimport _ from 'lodash';\n\ninterface MetricState {\n  possibleTimeIntervals: SelectableValue[];\n  possibleAggregations: SelectableValue[];\n}\n\ninterface Props {\n  query: InstanaQuery;\n  datasource: DataSource;\n  availableMetrics: SelectableValue[];\n\n  updateMetrics(metrics: SelectableValue[]): void;\n\n  onRunQuery(): void;\n\n  onChange(value: InstanaQuery): void;\n}\n\nexport default class Metric extends React.Component<Props, MetricState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      possibleTimeIntervals: [],\n      possibleAggregations: [],\n    };\n  }\n\n  componentDidMount() {\n    const { query, datasource, onChange } = this.props;\n\n    if (\n      !query.timeInterval ||\n      !query.timeInterval.key ||\n      !datasource.availableTimeIntervals.find((i) => i.key === query.timeInterval.key)\n    ) {\n      query.timeInterval = datasource.getDefaultTimeInterval(query);\n    }\n\n    onChange(query);\n  }\n\n  onMetricChange = (metric: SelectableValue) => {\n    const { query, onRunQuery, onChange } = this.props;\n    query.metric = metric;\n\n    if (query.metric && query.metric.key && !_.includes(query.metric.aggregations, query.aggregation)) {\n      query.aggregation = query.metric.aggregations[0];\n    }\n\n    if (query.displayMaxMetricValue && !this.canShowMaxMetricValue()) {\n      query.displayMaxMetricValue = false;\n    }\n\n    query.allMetrics = [];\n    query.showAllMetrics = false;\n\n    onChange(query);\n    onRunQuery();\n  };\n\n  canShowMaxMetricValue() {\n    const { query } = this.props;\n    return (\n      query.entityType &&\n      query.entityType.key === 'host' &&\n      query.metric &&\n      _.find(max_metrics, (m) => m.key === query.metric.key)\n    );\n  }\n\n  onTimeIntervalChange = (timeInterval: SelectableValue) => {\n    const { query, onRunQuery, onChange } = this.props;\n    query.timeInterval = timeInterval;\n    onChange(query);\n    onRunQuery();\n  };\n\n  onAggregationChange = (aggregation: SelectableValue) => {\n    const { query, onRunQuery, onChange } = this.props;\n    query.aggregation = aggregation;\n    onChange(query);\n    onRunQuery();\n  };\n\n  onShowMaxValueChange = (event?: React.SyntheticEvent<HTMLInputElement>) => {\n    const { query, onChange, onRunQuery } = this.props;\n    if (event && event.currentTarget) {\n      query.displayMaxMetricValue = event.currentTarget.checked;\n      onChange(query);\n      onRunQuery();\n    }\n  };\n\n  onShowAllMetricsChange = (event?: React.SyntheticEvent<HTMLInputElement>) => {\n    const { query, onChange, onRunQuery } = this.props;\n    if (event && event.currentTarget) {\n      query.showAllMetrics = event.currentTarget.checked;\n      if (query.showAllMetrics) {\n        query.metric = { key: null, label: `Displaying ${this.props.availableMetrics.length} metrics` };\n        query.allMetrics = this.props.availableMetrics;\n      }\n      onChange(query);\n      onRunQuery();\n    }\n  };\n\n  canShowAggregation() {\n    const { query } = this.props;\n    return query.metricCategory.key >= ANALYZE_APPLICATION_METRICS;\n  }\n\n  canSelectAggregation() {\n    const { query } = this.props;\n    return query.metric && query.metric.aggregations && query.metric.aggregations.length > 1;\n  }\n\n  render() {\n    const { query, datasource } = this.props;\n\n    return (\n      <div className={'gf-form'}>\n        <FormSelect\n          queryKeyword\n          disabled={query.useFreeTextMetrics}\n          inputWidth={0}\n          label={'Metric'}\n          tooltip={'Select the metric you wish to plot.'}\n          value={query.metric}\n          noOptionsMessage={'No metrics found'}\n          options={this.props.availableMetrics}\n          onChange={this.onMetricChange}\n        />\n\n        {query.metricCategory.key === BUILT_IN_METRICS && (\n          <FormSwitch\n            queryKeyword\n            disabled={!this.canShowMaxMetricValue()}\n            labelWidth={9}\n            label={'Show max value'}\n            tooltip={\n              \"Displays the maximal value of current metric. Supported for 'Type=Host' with cpu.used, \" +\n              'memory.used and openFiles.used only.'\n            }\n            value={query.displayMaxMetricValue}\n            onChange={this.onShowMaxValueChange}\n          />\n        )}\n\n        {query.metricCategory.key === CUSTOM_METRICS && (\n          <FormSwitch\n            queryKeyword\n            disabled={!query.canShowAllMetrics}\n            labelWidth={9}\n            label={'Show all metrics'}\n            tooltip={\n              'You have the option to show all metrics in the graph once the amount of possible, selectable ' +\n              'metrics is between 1 and 5.'\n            }\n            value={query.showAllMetrics}\n            onChange={this.onShowAllMetricsChange}\n          />\n        )}\n\n        {this.canShowAggregation() && (\n          <FormSelect\n            queryKeyword\n            disabled={!this.canSelectAggregation()}\n            labelWidth={7}\n            inputWidth={12}\n            label={'Aggregation'}\n            tooltip={'Select a metric aggregation.'}\n            value={query.aggregation}\n            options={query.metric.aggregations}\n            onChange={this.onAggregationChange}\n          />\n        )}\n\n        <FormSelect\n          queryKeyword\n          disabled={datasource.availableTimeIntervals.length <= 1}\n          labelWidth={5}\n          inputWidth={12}\n          label={'Rollup'}\n          tooltip={'Select the rollup value.'}\n          value={query.timeInterval}\n          options={datasource.availableTimeIntervals}\n          onChange={this.onTimeIntervalChange}\n        />\n      </div>\n    );\n  }\n}\n","import React, { ChangeEvent } from 'react';\n\nimport { PLEASE_SPECIFY } from '../../../GlobalVariables';\nimport { DataSource } from '../../../datasources/DataSource';\nimport { InstanaQuery } from '../../../types/instana_query';\nimport { Button, InlineFormLabel } from '@grafana/ui';\nimport FormInput from '../../FormField/FormInput';\nimport { SelectableValue } from '@grafana/data';\n\ninterface MetricFilterState {\n  customFilters: string[];\n}\n\ninterface Props {\n  query: InstanaQuery;\n  datasource: DataSource;\n  availableMetrics: SelectableValue[];\n  onFilterChange(customFilters: string[]): void;\n  onRunQuery(): void;\n  onChange(value: InstanaQuery): void;\n}\n\nexport class MetricFilter extends React.Component<Props, MetricFilterState> {\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      customFilters: [],\n    };\n  }\n\n  componentDidMount() {\n    const { query } = this.props;\n    this.setState({ customFilters: query.customFilters });\n  }\n\n  onFilterChange = (eventItem: ChangeEvent<HTMLInputElement>, index: number) => {\n    const customFilters: string[] = this.state.customFilters;\n    customFilters[index] = eventItem.currentTarget.value;\n    this.setState({ customFilters: customFilters });\n\n    this.props.onFilterChange(customFilters);\n  };\n\n  addCustomFilter = () => {\n    let customFilters = this.state.customFilters;\n    customFilters.push('');\n    this.setState({ customFilters: customFilters });\n\n    const { query, onChange } = this.props;\n    query.customFilters = customFilters;\n    onChange(query);\n  };\n\n  removeCustomFilter = (index: number) => {\n    let customFilters: string[] = this.state.customFilters;\n    customFilters.splice(index, 1);\n    this.setState({ customFilters: customFilters });\n\n    this.props.onFilterChange(customFilters);\n  };\n\n  render() {\n    let filter = null;\n    let listFilter = this.state.customFilters.map((filters, index) => {\n      filter = (\n        <div className={'gf-form'}>\n          <FormInput\n            label={index + 1 + '. filter metric select'}\n            value={this.state.customFilters[index]}\n            placeholder={PLEASE_SPECIFY}\n            onChange={(event) => this.onFilterChange(event, index)}\n            tooltip={'Type to suggest metrics.'}\n          />\n          <Button variant={'secondary'} onClick={() => this.removeCustomFilter(index)}>\n            -\n          </Button>\n        </div>\n      );\n      return filter;\n    });\n\n    return (\n      <div>\n        {listFilter}\n\n        <div className={'gf-form'}>\n          <InlineFormLabel width={14} tooltip={'Add an additional metric select filter.'}>\n            Add filter metric select\n          </InlineFormLabel>\n          <Button variant={'secondary'} onClick={this.addCustomFilter}>\n            +\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n","export default [\n  {\n    key: 'SLI',\n    label: 'SLI',\n  },\n  {\n    key: 'Remaining Error Budget',\n    label: 'Remaining Error Budget',\n  },\n  {\n    key: 'Timeseries',\n    label: 'Timeseries',\n  },\n];\n","import React, { ChangeEvent } from 'react';\n\nimport { DataSource } from '../../datasources/DataSource';\nimport { InstanaQuery } from '../../types/instana_query';\nimport { SLO_INFORMATION } from '../../GlobalVariables';\nimport SloSpecifics from '../../lists/slo_specifics';\nimport FormSelect from '../FormField/FormSelect';\nimport { SelectableValue } from '@grafana/data';\nimport FormInput from '../FormField/FormInput';\nimport _ from 'lodash';\n\nconst MAX_VAL = 0.9999;\n\ninterface SloInformationState {\n  sloReports: SelectableValue[];\n  isValidSlo: boolean;\n}\n\ninterface Props {\n  query: InstanaQuery;\n\n  onRunQuery(): void;\n\n  onChange(value: InstanaQuery): void;\n\n  datasource: DataSource;\n}\n\nlet isUnmounting = false;\n\nexport class SloInformation extends React.Component<Props, SloInformationState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      sloReports: [],\n      isValidSlo: true,\n    };\n  }\n\n  componentDidMount() {\n    isUnmounting = false;\n    this.loadSloReports();\n    this.isValid(this.props.query.sloValue);\n  }\n\n  componentWillUnmount() {\n    isUnmounting = true;\n  }\n\n  debouncedRunQuery = _.debounce(this.props.onRunQuery, 500);\n\n  onSloChange = (slo: SelectableValue) => {\n    const { query, onRunQuery } = this.props;\n    query.sloReport = slo;\n    onRunQuery();\n  };\n\n  onSloValueChange = (sloValue: ChangeEvent<HTMLInputElement>) => {\n    const { query } = this.props;\n    query.sloValue = sloValue.currentTarget.value;\n\n    if (this.isValid(query.sloValue)) {\n      // onRunQuery with 500ms delay after last debounce\n      this.debouncedRunQuery();\n    }\n  };\n\n  onSloSpecificChange = (sloSpecific: SelectableValue) => {\n    const { query, onRunQuery } = this.props;\n    query.sloSpecific = sloSpecific;\n    onRunQuery();\n  };\n\n  isValid(val: string): boolean {\n    const valid = !val || (+val >= 0 && +val <= MAX_VAL);\n    this.setState({\n      isValidSlo: valid,\n    });\n    return valid;\n  }\n\n  shouldComponentUpdate(\n    nextProps: Readonly<Props>,\n    nextState: Readonly<SloInformationState>,\n    nextContext: any\n  ): boolean {\n    return nextProps.query.metricCategory.key === SLO_INFORMATION;\n  }\n\n  loadSloReports() {\n    const { query } = this.props;\n    this.props.datasource.getSloReports().then((sloReports) => {\n      if (!isUnmounting) {\n        this.setState({ sloReports: sloReports });\n\n        if (!query.sloReport && sloReports.length >= 1) {\n          query.sloReport = sloReports[0];\n        }\n      }\n    });\n  }\n\n  render() {\n    const { query } = this.props;\n\n    return (\n      <div className={'gf-form'}>\n        <FormSelect\n          queryKeyword\n          inputWidth={0}\n          label={'Configured SLI'}\n          tooltip={'SLI configuration used to compute error budget and SLI values.'}\n          noOptionsMessage={'No configured SLI found'}\n          value={query.sloReport}\n          options={this.state.sloReports}\n          onChange={this.onSloChange}\n        />\n\n        <FormInput\n          queryKeyword\n          labelWidth={7}\n          inputWidth={0}\n          label={'SLO'}\n          tooltip={'Type in your desired SLO threshold from 0 to ' + MAX_VAL}\n          value={query.sloValue}\n          invalid={!this.state.isValidSlo}\n          placeholder={'0.99'}\n          onChange={this.onSloValueChange}\n        />\n\n        <FormSelect\n          queryKeyword\n          labelWidth={7}\n          inputWidth={0}\n          label={'Value type'}\n          tooltip={\n            <div>\n              Select your specific SLO information:\n              <ul>\n                <li>'SLI' requires Gauge visualization</li>\n                <li>'Remaining Error Budget' requires Singlestat visualization</li>\n                <li>'Timeseries' requires Bars draw mode on Graph visualization</li>\n              </ul>\n            </div>\n          }\n          value={query.sloSpecific}\n          options={SloSpecifics}\n          onChange={this.onSloSpecificChange}\n        />\n      </div>\n    );\n  }\n}\n","export default [\n  { key: 'pageLoad', label: 'Page Loads' },\n  { key: 'page_change', label: 'Page Transitions' },\n  { key: 'resourceLoad', label: 'Resources' },\n  { key: 'httpRequest', label: 'HTTP Requests' },\n  { key: 'error', label: 'Errors' },\n  { key: 'custom', label: 'Custom Events' },\n];\n","import React, { ChangeEvent } from 'react';\n\nimport { ALL_WEBSITES, ANALYZE_WEBSITE_METRICS } from '../../GlobalVariables';\nimport { DataSource } from '../../datasources/DataSource';\nimport { InstanaQuery } from '../../types/instana_query';\nimport beacon_types from '../../lists/beacon_types';\nimport FormSelect from '../FormField/FormSelect';\nimport { SelectableValue } from '@grafana/data';\nimport { Input } from '@grafana/ui';\nimport _ from 'lodash';\n\ninterface WebsiteMetricsState {\n  websites: SelectableValue[];\n}\n\ninterface Props {\n  query: InstanaQuery;\n  groups: SelectableValue[];\n  datasource: DataSource;\n\n  updateGroups(groups: SelectableValue[]): void;\n  onRunQuery(): void;\n  onChange(value: InstanaQuery): void;\n  updateMetrics(metrics: SelectableValue[]): void;\n  filterMetricsOnType(type: string): any;\n}\n\nlet isUnmounting = false;\n\nexport class WebsiteMetrics extends React.Component<Props, WebsiteMetricsState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      websites: [],\n    };\n  }\n\n  componentDidMount() {\n    const { query, datasource, onChange } = this.props;\n    isUnmounting = false;\n    datasource.fetchWebsites().then((websites) => {\n      if (!isUnmounting) {\n        if (!_.find(websites, { key: null })) {\n          websites.unshift({ key: null, label: ALL_WEBSITES });\n        }\n\n        this.setState({\n          websites: websites,\n        });\n\n        if ((!query.entity || !query.entity.key) && websites) {\n          query.entity = websites[0];\n        } else if (query.entity && !_.find(websites, ['key', query.entity.key])) {\n          query.entity = websites[0];\n        }\n\n        onChange(query);\n      }\n    });\n\n    datasource.dataSourceWebsite.getWebsiteTags().then((websiteTags: any) => {\n      if (!isUnmounting) {\n        this.props.updateGroups(_.sortBy(websiteTags, 'key'));\n\n        // select a meaningful default group\n        if (!query.group || !query.group.key) {\n          query.group = _.find(websiteTags, ['key', 'beacon.page.name']);\n          onChange(query);\n        }\n      }\n    });\n\n    if (!query.entityType || !query.entityType.key) {\n      query.entityType = beacon_types[0];\n      onChange(query);\n    }\n\n    datasource.dataSourceWebsite.getWebsiteMetricsCatalog().then((websiteMetrics: any) => {\n      if (!isUnmounting) {\n        this.props.updateMetrics(_.filter(websiteMetrics, (m) => m.beaconTypes.includes(query.entityType.key)));\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    isUnmounting = true;\n  }\n\n  onWebsiteChange = (website: SelectableValue) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.entity = website;\n    onChange(query);\n    onRunQuery();\n  };\n\n  onBeaconTypeChange = (type: SelectableValue) => {\n    const { query, onChange, filterMetricsOnType } = this.props;\n    query.entityType = type;\n    onChange(query);\n    filterMetricsOnType(query.entityType.key);\n  };\n\n  onGroupChange = (group: SelectableValue) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.group = group;\n\n    if (query.group && query.metricCategory.key === ANALYZE_WEBSITE_METRICS) {\n      query.showGroupBySecondLevel = query.group.type === 'KEY_VALUE_PAIR';\n    }\n    if (!query.showGroupBySecondLevel) {\n      query.groupbyTagSecondLevelKey = '';\n    }\n\n    onChange(query);\n    onRunQuery();\n  };\n\n  debouncedRunQuery = _.debounce(this.props.onRunQuery, 500);\n\n  onGroupByTagSecondLevelKeyChange = (eventItem: ChangeEvent<HTMLInputElement>) => {\n    const { query, onChange } = this.props;\n    query.groupbyTagSecondLevelKey = eventItem.currentTarget.value;\n    onChange(query);\n\n    // onRunQuery with 500ms delay after last debounce\n    this.debouncedRunQuery();\n  };\n\n  render() {\n    const { query, groups } = this.props;\n\n    return (\n      <div className={'gf-form'}>\n        <FormSelect\n          queryKeyword\n          inputWidth={0}\n          label={'Website'}\n          tooltip={'Select your website.'}\n          noOptionsMessage={'No websites found'}\n          value={query.entity}\n          options={this.state.websites}\n          onChange={this.onWebsiteChange}\n        />\n\n        <FormSelect\n          queryKeyword\n          labelWidth={6}\n          label={'Type'}\n          tooltip={'Select a beacon type.'}\n          value={query.entityType}\n          options={beacon_types}\n          onChange={this.onBeaconTypeChange}\n        />\n\n        <FormSelect\n          queryKeyword\n          labelWidth={6}\n          label={'Group by'}\n          tooltip={'Group by tag.'}\n          value={query.group}\n          options={groups}\n          onChange={this.onGroupChange}\n        />\n\n        <div style={!query.showGroupBySecondLevel ? { display: 'none' } : {}}>\n          <Input css={''} value={query.groupbyTagSecondLevelKey} onChange={this.onGroupByTagSecondLevelKeyChange} />\n        </div>\n      </div>\n    );\n  }\n}\n","import '../instana-grafana.css';\n\nimport {\n  ANALYZE_APPLICATION_METRICS,\n  ANALYZE_WEBSITE_METRICS,\n  APPLICATION_SERVICE_ENDPOINT_METRICS,\n  BUILT_IN_METRICS,\n  CUSTOM_METRICS,\n  INFRASTRUCTURE_EXPLORE,\n  SLO_INFORMATION,\n} from '../GlobalVariables';\nimport { QueryEditorProps, SelectableValue } from '@grafana/data';\nimport React, { PureComponent } from 'react';\n\nimport AdvancedSettings from './AdvancedSettings/AdvancedSettings';\nimport AggregationFunctions from '../lists/aggregation_function';\nimport { ApplicationCallsMetrics } from './Analyze/ApplicationCallsMetrics';\nimport { ApplicationServiceEndpointMetrics } from './ApplicationServiceEndpointMetrics/ApplicationServiceEndpointMetrics';\nimport { Badge } from '@grafana/ui';\nimport { DataSource } from '../datasources/DataSource';\nimport { Explore } from './Infrastructure/Explore';\nimport { Filters } from './Analyze/Filter';\nimport FormSelect from './FormField/FormSelect';\nimport { Infrastructure } from './Infrastructure/Infrastructure';\nimport { InstanaOptions } from '../types/instana_options';\nimport { InstanaQuery } from '../types/instana_query';\nimport Metric from './Metric/Metric';\nimport { MetricFilter } from './Infrastructure/Custom/MetricFilter';\nimport { SloInformation } from './SLOInformation/SloInformation';\nimport { WebsiteMetrics } from './Analyze/WebsiteMetrics';\nimport _ from 'lodash';\nimport metricCategories from '../lists/metric_categories';\nimport migrate from '../migration';\nimport { readTime } from '../util/time_util';\n\ntype Props = QueryEditorProps<DataSource, InstanaQuery, InstanaOptions>;\n\ninterface QueryState {\n  groups: SelectableValue[];\n  queryTypes: SelectableValue[];\n  allMetrics: SelectableValue[];\n  availableMetrics: SelectableValue[];\n  selectedWindowSize: number;\n}\n\nexport class QueryEditor extends PureComponent<Props, QueryState> {\n  query: InstanaQuery;\n  snapshots: any;\n  allowInfraExplore: boolean;\n\n  constructor(props: Props) {\n    super(props);\n    const defaultQuery: Partial<InstanaQuery> = {\n      metricCategory: metricCategories[0],\n      timeShiftIsValid: true,\n      customFilters: [],\n    };\n\n    this.query = Object.assign(defaultQuery, props.query);\n\n    migrate(this.query);\n\n    this.state = {\n      groups: [],\n      allMetrics: [],\n      queryTypes: [],\n      availableMetrics: [],\n      selectedWindowSize: props.range ? readTime(props.range).windowSize : 21600000,\n    };\n\n    this.filterMetricsOnType = this.filterMetricsOnType.bind(this);\n    this.loadEntityTypes = this.loadEntityTypes.bind(this);\n    this.allowInfraExplore = props.datasource.options.allowInfraExplore;\n\n    props.onChange(this.query);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>, prevState: Readonly<QueryState>, snapshot?: any) {\n    const { onChange, range, datasource } = this.props;\n    if (range && this.state.selectedWindowSize !== readTime(range).windowSize) {\n      this.setState({\n        ...this.state,\n        selectedWindowSize: readTime(range).windowSize,\n      });\n      datasource.setPossibleTimeIntervals(this.query);\n      if (!datasource.availableTimeIntervals.find((i) => i.key === this.query.timeInterval.key)) {\n        this.query.timeInterval = datasource.getDefaultTimeInterval(this.query);\n        onChange(this.query);\n        // no need to execute onRunQuery() here because the change of time frame triggers\n        // datasource.query() anyways and datasource will take care of correcting the timeInterval\n      }\n    }\n  }\n\n  onCategoryChange = (newCategory: SelectableValue) => {\n    if (this.query.metricCategory === newCategory) {\n      // nothing needs to be done\n    } else {\n      this.selectionReset();\n      this.query.metricCategory = newCategory;\n      this.query.timeInterval = this.props.datasource.getDefaultTimeInterval(this.query);\n\n      this.changeAndRun();\n    }\n  };\n\n  changeAndRun = () => {\n    this.props.onChange(this.query);\n    this.props.onRunQuery();\n  };\n\n  setMetricPlaceholder(nrOfTotalResults: number) {\n    if (this.query.metricCategory.key === CUSTOM_METRICS) {\n      this.query.metric = {\n        key: null,\n        label: 'Please select (' + nrOfTotalResults + '/' + this.state.allMetrics.length + ')',\n      };\n    } else {\n      this.query.metric = {\n        key: null,\n        label: 'Please select (' + nrOfTotalResults + ')',\n      };\n    }\n\n    this.props.onChange(this.query);\n  }\n\n  updateMetrics = (metrics: SelectableValue[]) => {\n    this.setState({\n      availableMetrics: _.sortBy(metrics, 'key'),\n      allMetrics: _.sortBy(metrics, 'key'),\n    });\n\n    if ((this.query.metric && this.query.metric.key) || this.query.showAllMetrics) {\n      const metric = _.find(metrics, (m) => m.key === this.query.metric.key);\n      metric ? (this.query.metric = metric) : (this.query.metric = { key: null });\n    }\n\n    if (this.query.metricCategory.key === CUSTOM_METRICS) {\n      this.onMetricsFilter(this.query.customFilters); // this contains setMetricPlaceholder\n    } else if (!this.query.metric || !this.query.metric.key) {\n      this.setMetricPlaceholder(metrics.length);\n    }\n\n    this.changeAndRun();\n  };\n\n  loadEntityTypes(filterResult = true) {\n    const { query, datasource, onRunQuery } = this.props;\n\n    if (query.entityQuery) {\n      datasource.fetchTypesForTarget(query).then((response: any) => {\n        this.snapshots = response.data;\n        this.filterForEntityType(true, filterResult);\n        onRunQuery();\n      });\n    } else {\n      this.setState({ queryTypes: [] });\n    }\n  }\n\n  filterForEntityType = (findMatchingEntityTypes = true, filterResults = true) => {\n    const { query, datasource, onChange } = this.props;\n    datasource.getEntityTypes().then((entityTypes: any) => {\n      let queryTypes = entityTypes;\n      if (filterResults && !query.useFreeTextMetrics) {\n        queryTypes = this.filterEntityTypes(entityTypes, findMatchingEntityTypes);\n      }\n\n      this.setState({ queryTypes: queryTypes });\n\n      if (!query.entityType || !query.entityType.key || !_.find(queryTypes, (m) => m.key === query.entityType.key)) {\n        query.entityType = { key: null, label: 'Please select (' + queryTypes.length + ')' };\n      }\n\n      onChange(query);\n    });\n  };\n\n  filterEntityTypes = (entityTypes: SelectableValue[], findMatchingEntityTypes: boolean) => {\n    if (findMatchingEntityTypes) {\n      return _.sortBy(\n        _.filter(entityTypes, (entityType) => this.findMatchingEntityTypes(entityType)),\n        'label'\n      );\n    }\n\n    return _.sortBy(entityTypes, 'label');\n  };\n\n  findMatchingEntityTypes = (entityType: SelectableValue) => {\n    const { query } = this.props;\n    // workaround as long the api does not support returning plugins with custom metrics only\n    if (\n      query.metricCategory.key === BUILT_IN_METRICS ||\n      entityType.key === 'statsd' ||\n      entityType.key === 'prometheus' ||\n      entityType.key === 'jvmRuntimePlatform' ||\n      entityType.key === 'dropwizardApplicationContainer'\n    ) {\n      return this.snapshots.find((type: any) => type === entityType.key) && entityType.label != null;\n    }\n\n    return false;\n  };\n\n  updateQueryTypes = (types: SelectableValue[]) => {\n    this.setState({\n      queryTypes: types,\n    });\n  };\n\n  updateGroups = (groups: SelectableValue[]) => {\n    this.setState({\n      groups: groups,\n    });\n  };\n\n  onMetricsFilter = (customFilters: string[]) => {\n    let newAvailableMetrics: SelectableValue[] = [];\n    if (!customFilters || customFilters.length === 0) {\n      newAvailableMetrics = this.state.allMetrics;\n    } else {\n      newAvailableMetrics = this.applyFilterToMetricList(customFilters);\n    }\n    this.query.canShowAllMetrics = this.isAbleToShowAllMetrics(newAvailableMetrics);\n    if (!this.query.canShowAllMetrics) {\n      this.query.showAllMetrics = false;\n    }\n    this.query.customFilters = customFilters;\n    if (!this.query.metric || !this.query.metric.key) {\n      this.setMetricPlaceholder(newAvailableMetrics.length);\n    }\n\n    this.setState((state) => ({ ...state, availableMetrics: newAvailableMetrics }));\n\n    this.props.onChange(this.query);\n    this.checkMetricAndRefresh();\n  };\n\n  applyFilterToMetricList(filters: string[]) {\n    let filteredMetrics: any = this.state.allMetrics;\n    _.forEach(filters, (filter) => {\n      if (filter !== '') {\n        filteredMetrics = _.sortBy(\n          _.filter(filteredMetrics, (metric) => metric.key.toLowerCase().includes(filter.toLowerCase())),\n          'key'\n        );\n      }\n    });\n\n    return filteredMetrics;\n  }\n\n  filterMetricsOnType(type: string) {\n    let filteredMetrics: SelectableValue[] = this.state.allMetrics.filter((metric) => {\n      return metric.beaconTypes.includes(type);\n    });\n\n    this.setState({\n      availableMetrics: filteredMetrics,\n    });\n\n    if (!this.query.metric || !this.query.metric.key || !this.query.metric.beaconTypes.includes(type)) {\n      this.setMetricPlaceholder(filteredMetrics.length);\n    }\n\n    this.changeAndRun();\n  }\n\n  isAbleToShowAllMetrics(metrics: SelectableValue[]) {\n    return this.query.metricCategory.key === CUSTOM_METRICS && metrics.length > 0 && metrics.length <= 5;\n  }\n\n  checkMetricAndRefresh() {\n    if (\n      this.query.metric &&\n      this.query.metric.key &&\n      !_.includes(\n        _.map(this.state.availableMetrics, (m) => m.key),\n        this.query.metric.key\n      )\n    ) {\n      this.resetMetricSelection();\n    }\n\n    this.changeAndRun();\n  }\n\n  selectionReset() {\n    const { query } = this.props;\n    if (query.metricCategory.key > CUSTOM_METRICS) {\n      query.entityQuery = '';\n    }\n\n    this.setState({\n      availableMetrics: [],\n      allMetrics: [],\n      groups: [],\n    });\n\n    this.resetEntityTypeSelection();\n    this.resetEntitySelection();\n    this.resetMetricSelection();\n  }\n\n  resetEntityTypeSelection() {\n    const { query } = this.props;\n    query.entityType = {\n      key: null,\n      label: '-',\n    };\n    query.customFilters = [];\n  }\n\n  resetEntitySelection() {\n    const { query } = this.props;\n    query.entity = {};\n    query.group = {};\n    query.showGroupBySecondLevel = false;\n    query.groupbyTagSecondLevelKey = '';\n    query.aggregateGraphs = false;\n    query.aggregationFunction = AggregationFunctions[0];\n    query.hideOriginalGraphs = false;\n    query.filters = [];\n    query.showWarningCantShowAllResults = false;\n    query.showAllMetrics = false;\n    query.canShowAllMetrics = false;\n    query.displayMaxMetricValue = false;\n    query.applicationCallToEntity = '';\n    query.callToEntity = '';\n    query.tagFilterExpression = '';\n    this.resetServices();\n    this.resetEndpoints();\n    this.resetSLO();\n  }\n\n  resetMetricSelection() {\n    const { query } = this.props;\n    query.metric = {};\n    query.timeShift = '';\n    query.timeShiftIsValid = true;\n    query.showWarningCantShowAllResults = false;\n    query.showAllMetrics = false;\n    query.labelFormat = '';\n    query.freeTextMetrics = '';\n    query.useFreeTextMetrics = false;\n  }\n\n  resetServices() {\n    this.props.query.service = {};\n  }\n\n  resetEndpoints() {\n    this.props.query.endpoint = {};\n  }\n\n  resetSLO() {\n    const { query } = this.props;\n    query.sloValue = '';\n    query.sloReport = {};\n  }\n\n  render() {\n    const { query, onCategoryChange } = this;\n    const categories = this.allowInfraExplore\n      ? metricCategories\n      : metricCategories.filter((category) => category.key !== INFRASTRUCTURE_EXPLORE);\n\n    return (\n      <div className={'gf-form-group'}>\n        <div className={'gf-form'}>\n          <FormSelect\n            queryKeyword\n            inputWidth={0}\n            label={'Category'}\n            tooltip={'Select a metric category.'}\n            value={query.metricCategory}\n            options={categories}\n            onChange={onCategoryChange}\n          />\n        </div>\n\n        {query.metricCategory.key === BUILT_IN_METRICS && (\n          <Infrastructure\n            query={query}\n            queryTypes={this.state.queryTypes}\n            datasource={this.props.datasource}\n            onRunQuery={this.props.onRunQuery}\n            onChange={this.props.onChange}\n            updateMetrics={this.updateMetrics}\n            loadEntityTypes={this.loadEntityTypes}\n            updateQueryTypes={this.updateQueryTypes}\n          />\n        )}\n\n        {query.metricCategory.key === CUSTOM_METRICS && (\n          <Infrastructure\n            query={query}\n            queryTypes={this.state.queryTypes}\n            datasource={this.props.datasource}\n            onRunQuery={this.props.onRunQuery}\n            onChange={this.props.onChange}\n            updateMetrics={this.updateMetrics}\n            loadEntityTypes={this.loadEntityTypes}\n            updateQueryTypes={this.updateQueryTypes}\n          />\n        )}\n\n        {query.metricCategory.key === INFRASTRUCTURE_EXPLORE && (\n          <Explore\n            query={query}\n            queryTypes={this.state.queryTypes}\n            datasource={this.props.datasource}\n            onRunQuery={this.props.onRunQuery}\n            onChange={this.props.onChange}\n            updateMetrics={this.updateMetrics}\n            updateQueryTypes={this.updateQueryTypes}\n          />\n        )}\n\n        {query.metricCategory.key === ANALYZE_APPLICATION_METRICS && (\n          <ApplicationCallsMetrics\n            query={query}\n            onRunQuery={this.props.onRunQuery}\n            onChange={this.props.onChange}\n            updateMetrics={this.updateMetrics}\n            groups={this.state.groups}\n            updateGroups={this.updateGroups}\n            datasource={this.props.datasource}\n          />\n        )}\n\n        {query.metricCategory.key === ANALYZE_WEBSITE_METRICS && (\n          <WebsiteMetrics\n            query={query}\n            onRunQuery={this.props.onRunQuery}\n            onChange={this.props.onChange}\n            updateMetrics={this.updateMetrics}\n            groups={this.state.groups}\n            updateGroups={this.updateGroups}\n            filterMetricsOnType={this.filterMetricsOnType}\n            datasource={this.props.datasource}\n          />\n        )}\n\n        {query.metricCategory.key === APPLICATION_SERVICE_ENDPOINT_METRICS && (\n          <ApplicationServiceEndpointMetrics\n            query={query}\n            onRunQuery={this.props.onRunQuery}\n            onChange={this.props.onChange}\n            updateMetrics={this.updateMetrics}\n            datasource={this.props.datasource}\n          />\n        )}\n\n        {query.metricCategory.key === SLO_INFORMATION && (\n          <SloInformation\n            query={query}\n            onRunQuery={this.props.onRunQuery}\n            onChange={this.props.onChange}\n            datasource={this.props.datasource}\n          />\n        )}\n\n        {query.metricCategory.key !== SLO_INFORMATION && query.metricCategory.key !== INFRASTRUCTURE_EXPLORE && (\n          <Metric\n            query={query}\n            onChange={this.props.onChange}\n            onRunQuery={this.props.onRunQuery}\n            updateMetrics={this.updateMetrics}\n            availableMetrics={this.state.availableMetrics}\n            datasource={this.props.datasource}\n          />\n        )}\n\n        {query.metricCategory.key === CUSTOM_METRICS && (\n          <MetricFilter\n            query={query}\n            onChange={this.props.onChange}\n            onRunQuery={this.props.onRunQuery}\n            onFilterChange={this.onMetricsFilter}\n            availableMetrics={this.state.availableMetrics}\n            datasource={this.props.datasource}\n          />\n        )}\n\n        {(query.metricCategory.key === ANALYZE_APPLICATION_METRICS ||\n          query.metricCategory.key === ANALYZE_WEBSITE_METRICS) && (\n          <Filters\n            query={query}\n            onChange={this.props.onChange}\n            onRunQuery={this.props.onRunQuery}\n            datasource={this.props.datasource}\n            groups={this.state.groups}\n          />\n        )}\n\n        <AdvancedSettings\n          query={query}\n          onRunQuery={this.props.onRunQuery}\n          onChange={this.props.onChange}\n          loadEntityTypes={this.loadEntityTypes}\n        />\n\n        <Badge text={'3.3.1'} color={'blue'} />\n      </div>\n    );\n  }\n}\n","import { InstanaOptions } from './types/instana_options';\nimport { DataSourcePlugin } from '@grafana/data';\nimport { DataSource } from './datasources/DataSource';\nimport { ConfigEditor } from './components/ConfigEditor';\nimport { QueryEditor } from './components/QueryEditor';\nimport { InstanaQuery } from './types/instana_query';\n\nexport const plugin = new DataSourcePlugin<DataSource, InstanaQuery, InstanaOptions>(DataSource)\n  .setConfigEditor(ConfigEditor)\n  .setQueryEditor(QueryEditor);\n"],"sourceRoot":""}